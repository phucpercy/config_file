/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		8: 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push([760,10,11]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ 10:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CipherType; });
var CipherType;
(function (CipherType) {
    CipherType[CipherType["Login"] = 1] = "Login";
    CipherType[CipherType["SecureNote"] = 2] = "SecureNote";
    CipherType[CipherType["Card"] = 3] = "Card";
    CipherType[CipherType["Identity"] = 4] = "Identity";
})(CipherType || (CipherType = {}));


/***/ }),

/***/ 100:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginUriView; });
/* harmony import */ var _enums_uriMatchType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);
/* harmony import */ var _misc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);


const CanLaunchWhitelist = [
    'https://',
    'http://',
    'ssh://',
    'ftp://',
    'sftp://',
    'irc://',
    'vnc://',
    // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri
    'rdp://',
    'ms-rd:',
    'chrome://',
    'iosapp://',
    'androidapp://',
];
class LoginUriView {
    // tslint:enable
    constructor(u) {
        this.match = null;
        // tslint:disable
        this._uri = null;
        this._domain = null;
        this._hostname = null;
        this._host = null;
        this._canLaunch = null;
        if (!u) {
            return;
        }
        this.match = u.match;
    }
    get uri() {
        return this._uri;
    }
    set uri(value) {
        this._uri = value;
        this._domain = null;
        this._canLaunch = null;
    }
    get domain() {
        if (this._domain == null && this.uri != null) {
            this._domain = _misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].getDomain(this.uri);
            if (this._domain === '') {
                this._domain = null;
            }
        }
        return this._domain;
    }
    get hostname() {
        if (this.match === _enums_uriMatchType__WEBPACK_IMPORTED_MODULE_0__[/* UriMatchType */ "a"].RegularExpression) {
            return null;
        }
        if (this._hostname == null && this.uri != null) {
            this._hostname = _misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].getHostname(this.uri);
            if (this._hostname === '') {
                this._hostname = null;
            }
        }
        return this._hostname;
    }
    get host() {
        if (this.match === _enums_uriMatchType__WEBPACK_IMPORTED_MODULE_0__[/* UriMatchType */ "a"].RegularExpression) {
            return null;
        }
        if (this._host == null && this.uri != null) {
            this._host = _misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].getHost(this.uri);
            if (this._host === '') {
                this._host = null;
            }
        }
        return this._host;
    }
    get hostnameOrUri() {
        return this.hostname != null ? this.hostname : this.uri;
    }
    get hostOrUri() {
        return this.host != null ? this.host : this.uri;
    }
    get isWebsite() {
        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0 ||
            (this.uri.indexOf('://') < 0 && _misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].tldEndingRegex.test(this.uri)));
    }
    get canLaunch() {
        if (this._canLaunch != null) {
            return this._canLaunch;
        }
        if (this.uri != null && this.match !== _enums_uriMatchType__WEBPACK_IMPORTED_MODULE_0__[/* UriMatchType */ "a"].RegularExpression) {
            const uri = this.launchUri;
            for (let i = 0; i < CanLaunchWhitelist.length; i++) {
                if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {
                    this._canLaunch = true;
                    return this._canLaunch;
                }
            }
        }
        this._canLaunch = false;
        return this._canLaunch;
    }
    get launchUri() {
        return this.uri.indexOf('://') < 0 && _misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].tldEndingRegex.test(this.uri) ? ('http://' + this.uri) : this.uri;
    }
}


/***/ }),

/***/ 106:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SafariApp; });
/* harmony import */ var _browserApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);

class SafariApp {
    static sendMessageToApp(command, data = null, resolveNow = false) {
        if (!_browserApi__WEBPACK_IMPORTED_MODULE_0__[/* BrowserApi */ "a"].isSafariApi) {
            return Promise.resolve(null);
        }
        return new Promise(resolve => {
            const now = new Date();
            const messageId = now.getTime().toString() + '_' + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);
            browser.runtime.sendNativeMessage('com.bitwarden.desktop', {
                id: messageId,
                command: command,
                data: data,
                responseData: null,
            }, (response) => {
                resolve(response);
            });
        });
    }
}


/***/ }),

/***/ 107:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CardView; });
/* harmony import */ var _itemView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76);
/* harmony import */ var _enums_linkedIdType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19);
/* harmony import */ var _misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



class CardView extends _itemView__WEBPACK_IMPORTED_MODULE_0__[/* ItemView */ "a"] {
    // tslint:enable
    constructor(c) {
        super();
        this.cardholderName = null;
        this.expMonth = null;
        this.expYear = null;
        this.code = null;
        // tslint:disable
        this._brand = null;
        this._number = null;
        this._subTitle = null;
    }
    get maskedCode() {
        return this.code != null ? '•'.repeat(this.code.length) : null;
    }
    get maskedNumber() {
        return this.number != null ? '•'.repeat(this.number.length) : null;
    }
    get brand() {
        return this._brand;
    }
    set brand(value) {
        this._brand = value;
        this._subTitle = null;
    }
    get number() {
        return this._number;
    }
    set number(value) {
        this._number = value;
        this._subTitle = null;
    }
    get subTitle() {
        if (this._subTitle == null) {
            this._subTitle = this.brand;
            if (this.number != null && this.number.length >= 4) {
                if (this._subTitle != null && this._subTitle !== '') {
                    this._subTitle += ', ';
                }
                else {
                    this._subTitle = '';
                }
                // Show last 5 on amex, last 4 for all others
                const count = this.number.length >= 5 && this.number.match(new RegExp('^3[47]')) != null ? 5 : 4;
                this._subTitle += ('*' + this.number.substr(this.number.length - count));
            }
        }
        return this._subTitle;
    }
    get expiration() {
        if (!this.expMonth && !this.expYear) {
            return null;
        }
        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';
        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));
        return exp;
    }
    formatYear(year) {
        return year.length === 2 ? '20' + year : year;
    }
}
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_2__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_1__[/* CardLinkedId */ "a"].CardholderName),
    __metadata("design:type", String)
], CardView.prototype, "cardholderName", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_2__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_1__[/* CardLinkedId */ "a"].ExpMonth, 'expirationMonth'),
    __metadata("design:type", String)
], CardView.prototype, "expMonth", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_2__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_1__[/* CardLinkedId */ "a"].ExpYear, 'expirationYear'),
    __metadata("design:type", String)
], CardView.prototype, "expYear", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_2__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_1__[/* CardLinkedId */ "a"].Code, 'securityCode'),
    __metadata("design:type", String)
], CardView.prototype, "code", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_2__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_1__[/* CardLinkedId */ "a"].Brand),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], CardView.prototype, "brand", null);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_2__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_1__[/* CardLinkedId */ "a"].Number),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], CardView.prototype, "number", null);


/***/ }),

/***/ 108:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IdentityView; });
/* harmony import */ var _itemView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76);
/* harmony import */ var _misc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19);
/* harmony import */ var _misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




class IdentityView extends _itemView__WEBPACK_IMPORTED_MODULE_0__[/* ItemView */ "a"] {
    // tslint:enable
    constructor(i) {
        super();
        this.title = null;
        this.middleName = null;
        this.address1 = null;
        this.address2 = null;
        this.address3 = null;
        this.city = null;
        this.state = null;
        this.postalCode = null;
        this.country = null;
        this.company = null;
        this.email = null;
        this.phone = null;
        this.ssn = null;
        this.username = null;
        this.passportNumber = null;
        this.licenseNumber = null;
        // tslint:disable
        this._firstName = null;
        this._lastName = null;
        this._subTitle = null;
    }
    get firstName() {
        return this._firstName;
    }
    set firstName(value) {
        this._firstName = value;
        this._subTitle = null;
    }
    get lastName() {
        return this._lastName;
    }
    set lastName(value) {
        this._lastName = value;
        this._subTitle = null;
    }
    get subTitle() {
        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {
            this._subTitle = '';
            if (this.firstName != null) {
                this._subTitle = this.firstName;
            }
            if (this.lastName != null) {
                if (this._subTitle !== '') {
                    this._subTitle += ' ';
                }
                this._subTitle += this.lastName;
            }
        }
        return this._subTitle;
    }
    get fullName() {
        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {
            let name = '';
            if (this.title != null) {
                name += (this.title + ' ');
            }
            if (this.firstName != null) {
                name += (this.firstName + ' ');
            }
            if (this.middleName != null) {
                name += (this.middleName + ' ');
            }
            if (this.lastName != null) {
                name += this.lastName;
            }
            return name.trim();
        }
        return null;
    }
    get fullAddress() {
        let address = this.address1;
        if (!_misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].isNullOrWhitespace(this.address2)) {
            if (!_misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].isNullOrWhitespace(address)) {
                address += ', ';
            }
            address += this.address2;
        }
        if (!_misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].isNullOrWhitespace(this.address3)) {
            if (!_misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].isNullOrWhitespace(address)) {
                address += ', ';
            }
            address += this.address3;
        }
        return address;
    }
    get fullAddressPart2() {
        if (this.city == null && this.state == null && this.postalCode == null) {
            return null;
        }
        const city = this.city || '-';
        const state = this.state;
        const postalCode = this.postalCode || '-';
        let addressPart2 = city;
        if (!_misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].isNullOrWhitespace(state)) {
            addressPart2 += ', ' + state;
        }
        addressPart2 += ', ' + postalCode;
        return addressPart2;
    }
}
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Title),
    __metadata("design:type", String)
], IdentityView.prototype, "title", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].MiddleName),
    __metadata("design:type", String)
], IdentityView.prototype, "middleName", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Address1),
    __metadata("design:type", String)
], IdentityView.prototype, "address1", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Address2),
    __metadata("design:type", String)
], IdentityView.prototype, "address2", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Address3),
    __metadata("design:type", String)
], IdentityView.prototype, "address3", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].City, 'cityTown'),
    __metadata("design:type", String)
], IdentityView.prototype, "city", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].State, 'stateProvince'),
    __metadata("design:type", String)
], IdentityView.prototype, "state", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].PostalCode, 'zipPostalCode'),
    __metadata("design:type", String)
], IdentityView.prototype, "postalCode", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Country),
    __metadata("design:type", String)
], IdentityView.prototype, "country", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Company),
    __metadata("design:type", String)
], IdentityView.prototype, "company", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Email),
    __metadata("design:type", String)
], IdentityView.prototype, "email", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Phone),
    __metadata("design:type", String)
], IdentityView.prototype, "phone", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Ssn),
    __metadata("design:type", String)
], IdentityView.prototype, "ssn", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].Username),
    __metadata("design:type", String)
], IdentityView.prototype, "username", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].PassportNumber),
    __metadata("design:type", String)
], IdentityView.prototype, "passportNumber", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].LicenseNumber),
    __metadata("design:type", String)
], IdentityView.prototype, "licenseNumber", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].FirstName),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], IdentityView.prototype, "firstName", null);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].LastName),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], IdentityView.prototype, "lastName", null);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* IdentityLinkedId */ "b"].FullName),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [])
], IdentityView.prototype, "fullName", null);


/***/ }),

/***/ 114:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SecureNoteView; });
/* harmony import */ var _itemView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76);

class SecureNoteView extends _itemView__WEBPACK_IMPORTED_MODULE_0__[/* ItemView */ "a"] {
    constructor(n) {
        super();
        this.type = null;
        if (!n) {
            return;
        }
        this.type = n.type;
    }
    get subTitle() {
        return null;
    }
}


/***/ }),

/***/ 116:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KeysRequest; });
class KeysRequest {
    constructor(publicKey, encryptedPrivateKey) {
        this.publicKey = publicKey;
        this.encryptedPrivateKey = encryptedPrivateKey;
    }
}


/***/ }),

/***/ 117:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FolderView; });
class FolderView {
    constructor(f) {
        this.id = null;
        this.name = null;
        this.revisionDate = null;
        if (!f) {
            return;
        }
        this.id = f.id;
        this.revisionDate = f.revisionDate;
    }
}


/***/ }),

/***/ 13:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BrowserApi; });
/* harmony import */ var _safariApp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(106);
/* harmony import */ var jslib_common_misc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


class BrowserApi {
    static getTabFromCurrentWindowId() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield BrowserApi.tabsQueryFirst({
                active: true,
                windowId: chrome.windows.WINDOW_ID_CURRENT,
            });
        });
    }
    static getTabFromCurrentWindow() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield BrowserApi.tabsQueryFirst({
                active: true,
                currentWindow: true,
            });
        });
    }
    static getActiveTabs() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield BrowserApi.tabsQuery({
                active: true,
            });
        });
    }
    static tabsQuery(options) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise(resolve => {
                chrome.tabs.query(options, (tabs) => {
                    resolve(tabs);
                });
            });
        });
    }
    static tabsQueryFirst(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const tabs = yield BrowserApi.tabsQuery(options);
            if (tabs.length > 0) {
                return tabs[0];
            }
            return null;
        });
    }
    static tabSendMessageData(tab, command, data = null) {
        const obj = {
            command: command,
        };
        if (data != null) {
            obj.data = data;
        }
        return BrowserApi.tabSendMessage(tab, obj);
    }
    static tabSendMessage(tab, obj, options = null) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!tab || !tab.id) {
                return;
            }
            return new Promise(resolve => {
                chrome.tabs.sendMessage(tab.id, obj, options, () => {
                    if (chrome.runtime.lastError) {
                        // Some error happened
                    }
                    resolve();
                });
            });
        });
    }
    static getBackgroundPage() {
        return chrome.extension.getBackgroundPage();
    }
    static getApplicationVersion() {
        return chrome.runtime.getManifest().version;
    }
    static isPopupOpen() {
        return __awaiter(this, void 0, void 0, function* () {
            return Promise.resolve(chrome.extension.getViews({ type: 'popup' }).length > 0);
        });
    }
    static createNewTab(url, extensionPage = false, active = true) {
        chrome.tabs.create({ url: url, active: active });
    }
    static messageListener(name, callback) {
        chrome.runtime.onMessage.addListener((msg, sender, response) => {
            callback(msg, sender, response);
        });
    }
    static closeLoginTab() {
        return __awaiter(this, void 0, void 0, function* () {
            const tabs = yield BrowserApi.tabsQuery({
                active: true,
                title: 'Bitwarden',
                windowType: 'normal',
                currentWindow: true,
            });
            if (tabs.length === 0) {
                return;
            }
            const tabToClose = tabs[tabs.length - 1].id;
            chrome.tabs.remove(tabToClose);
        });
    }
    static focusSpecifiedTab(tabId) {
        return __awaiter(this, void 0, void 0, function* () {
            chrome.tabs.update(tabId, { active: true, highlighted: true });
        });
    }
    static closePopup(win) {
        if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {
            // Reactivating the active tab dismisses the popup tab. The promise final
            // condition is only called if the popup wasn't already dismissed (future proofing).
            // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604
            browser.tabs.update({ active: true }).finally(win.close);
        }
        else {
            win.close();
        }
    }
    static downloadFile(win, blobData, blobOptions, fileName) {
        if (BrowserApi.isSafariApi) {
            const type = blobOptions != null ? blobOptions.type : null;
            let data = null;
            if (type === 'text/plain' && typeof (blobData) === 'string') {
                data = blobData;
            }
            else {
                data = jslib_common_misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].fromBufferToB64(blobData);
            }
            _safariApp__WEBPACK_IMPORTED_MODULE_0__[/* SafariApp */ "a"].sendMessageToApp('downloadFile', JSON.stringify({
                blobData: data,
                blobOptions: blobOptions,
                fileName: fileName,
            }), true);
        }
        else {
            const blob = new Blob([blobData], blobOptions);
            if (navigator.msSaveOrOpenBlob) {
                navigator.msSaveBlob(blob, fileName);
            }
            else {
                const a = win.document.createElement('a');
                a.href = URL.createObjectURL(blob);
                a.download = fileName;
                win.document.body.appendChild(a);
                a.click();
                win.document.body.removeChild(a);
            }
        }
    }
    static gaFilter() {
        return "production" !== 'production';
    }
    static getUILanguage(win) {
        return chrome.i18n.getUILanguage();
    }
    static reloadExtension(win) {
        if (win != null) {
            return win.location.reload(true);
        }
        else {
            return chrome.runtime.reload();
        }
    }
    static reloadOpenWindows() {
        const views = chrome.extension.getViews();
        views.filter(w => w.location.href != null).forEach(w => {
            w.location.reload();
        });
    }
    static connectNative(application) {
        if (BrowserApi.isWebExtensionsApi) {
            return browser.runtime.connectNative(application);
        }
        else if (BrowserApi.isChromeApi) {
            return chrome.runtime.connectNative(application);
        }
    }
    static requestPermission(permission) {
        if (BrowserApi.isWebExtensionsApi) {
            return browser.permissions.request(permission);
        }
        return new Promise((resolve, reject) => {
            chrome.permissions.request(permission, resolve);
        });
    }
    static getPlatformInfo() {
        if (BrowserApi.isWebExtensionsApi) {
            return browser.runtime.getPlatformInfo();
        }
        return new Promise(resolve => {
            chrome.runtime.getPlatformInfo(resolve);
        });
    }
}
BrowserApi.isWebExtensionsApi = (typeof browser !== 'undefined');
BrowserApi.isSafariApi = navigator.userAgent.indexOf(' Safari/') !== -1 &&
    navigator.userAgent.indexOf(' Chrome/') === -1 &&
    navigator.userAgent.indexOf(' Chromium/') === -1;
BrowserApi.isChromeApi = !BrowserApi.isSafariApi && (typeof chrome !== 'undefined');
BrowserApi.isFirefoxOnAndroid = navigator.userAgent.indexOf('Firefox/') !== -1 &&
    navigator.userAgent.indexOf('Android') !== -1;


/***/ }),

/***/ 137:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OrganizationUserStatusType; });
var OrganizationUserStatusType;
(function (OrganizationUserStatusType) {
    OrganizationUserStatusType[OrganizationUserStatusType["Invited"] = 0] = "Invited";
    OrganizationUserStatusType[OrganizationUserStatusType["Accepted"] = 1] = "Accepted";
    OrganizationUserStatusType[OrganizationUserStatusType["Confirmed"] = 2] = "Confirmed";
})(OrganizationUserStatusType || (OrganizationUserStatusType = {}));


/***/ }),

/***/ 138:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SendFileView; });
class SendFileView {
    constructor(f) {
        this.id = null;
        this.size = null;
        this.sizeName = null;
        this.fileName = null;
        if (!f) {
            return;
        }
        this.id = f.id;
        this.size = f.size;
        this.sizeName = f.sizeName;
    }
    get fileSize() {
        try {
            if (this.size != null) {
                return parseInt(this.size, null);
            }
        }
        catch (_a) {
            // Invalid file size.
        }
        return 0;
    }
}


/***/ }),

/***/ 139:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SendTextView; });
class SendTextView {
    constructor(t) {
        this.text = null;
        if (!t) {
            return;
        }
        this.hidden = t.hidden;
    }
    get maskedText() {
        return this.text != null ? '••••••••' : null;
    }
}


/***/ }),

/***/ 14:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TwoFactorProviderType; });
var TwoFactorProviderType;
(function (TwoFactorProviderType) {
    TwoFactorProviderType[TwoFactorProviderType["Authenticator"] = 0] = "Authenticator";
    TwoFactorProviderType[TwoFactorProviderType["Email"] = 1] = "Email";
    TwoFactorProviderType[TwoFactorProviderType["Duo"] = 2] = "Duo";
    TwoFactorProviderType[TwoFactorProviderType["Yubikey"] = 3] = "Yubikey";
    TwoFactorProviderType[TwoFactorProviderType["U2f"] = 4] = "U2f";
    TwoFactorProviderType[TwoFactorProviderType["Remember"] = 5] = "Remember";
    TwoFactorProviderType[TwoFactorProviderType["OrganizationDuo"] = 6] = "OrganizationDuo";
    TwoFactorProviderType[TwoFactorProviderType["WebAuthn"] = 7] = "WebAuthn";
})(TwoFactorProviderType || (TwoFactorProviderType = {}));


/***/ }),

/***/ 151:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FieldView; });
class FieldView {
    constructor(f) {
        this.name = null;
        this.value = null;
        this.type = null;
        this.newField = false; // Marks if the field is new and hasn't been saved
        this.showValue = false;
        this.linkedId = null;
        if (!f) {
            return;
        }
        this.type = f.type;
        this.linkedId = f.linkedId;
    }
    get maskedValue() {
        return this.value != null ? '••••••••' : null;
    }
}


/***/ }),

/***/ 154:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VerificationType; });
var VerificationType;
(function (VerificationType) {
    VerificationType[VerificationType["MasterPassword"] = 0] = "MasterPassword";
    VerificationType[VerificationType["OTP"] = 1] = "OTP";
})(VerificationType || (VerificationType = {}));


/***/ }),

/***/ 16:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MessagingService; });
class MessagingService {
}


/***/ }),

/***/ 170:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SecretVerificationRequest; });
class SecretVerificationRequest {
}


/***/ }),

/***/ 171:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KdfType; });
var KdfType;
(function (KdfType) {
    KdfType[KdfType["PBKDF2_SHA256"] = 0] = "PBKDF2_SHA256";
})(KdfType || (KdfType = {}));


/***/ }),

/***/ 172:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KeyConnectorUserKeyRequest; });
class KeyConnectorUserKeyRequest {
    constructor(key) {
        this.key = key;
    }
}


/***/ }),

/***/ 19:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return LoginLinkedId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CardLinkedId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return IdentityLinkedId; });
// LoginView
var LoginLinkedId;
(function (LoginLinkedId) {
    LoginLinkedId[LoginLinkedId["Username"] = 100] = "Username";
    LoginLinkedId[LoginLinkedId["Password"] = 101] = "Password";
})(LoginLinkedId || (LoginLinkedId = {}));
// CardView
var CardLinkedId;
(function (CardLinkedId) {
    CardLinkedId[CardLinkedId["CardholderName"] = 300] = "CardholderName";
    CardLinkedId[CardLinkedId["ExpMonth"] = 301] = "ExpMonth";
    CardLinkedId[CardLinkedId["ExpYear"] = 302] = "ExpYear";
    CardLinkedId[CardLinkedId["Code"] = 303] = "Code";
    CardLinkedId[CardLinkedId["Brand"] = 304] = "Brand";
    CardLinkedId[CardLinkedId["Number"] = 305] = "Number";
})(CardLinkedId || (CardLinkedId = {}));
// IdentityView
var IdentityLinkedId;
(function (IdentityLinkedId) {
    IdentityLinkedId[IdentityLinkedId["Title"] = 400] = "Title";
    IdentityLinkedId[IdentityLinkedId["MiddleName"] = 401] = "MiddleName";
    IdentityLinkedId[IdentityLinkedId["Address1"] = 402] = "Address1";
    IdentityLinkedId[IdentityLinkedId["Address2"] = 403] = "Address2";
    IdentityLinkedId[IdentityLinkedId["Address3"] = 404] = "Address3";
    IdentityLinkedId[IdentityLinkedId["City"] = 405] = "City";
    IdentityLinkedId[IdentityLinkedId["State"] = 406] = "State";
    IdentityLinkedId[IdentityLinkedId["PostalCode"] = 407] = "PostalCode";
    IdentityLinkedId[IdentityLinkedId["Country"] = 408] = "Country";
    IdentityLinkedId[IdentityLinkedId["Company"] = 409] = "Company";
    IdentityLinkedId[IdentityLinkedId["Email"] = 410] = "Email";
    IdentityLinkedId[IdentityLinkedId["Phone"] = 411] = "Phone";
    IdentityLinkedId[IdentityLinkedId["Ssn"] = 412] = "Ssn";
    IdentityLinkedId[IdentityLinkedId["Username"] = 413] = "Username";
    IdentityLinkedId[IdentityLinkedId["PassportNumber"] = 414] = "PassportNumber";
    IdentityLinkedId[IdentityLinkedId["LicenseNumber"] = 415] = "LicenseNumber";
    IdentityLinkedId[IdentityLinkedId["FirstName"] = 416] = "FirstName";
    IdentityLinkedId[IdentityLinkedId["LastName"] = 417] = "LastName";
    IdentityLinkedId[IdentityLinkedId["FullName"] = 418] = "FullName";
})(IdentityLinkedId || (IdentityLinkedId = {}));


/***/ }),

/***/ 194:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ TwoFactorProviders; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ auth_service_AuthService; });

// EXTERNAL MODULE: ./jslib/common/src/enums/hashPurpose.ts
var hashPurpose = __webpack_require__(81);

// EXTERNAL MODULE: ./jslib/common/src/enums/twoFactorProviderType.ts
var twoFactorProviderType = __webpack_require__(14);

// CONCATENATED MODULE: ./jslib/common/src/models/domain/authResult.ts
class AuthResult {
    constructor() {
        this.twoFactor = false;
        this.captchaSiteKey = '';
        this.resetMasterPassword = false;
        this.forcePasswordReset = false;
        this.twoFactorProviders = null;
    }
}

// CONCATENATED MODULE: ./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts
class SetKeyConnectorKeyRequest {
    constructor(key, kdf, kdfIterations, orgIdentifier, keys) {
        this.key = key;
        this.kdf = kdf;
        this.kdfIterations = kdfIterations;
        this.orgIdentifier = orgIdentifier;
        this.keys = keys;
    }
}

// CONCATENATED MODULE: ./jslib/common/src/models/request/deviceRequest.ts
class DeviceRequest {
    constructor(appId, platformUtilsService) {
        this.type = platformUtilsService.getDevice();
        this.name = platformUtilsService.getDeviceString();
        this.identifier = appId;
        this.pushToken = null;
    }
}

// EXTERNAL MODULE: ./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts
var keyConnectorUserKeyRequest = __webpack_require__(172);

// EXTERNAL MODULE: ./jslib/common/src/models/request/keysRequest.ts
var keysRequest = __webpack_require__(116);

// CONCATENATED MODULE: ./jslib/common/src/models/request/preloginRequest.ts
class PreloginRequest {
    constructor(email) {
        this.email = email;
    }
}

// EXTERNAL MODULE: ./jslib/common/src/misc/utils.ts
var utils = __webpack_require__(6);

// CONCATENATED MODULE: ./jslib/common/src/models/request/tokenRequest.ts

class tokenRequest_TokenRequest {
    constructor(credentials, codes, clientIdClientSecret, provider, token, remember, captchaResponse, device) {
        this.provider = provider;
        this.token = token;
        this.remember = remember;
        this.captchaResponse = captchaResponse;
        if (credentials != null && credentials.length > 1) {
            this.email = credentials[0];
            this.masterPasswordHash = credentials[1];
        }
        else if (codes != null && codes.length > 2) {
            this.code = codes[0];
            this.codeVerifier = codes[1];
            this.redirectUri = codes[2];
        }
        else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {
            this.clientId = clientIdClientSecret[0];
            this.clientSecret = clientIdClientSecret[1];
        }
        this.device = device != null ? device : null;
    }
    toIdentityToken(clientId) {
        const obj = {
            scope: 'api offline_access',
            client_id: clientId,
        };
        if (this.clientSecret != null) {
            obj.scope = clientId.startsWith('organization') ? 'api.organization' : 'api';
            obj.grant_type = 'client_credentials';
            obj.client_secret = this.clientSecret;
        }
        else if (this.masterPasswordHash != null && this.email != null) {
            obj.grant_type = 'password';
            obj.username = this.email;
            obj.password = this.masterPasswordHash;
        }
        else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {
            obj.grant_type = 'authorization_code';
            obj.code = this.code;
            obj.code_verifier = this.codeVerifier;
            obj.redirect_uri = this.redirectUri;
        }
        else {
            throw new Error('must provide credentials or codes');
        }
        if (this.device) {
            obj.deviceType = this.device.type;
            obj.deviceIdentifier = this.device.identifier;
            obj.deviceName = this.device.name;
            // no push tokens for browser apps yet
            // obj.devicePushToken = this.device.pushToken;
        }
        if (this.token && this.provider != null) {
            obj.twoFactorToken = this.token;
            obj.twoFactorProvider = this.provider;
            obj.twoFactorRemember = this.remember ? '1' : '0';
        }
        if (this.captchaResponse != null) {
            obj.captchaResponse = this.captchaResponse;
        }
        return obj;
    }
    alterIdentityTokenHeaders(headers) {
        if (this.clientSecret == null && this.masterPasswordHash != null && this.email != null) {
            headers.set('Auth-Email', utils["a" /* Utils */].fromUtf8ToUrlB64(this.email));
        }
    }
}

// CONCATENATED MODULE: ./jslib/common/src/services/auth.service.ts
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










const TwoFactorProviders = {
    [twoFactorProviderType["a" /* TwoFactorProviderType */].Authenticator]: {
        type: twoFactorProviderType["a" /* TwoFactorProviderType */].Authenticator,
        name: null,
        description: null,
        priority: 1,
        sort: 1,
        premium: false,
    },
    [twoFactorProviderType["a" /* TwoFactorProviderType */].Yubikey]: {
        type: twoFactorProviderType["a" /* TwoFactorProviderType */].Yubikey,
        name: null,
        description: null,
        priority: 3,
        sort: 2,
        premium: true,
    },
    [twoFactorProviderType["a" /* TwoFactorProviderType */].Duo]: {
        type: twoFactorProviderType["a" /* TwoFactorProviderType */].Duo,
        name: 'Duo',
        description: null,
        priority: 2,
        sort: 3,
        premium: true,
    },
    [twoFactorProviderType["a" /* TwoFactorProviderType */].OrganizationDuo]: {
        type: twoFactorProviderType["a" /* TwoFactorProviderType */].OrganizationDuo,
        name: 'Duo (Organization)',
        description: null,
        priority: 10,
        sort: 4,
        premium: false,
    },
    [twoFactorProviderType["a" /* TwoFactorProviderType */].Email]: {
        type: twoFactorProviderType["a" /* TwoFactorProviderType */].Email,
        name: null,
        description: null,
        priority: 0,
        sort: 6,
        premium: false,
    },
    [twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn]: {
        type: twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn,
        name: null,
        description: null,
        priority: 4,
        sort: 5,
        premium: true,
    },
};
class auth_service_AuthService {
    constructor(cryptoService, apiService, userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService, vaultTimeoutService, logService, cryptoFunctionService, environmentService, keyConnectorService, setCryptoKeys = true) {
        this.cryptoService = cryptoService;
        this.apiService = apiService;
        this.userService = userService;
        this.tokenService = tokenService;
        this.appIdService = appIdService;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.messagingService = messagingService;
        this.vaultTimeoutService = vaultTimeoutService;
        this.logService = logService;
        this.cryptoFunctionService = cryptoFunctionService;
        this.environmentService = environmentService;
        this.keyConnectorService = keyConnectorService;
        this.setCryptoKeys = setCryptoKeys;
        this.selectedTwoFactorProviderType = null;
    }
    init() {
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Email].name = this.i18nService.t('emailTitle');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Email].description = this.i18nService.t('emailDesc');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Authenticator].name = this.i18nService.t('authenticatorAppTitle');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Authenticator].description =
            this.i18nService.t('authenticatorAppDesc');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Duo].description = this.i18nService.t('duoDesc');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].OrganizationDuo].name =
            'Duo (' + this.i18nService.t('organization') + ')';
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].OrganizationDuo].description =
            this.i18nService.t('duoOrganizationDesc');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn].name = this.i18nService.t('webAuthnTitle');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn].description = this.i18nService.t('webAuthnDesc');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Yubikey].name = this.i18nService.t('yubiKeyTitle');
        TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Yubikey].description = this.i18nService.t('yubiKeyDesc');
    }
    logIn(email, masterPassword, captchaToken) {
        return __awaiter(this, void 0, void 0, function* () {
            this.selectedTwoFactorProviderType = null;
            const key = yield this.makePreloginKey(masterPassword, email);
            const hashedPassword = yield this.cryptoService.hashPassword(masterPassword, key);
            const localHashedPassword = yield this.cryptoService.hashPassword(masterPassword, key, hashPurpose["a" /* HashPurpose */].LocalAuthorization);
            return yield this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null, key, null, null, null, captchaToken, null);
        });
    }
    logInSso(code, codeVerifier, redirectUrl, orgId) {
        return __awaiter(this, void 0, void 0, function* () {
            this.selectedTwoFactorProviderType = null;
            return yield this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null, null, null, null, null, null, null, orgId);
        });
    }
    logInApiKey(clientId, clientSecret) {
        return __awaiter(this, void 0, void 0, function* () {
            this.selectedTwoFactorProviderType = null;
            return yield this.logInHelper(null, null, null, null, null, null, clientId, clientSecret, null, null, null, null, null, null);
        });
    }
    logInTwoFactor(twoFactorProvider, twoFactorToken, remember) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.logInHelper(this.email, this.masterPasswordHash, this.localMasterPasswordHash, this.code, this.codeVerifier, this.ssoRedirectUrl, this.clientId, this.clientSecret, this.key, twoFactorProvider, twoFactorToken, remember, this.captchaToken, null);
        });
    }
    logInComplete(email, masterPassword, twoFactorProvider, twoFactorToken, remember, captchaToken) {
        return __awaiter(this, void 0, void 0, function* () {
            this.selectedTwoFactorProviderType = null;
            const key = yield this.makePreloginKey(masterPassword, email);
            const hashedPassword = yield this.cryptoService.hashPassword(masterPassword, key);
            const localHashedPassword = yield this.cryptoService.hashPassword(masterPassword, key, hashPurpose["a" /* HashPurpose */].LocalAuthorization);
            return yield this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null, key, twoFactorProvider, twoFactorToken, remember, captchaToken, null);
        });
    }
    logInSsoComplete(code, codeVerifier, redirectUrl, twoFactorProvider, twoFactorToken, remember) {
        return __awaiter(this, void 0, void 0, function* () {
            this.selectedTwoFactorProviderType = null;
            return yield this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null, null, null, twoFactorProvider, twoFactorToken, remember, null, null);
        });
    }
    logInApiKeyComplete(clientId, clientSecret, twoFactorProvider, twoFactorToken, remember) {
        return __awaiter(this, void 0, void 0, function* () {
            this.selectedTwoFactorProviderType = null;
            return yield this.logInHelper(null, null, null, null, null, null, clientId, clientSecret, null, twoFactorProvider, twoFactorToken, remember, null, null);
        });
    }
    logOut(callback) {
        callback();
        this.messagingService.send('loggedOut');
    }
    getSupportedTwoFactorProviders(win) {
        const providers = [];
        if (this.twoFactorProvidersData == null) {
            return providers;
        }
        if (this.twoFactorProvidersData.has(twoFactorProviderType["a" /* TwoFactorProviderType */].OrganizationDuo) &&
            this.platformUtilsService.supportsDuo()) {
            providers.push(TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].OrganizationDuo]);
        }
        if (this.twoFactorProvidersData.has(twoFactorProviderType["a" /* TwoFactorProviderType */].Authenticator)) {
            providers.push(TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Authenticator]);
        }
        if (this.twoFactorProvidersData.has(twoFactorProviderType["a" /* TwoFactorProviderType */].Yubikey)) {
            providers.push(TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Yubikey]);
        }
        if (this.twoFactorProvidersData.has(twoFactorProviderType["a" /* TwoFactorProviderType */].Duo) && this.platformUtilsService.supportsDuo()) {
            providers.push(TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Duo]);
        }
        if (this.twoFactorProvidersData.has(twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn) && this.platformUtilsService.supportsWebAuthn(win)) {
            providers.push(TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn]);
        }
        if (this.twoFactorProvidersData.has(twoFactorProviderType["a" /* TwoFactorProviderType */].Email)) {
            providers.push(TwoFactorProviders[twoFactorProviderType["a" /* TwoFactorProviderType */].Email]);
        }
        return providers;
    }
    getDefaultTwoFactorProvider(webAuthnSupported) {
        if (this.twoFactorProvidersData == null) {
            return null;
        }
        if (this.selectedTwoFactorProviderType != null &&
            this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)) {
            return this.selectedTwoFactorProviderType;
        }
        let providerType = null;
        let providerPriority = -1;
        this.twoFactorProvidersData.forEach((value, type) => {
            const provider = TwoFactorProviders[type];
            if (provider != null && provider.priority > providerPriority) {
                if (type === twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn && !webAuthnSupported) {
                    return;
                }
                providerType = type;
                providerPriority = provider.priority;
            }
        });
        return providerType;
    }
    makePreloginKey(masterPassword, email) {
        return __awaiter(this, void 0, void 0, function* () {
            email = email.trim().toLowerCase();
            let kdf = null;
            let kdfIterations = null;
            try {
                const preloginResponse = yield this.apiService.postPrelogin(new PreloginRequest(email));
                if (preloginResponse != null) {
                    kdf = preloginResponse.kdf;
                    kdfIterations = preloginResponse.kdfIterations;
                }
            }
            catch (e) {
                if (e == null || e.statusCode !== 404) {
                    throw e;
                }
            }
            return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);
        });
    }
    authingWithApiKey() {
        return this.clientId != null && this.clientSecret != null;
    }
    authingWithSso() {
        return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;
    }
    authingWithPassword() {
        return this.email != null && this.masterPasswordHash != null;
    }
    logInHelper(email, hashedPassword, localHashedPassword, code, codeVerifier, redirectUrl, clientId, clientSecret, key, twoFactorProvider, twoFactorToken, remember, captchaToken, orgId) {
        return __awaiter(this, void 0, void 0, function* () {
            const storedTwoFactorToken = yield this.tokenService.getTwoFactorToken(email);
            const appId = yield this.appIdService.getAppId();
            const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);
            let emailPassword = [];
            let codeCodeVerifier = [];
            let clientIdClientSecret = [null, null];
            if (email != null && hashedPassword != null) {
                emailPassword = [email, hashedPassword];
            }
            else {
                emailPassword = null;
            }
            if (code != null && codeVerifier != null && redirectUrl != null) {
                codeCodeVerifier = [code, codeVerifier, redirectUrl];
            }
            else {
                codeCodeVerifier = null;
            }
            if (clientId != null && clientSecret != null) {
                clientIdClientSecret = [clientId, clientSecret];
            }
            else {
                clientIdClientSecret = null;
            }
            let request;
            if (twoFactorToken != null && twoFactorProvider != null) {
                request = new tokenRequest_TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, twoFactorProvider, twoFactorToken, remember, captchaToken, deviceRequest);
            }
            else if (storedTwoFactorToken != null) {
                request = new tokenRequest_TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, twoFactorProviderType["a" /* TwoFactorProviderType */].Remember, storedTwoFactorToken, false, captchaToken, deviceRequest);
            }
            else {
                request = new tokenRequest_TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, null, null, false, captchaToken, deviceRequest);
            }
            const response = yield this.apiService.postIdentityToken(request);
            this.clearState();
            const result = new AuthResult();
            result.captchaSiteKey = response.siteKey;
            if (!!result.captchaSiteKey) {
                return result;
            }
            result.twoFactor = !!response.twoFactorProviders2;
            if (result.twoFactor) {
                // two factor required
                this.email = email;
                this.masterPasswordHash = hashedPassword;
                this.localMasterPasswordHash = localHashedPassword;
                this.code = code;
                this.codeVerifier = codeVerifier;
                this.ssoRedirectUrl = redirectUrl;
                this.clientId = clientId;
                this.clientSecret = clientSecret;
                this.key = this.setCryptoKeys ? key : null;
                const twoFactorResponse = response;
                this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;
                result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;
                this.captchaToken = twoFactorResponse.captchaToken;
                return result;
            }
            const tokenResponse = response;
            result.resetMasterPassword = tokenResponse.resetMasterPassword;
            result.forcePasswordReset = tokenResponse.forcePasswordReset;
            if (tokenResponse.twoFactorToken != null) {
                yield this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);
            }
            yield this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken, clientIdClientSecret);
            yield this.userService.setInformation(this.tokenService.getUserId(), this.tokenService.getEmail(), tokenResponse.kdf, tokenResponse.kdfIterations);
            if (this.setCryptoKeys) {
                if (key != null) {
                    yield this.cryptoService.setKey(key);
                }
                if (localHashedPassword != null) {
                    yield this.cryptoService.setKeyHash(localHashedPassword);
                }
                // Skip this step during SSO new user flow. No key is returned from server.
                if (code == null || tokenResponse.key != null) {
                    if (tokenResponse.keyConnectorUrl != null) {
                        yield this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);
                    }
                    else if (tokenResponse.apiUseKeyConnector) {
                        const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();
                        yield this.keyConnectorService.getAndSetKey(keyConnectorUrl);
                    }
                    yield this.cryptoService.setEncKey(tokenResponse.key);
                    // User doesn't have a key pair yet (old account), let's generate one for them
                    if (tokenResponse.privateKey == null) {
                        try {
                            const keyPair = yield this.cryptoService.makeKeyPair();
                            yield this.apiService.postAccountKeys(new keysRequest["a" /* KeysRequest */](keyPair[0], keyPair[1].encryptedString));
                            tokenResponse.privateKey = keyPair[1].encryptedString;
                        }
                        catch (e) {
                            this.logService.error(e);
                        }
                    }
                    yield this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);
                }
                else if (tokenResponse.keyConnectorUrl != null) {
                    const password = yield this.cryptoFunctionService.randomBytes(64);
                    const k = yield this.cryptoService.makeKey(utils["a" /* Utils */].fromBufferToB64(password), this.tokenService.getEmail(), tokenResponse.kdf, tokenResponse.kdfIterations);
                    const keyConnectorRequest = new keyConnectorUserKeyRequest["a" /* KeyConnectorUserKeyRequest */](k.encKeyB64);
                    yield this.cryptoService.setKey(k);
                    const encKey = yield this.cryptoService.makeEncKey(k);
                    yield this.cryptoService.setEncKey(encKey[1].encryptedString);
                    const [pubKey, privKey] = yield this.cryptoService.makeKeyPair();
                    try {
                        yield this.apiService.postUserKeyToKeyConnector(tokenResponse.keyConnectorUrl, keyConnectorRequest);
                    }
                    catch (e) {
                        throw new Error('Unable to reach key connector');
                    }
                    const keys = new keysRequest["a" /* KeysRequest */](pubKey, privKey.encryptedString);
                    const setPasswordRequest = new SetKeyConnectorKeyRequest(encKey[1].encryptedString, tokenResponse.kdf, tokenResponse.kdfIterations, orgId, keys);
                    yield this.apiService.postSetKeyConnectorKey(setPasswordRequest);
                }
            }
            if (this.vaultTimeoutService != null) {
                this.vaultTimeoutService.biometricLocked = false;
            }
            this.messagingService.send('loggedIn');
            return result;
        });
    }
    clearState() {
        this.key = null;
        this.email = null;
        this.masterPasswordHash = null;
        this.localMasterPasswordHash = null;
        this.code = null;
        this.codeVerifier = null;
        this.ssoRedirectUrl = null;
        this.clientId = null;
        this.clientSecret = null;
        this.twoFactorProvidersData = null;
        this.selectedTwoFactorProviderType = null;
    }
}


/***/ }),

/***/ 20:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export LinkedMetadata */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return linkedFieldOption; });
class LinkedMetadata {
    constructor(propertyKey, _i18nKey) {
        this.propertyKey = propertyKey;
        this._i18nKey = _i18nKey;
    }
    get i18nKey() {
        var _a;
        return (_a = this._i18nKey) !== null && _a !== void 0 ? _a : this.propertyKey;
    }
}
/**
 * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it
 *    available as a Linked custom field option.
 * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.
 * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name
 *    of the class property will be used as the i18n key.
 */
function linkedFieldOption(id, i18nKey) {
    return (prototype, propertyKey) => {
        if (prototype.linkedFieldOptions == null) {
            prototype.linkedFieldOptions = new Map();
        }
        prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));
    };
}


/***/ }),

/***/ 21:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EncString; });
/* harmony import */ var _enums_encryptionType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28);
/* harmony import */ var _misc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


class EncString {
    constructor(encryptedStringOrType, data, iv, mac) {
        if (data != null) {
            // data and header
            const encType = encryptedStringOrType;
            if (iv != null) {
                this.encryptedString = encType + '.' + iv + '|' + data;
            }
            else {
                this.encryptedString = encType + '.' + data;
            }
            // mac
            if (mac != null) {
                this.encryptedString += ('|' + mac);
            }
            this.encryptionType = encType;
            this.data = data;
            this.iv = iv;
            this.mac = mac;
            return;
        }
        this.encryptedString = encryptedStringOrType;
        if (!this.encryptedString) {
            return;
        }
        const headerPieces = this.encryptedString.split('.');
        let encPieces = null;
        if (headerPieces.length === 2) {
            try {
                this.encryptionType = parseInt(headerPieces[0], null);
                encPieces = headerPieces[1].split('|');
            }
            catch (e) {
                return;
            }
        }
        else {
            encPieces = this.encryptedString.split('|');
            this.encryptionType = encPieces.length === 3 ? _enums_encryptionType__WEBPACK_IMPORTED_MODULE_0__[/* EncryptionType */ "a"].AesCbc128_HmacSha256_B64 :
                _enums_encryptionType__WEBPACK_IMPORTED_MODULE_0__[/* EncryptionType */ "a"].AesCbc256_B64;
        }
        switch (this.encryptionType) {
            case _enums_encryptionType__WEBPACK_IMPORTED_MODULE_0__[/* EncryptionType */ "a"].AesCbc128_HmacSha256_B64:
            case _enums_encryptionType__WEBPACK_IMPORTED_MODULE_0__[/* EncryptionType */ "a"].AesCbc256_HmacSha256_B64:
                if (encPieces.length !== 3) {
                    return;
                }
                this.iv = encPieces[0];
                this.data = encPieces[1];
                this.mac = encPieces[2];
                break;
            case _enums_encryptionType__WEBPACK_IMPORTED_MODULE_0__[/* EncryptionType */ "a"].AesCbc256_B64:
                if (encPieces.length !== 2) {
                    return;
                }
                this.iv = encPieces[0];
                this.data = encPieces[1];
                break;
            case _enums_encryptionType__WEBPACK_IMPORTED_MODULE_0__[/* EncryptionType */ "a"].Rsa2048_OaepSha256_B64:
            case _enums_encryptionType__WEBPACK_IMPORTED_MODULE_0__[/* EncryptionType */ "a"].Rsa2048_OaepSha1_B64:
                if (encPieces.length !== 1) {
                    return;
                }
                this.data = encPieces[0];
                break;
            default:
                return;
        }
    }
    decrypt(orgId, key = null) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.decryptedValue != null) {
                return this.decryptedValue;
            }
            let cryptoService;
            const containerService = _misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].global.bitwardenContainerService;
            if (containerService) {
                cryptoService = containerService.getCryptoService();
            }
            else {
                throw new Error('global bitwardenContainerService not initialized.');
            }
            try {
                if (key == null) {
                    key = yield cryptoService.getOrgKey(orgId);
                }
                this.decryptedValue = yield cryptoService.decryptToUtf8(this, key);
            }
            catch (e) {
                this.decryptedValue = '[error: cannot decrypt]';
            }
            return this.decryptedValue;
        });
    }
}


/***/ }),

/***/ 215:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 215;

/***/ }),

/***/ 222:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SecureNoteType; });
var SecureNoteType;
(function (SecureNoteType) {
    SecureNoteType[SecureNoteType["Generic"] = 0] = "Generic";
})(SecureNoteType || (SecureNoteType = {}));


/***/ }),

/***/ 223:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SendView; });
/* harmony import */ var _misc_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _sendFileView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(138);
/* harmony import */ var _sendTextView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(139);



class SendView {
    constructor(s) {
        this.id = null;
        this.accessId = null;
        this.name = null;
        this.notes = null;
        this.type = null;
        this.text = new _sendTextView__WEBPACK_IMPORTED_MODULE_2__[/* SendTextView */ "a"]();
        this.file = new _sendFileView__WEBPACK_IMPORTED_MODULE_1__[/* SendFileView */ "a"]();
        this.maxAccessCount = null;
        this.accessCount = 0;
        this.revisionDate = null;
        this.deletionDate = null;
        this.expirationDate = null;
        this.password = null;
        this.disabled = false;
        this.hideEmail = false;
        if (!s) {
            return;
        }
        this.id = s.id;
        this.accessId = s.accessId;
        this.type = s.type;
        this.maxAccessCount = s.maxAccessCount;
        this.accessCount = s.accessCount;
        this.revisionDate = s.revisionDate;
        this.deletionDate = s.deletionDate;
        this.expirationDate = s.expirationDate;
        this.disabled = s.disabled;
        this.password = s.password;
        this.hideEmail = s.hideEmail;
    }
    get urlB64Key() {
        return _misc_utils__WEBPACK_IMPORTED_MODULE_0__[/* Utils */ "a"].fromBufferToUrlB64(this.key);
    }
    get maxAccessCountReached() {
        if (this.maxAccessCount == null) {
            return false;
        }
        return this.accessCount >= this.maxAccessCount;
    }
    get expired() {
        if (this.expirationDate == null) {
            return false;
        }
        return this.expirationDate <= new Date();
    }
    get pendingDelete() {
        return this.deletionDate <= new Date();
    }
}


/***/ }),

/***/ 224:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BrowserMessagingService; });
class BrowserMessagingService {
    send(subscriber, arg = {}) {
        const message = Object.assign({}, { command: subscriber }, arg);
        chrome.runtime.sendMessage(message);
    }
}


/***/ }),

/***/ 225:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StateService; });
class StateService {
    constructor() {
        this.state = {};
    }
    get(key) {
        if (this.state.hasOwnProperty(key)) {
            return Promise.resolve(this.state[key]);
        }
        return Promise.resolve(null);
    }
    save(key, obj) {
        this.state[key] = obj;
        return Promise.resolve();
    }
    remove(key) {
        delete this.state[key];
        return Promise.resolve();
    }
    purge() {
        this.state = {};
        return Promise.resolve();
    }
}


/***/ }),

/***/ 226:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SearchService; });
/* harmony import */ var lunr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(118);
/* harmony import */ var lunr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lunr__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);
/* harmony import */ var _enums_fieldType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52);
/* harmony import */ var _enums_uriMatchType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(33);
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




class SearchService {
    constructor(cipherService, logService, i18nService) {
        this.cipherService = cipherService;
        this.logService = logService;
        this.i18nService = i18nService;
        this.indexedEntityId = null;
        this.indexing = false;
        this.index = null;
        this.searchableMinLength = 2;
        if (['zh-CN', 'zh-TW'].indexOf(i18nService.locale) !== -1) {
            this.searchableMinLength = 1;
        }
    }
    clearIndex() {
        this.indexedEntityId = null;
        this.index = null;
    }
    isSearchable(query) {
        const notSearchable = query == null || (this.index == null && query.length < this.searchableMinLength) ||
            (this.index != null && query.length < this.searchableMinLength && query.indexOf('>') !== 0);
        return !notSearchable;
    }
    indexCiphers(indexedEntityId, ciphers) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.indexing) {
                return;
            }
            this.logService.time('search indexing');
            this.indexing = true;
            this.indexedEntityId = indexedEntityId;
            this.index = null;
            const builder = new lunr__WEBPACK_IMPORTED_MODULE_0__["Builder"]();
            builder.ref('id');
            builder.field('shortid', { boost: 100, extractor: (c) => c.id.substr(0, 8) });
            builder.field('name', { boost: 10 });
            builder.field('subtitle', {
                boost: 5,
                extractor: (c) => {
                    if (c.subTitle != null && c.type === _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__[/* CipherType */ "a"].Card) {
                        return c.subTitle.replace(/\*/g, '');
                    }
                    return c.subTitle;
                },
            });
            builder.field('notes');
            builder.field('login.username', {
                extractor: (c) => c.type === _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__[/* CipherType */ "a"].Login && c.login != null ? c.login.username : null,
            });
            builder.field('login.uris', { boost: 2, extractor: (c) => this.uriExtractor(c) });
            builder.field('fields', { extractor: (c) => this.fieldExtractor(c, false) });
            builder.field('fields_joined', { extractor: (c) => this.fieldExtractor(c, true) });
            builder.field('attachments', { extractor: (c) => this.attachmentExtractor(c, false) });
            builder.field('attachments_joined', { extractor: (c) => this.attachmentExtractor(c, true) });
            builder.field('organizationid', { extractor: (c) => c.organizationId });
            ciphers = ciphers || (yield this.cipherService.getAllDecrypted());
            ciphers.forEach(c => builder.add(c));
            this.index = builder.build();
            this.indexing = false;
            this.logService.timeEnd('search indexing');
        });
    }
    searchCiphers(query, filter = null, ciphers = null) {
        return __awaiter(this, void 0, void 0, function* () {
            const results = [];
            if (query != null) {
                query = query.trim().toLowerCase();
            }
            if (query === '') {
                query = null;
            }
            if (ciphers == null) {
                ciphers = yield this.cipherService.getAllDecrypted();
            }
            if (filter != null && Array.isArray(filter) && filter.length > 0) {
                ciphers = ciphers.filter(c => filter.every(f => f == null || f(c)));
            }
            else if (filter != null) {
                ciphers = ciphers.filter(filter);
            }
            if (!this.isSearchable(query)) {
                return ciphers;
            }
            if (this.indexing) {
                yield new Promise(r => setTimeout(r, 250));
                if (this.indexing) {
                    yield new Promise(r => setTimeout(r, 500));
                }
            }
            const index = this.getIndexForSearch();
            if (index == null) {
                // Fall back to basic search if index is not available
                return this.searchCiphersBasic(ciphers, query);
            }
            const ciphersMap = new Map();
            ciphers.forEach(c => ciphersMap.set(c.id, c));
            let searchResults = null;
            const isQueryString = query != null && query.length > 1 && query.indexOf('>') === 0;
            if (isQueryString) {
                try {
                    searchResults = index.search(query.substr(1).trim());
                }
                catch (e) {
                    this.logService.error(e);
                }
            }
            else {
                // tslint:disable-next-line
                const soWild = lunr__WEBPACK_IMPORTED_MODULE_0__["Query"].wildcard.LEADING | lunr__WEBPACK_IMPORTED_MODULE_0__["Query"].wildcard.TRAILING;
                searchResults = index.query(q => {
                    lunr__WEBPACK_IMPORTED_MODULE_0__["tokenizer"](query).forEach(token => {
                        const t = token.toString();
                        q.term(t, { fields: ['name'], wildcard: soWild });
                        q.term(t, { fields: ['subtitle'], wildcard: soWild });
                        q.term(t, { fields: ['login.uris'], wildcard: soWild });
                        q.term(t, {});
                    });
                });
            }
            if (searchResults != null) {
                searchResults.forEach(r => {
                    if (ciphersMap.has(r.ref)) {
                        results.push(ciphersMap.get(r.ref));
                    }
                });
            }
            return results;
        });
    }
    searchCiphersBasic(ciphers, query, deleted = false) {
        query = query.trim().toLowerCase();
        return ciphers.filter(c => {
            if (deleted !== c.isDeleted) {
                return false;
            }
            if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {
                return true;
            }
            if (query.length >= 8 && c.id.startsWith(query)) {
                return true;
            }
            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {
                return true;
            }
            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {
                return true;
            }
            return false;
        });
    }
    searchSends(sends, query) {
        query = query.trim().toLocaleLowerCase();
        return sends.filter(s => {
            var _a, _b, _c;
            if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {
                return true;
            }
            if (query.length >= 8 && (s.id.startsWith(query) || s.accessId.toLocaleLowerCase().startsWith(query) || (((_a = s.file) === null || _a === void 0 ? void 0 : _a.id) != null && s.file.id.startsWith(query)))) {
                return true;
            }
            if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {
                return true;
            }
            if (((_b = s.text) === null || _b === void 0 ? void 0 : _b.text) != null && s.text.text.toLowerCase().indexOf(query) > -1) {
                return true;
            }
            if (((_c = s.file) === null || _c === void 0 ? void 0 : _c.fileName) != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {
                return true;
            }
        });
    }
    getIndexForSearch() {
        return this.index;
    }
    fieldExtractor(c, joined) {
        if (!c.hasFields) {
            return null;
        }
        let fields = [];
        c.fields.forEach(f => {
            if (f.name != null) {
                fields.push(f.name);
            }
            if (f.type === _enums_fieldType__WEBPACK_IMPORTED_MODULE_2__[/* FieldType */ "a"].Text && f.value != null) {
                fields.push(f.value);
            }
        });
        fields = fields.filter(f => f.trim() !== '');
        if (fields.length === 0) {
            return null;
        }
        return joined ? fields.join(' ') : fields;
    }
    attachmentExtractor(c, joined) {
        if (!c.hasAttachments) {
            return null;
        }
        let attachments = [];
        c.attachments.forEach(a => {
            if (a != null && a.fileName != null) {
                if (joined && a.fileName.indexOf('.') > -1) {
                    attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf('.')));
                }
                else {
                    attachments.push(a.fileName);
                }
            }
        });
        attachments = attachments.filter(f => f.trim() !== '');
        if (attachments.length === 0) {
            return null;
        }
        return joined ? attachments.join(' ') : attachments;
    }
    uriExtractor(c) {
        if (c.type !== _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__[/* CipherType */ "a"].Login || c.login == null || !c.login.hasUris) {
            return null;
        }
        const uris = [];
        c.login.uris.forEach(u => {
            if (u.uri == null || u.uri === '') {
                return;
            }
            if (u.hostname != null) {
                uris.push(u.hostname);
                return;
            }
            let uri = u.uri;
            if (u.match !== _enums_uriMatchType__WEBPACK_IMPORTED_MODULE_3__[/* UriMatchType */ "a"].RegularExpression) {
                const protocolIndex = uri.indexOf('://');
                if (protocolIndex > -1) {
                    uri = uri.substr(protocolIndex + 3);
                }
                const queryIndex = uri.search(/\?|&|#/);
                if (queryIndex > -1) {
                    uri = uri.substring(0, queryIndex);
                }
            }
            uris.push(uri);
        });
        return uris.length > 0 ? uris : null;
    }
}


/***/ }),

/***/ 23:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PopupUtilsService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _browser_browserApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13);
/* harmony import */ var jslib_common_abstractions_platformUtils_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);





class PopupUtilsService {
    constructor(platformUtilsService) {
        this.platformUtilsService = platformUtilsService;
    }
    inSidebar(win) {
        return win.location.search !== '' && win.location.search.indexOf('uilocation=sidebar') > -1;
    }
    inTab(win) {
        return win.location.search !== '' && win.location.search.indexOf('uilocation=tab') > -1;
    }
    inPopout(win) {
        return win.location.search !== '' && win.location.search.indexOf('uilocation=popout') > -1;
    }
    inPopup(win) {
        return win.location.search === '' || win.location.search.indexOf('uilocation=') === -1 ||
            win.location.search.indexOf('uilocation=popup') > -1;
    }
    getContentScrollY(win, scrollingContainer = 'content') {
        const content = win.document.getElementsByTagName(scrollingContainer)[0];
        return content.scrollTop;
    }
    setContentScrollY(win, scrollY, scrollingContainer = 'content') {
        if (scrollY != null) {
            const content = win.document.getElementsByTagName(scrollingContainer)[0];
            content.scrollTop = scrollY;
        }
    }
    popOut(win, href = null) {
        if (href === null) {
            href = win.location.href;
        }
        if ((typeof chrome !== 'undefined') && chrome.windows && chrome.windows.create) {
            if (href.indexOf('?uilocation=') > -1) {
                href = href.replace('uilocation=popup', 'uilocation=popout')
                    .replace('uilocation=tab', 'uilocation=popout')
                    .replace('uilocation=sidebar', 'uilocation=popout');
            }
            else {
                const hrefParts = href.split('#');
                href = hrefParts[0] + '?uilocation=popout' + (hrefParts.length > 0 ? '#' + hrefParts[1] : '');
            }
            const bodyRect = document.querySelector('body').getBoundingClientRect();
            chrome.windows.create({
                url: href,
                type: 'popup',
                width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),
                height: Math.round(bodyRect.height || 600),
            });
            if (this.inPopup(win)) {
                _browser_browserApi__WEBPACK_IMPORTED_MODULE_1__[/* BrowserApi */ "a"].closePopup(win);
            }
        }
        else if ((typeof chrome !== 'undefined') && chrome.tabs && chrome.tabs.create) {
            href = href.replace('uilocation=popup', 'uilocation=tab')
                .replace('uilocation=popout', 'uilocation=tab')
                .replace('uilocation=sidebar', 'uilocation=tab');
            chrome.tabs.create({
                url: href,
            });
        }
    }
}
PopupUtilsService.ɵfac = function PopupUtilsService_Factory(t) { return new (t || PopupUtilsService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵinject */ "nc"](jslib_common_abstractions_platformUtils_service__WEBPACK_IMPORTED_MODULE_2__[/* PlatformUtilsService */ "a"])); };
PopupUtilsService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjectable */ "Zb"]({ token: PopupUtilsService, factory: PopupUtilsService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵsetClassMetadata */ "Lb"](PopupUtilsService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Injectable */ "A"]
    }], function () { return [{ type: jslib_common_abstractions_platformUtils_service__WEBPACK_IMPORTED_MODULE_2__[/* PlatformUtilsService */ "a"] }]; }, null); })();


/***/ }),

/***/ 259:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MasterPasswordPolicyOptions; });
/* harmony import */ var _domainBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32);

class MasterPasswordPolicyOptions extends _domainBase__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"] {
    constructor() {
        super(...arguments);
        this.minComplexity = 0;
        this.minLength = 0;
        this.requireUpper = false;
        this.requireLower = false;
        this.requireNumbers = false;
        this.requireSpecial = false;
    }
}


/***/ }),

/***/ 28:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EncryptionType; });
var EncryptionType;
(function (EncryptionType) {
    EncryptionType[EncryptionType["AesCbc256_B64"] = 0] = "AesCbc256_B64";
    EncryptionType[EncryptionType["AesCbc128_HmacSha256_B64"] = 1] = "AesCbc128_HmacSha256_B64";
    EncryptionType[EncryptionType["AesCbc256_HmacSha256_B64"] = 2] = "AesCbc256_HmacSha256_B64";
    EncryptionType[EncryptionType["Rsa2048_OaepSha256_B64"] = 3] = "Rsa2048_OaepSha256_B64";
    EncryptionType[EncryptionType["Rsa2048_OaepSha1_B64"] = 4] = "Rsa2048_OaepSha1_B64";
    EncryptionType[EncryptionType["Rsa2048_OaepSha256_HmacSha256_B64"] = 5] = "Rsa2048_OaepSha256_HmacSha256_B64";
    EncryptionType[EncryptionType["Rsa2048_OaepSha1_HmacSha256_B64"] = 6] = "Rsa2048_OaepSha1_HmacSha256_B64";
})(EncryptionType || (EncryptionType = {}));


/***/ }),

/***/ 3:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PlatformUtilsService; });
class PlatformUtilsService {
}


/***/ }),

/***/ 32:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Domain; });
/* harmony import */ var _encString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21);
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

class Domain {
    buildDomainModel(domain, dataObj, map, alreadyEncrypted, notEncList = []) {
        for (const prop in map) {
            if (!map.hasOwnProperty(prop)) {
                continue;
            }
            const objProp = dataObj[(map[prop] || prop)];
            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {
                domain[prop] = objProp ? objProp : null;
            }
            else {
                domain[prop] = objProp ? new _encString__WEBPACK_IMPORTED_MODULE_0__[/* EncString */ "a"](objProp) : null;
            }
        }
    }
    buildDataModel(domain, dataObj, map, notEncStringList = []) {
        for (const prop in map) {
            if (!map.hasOwnProperty(prop)) {
                continue;
            }
            const objProp = domain[(map[prop] || prop)];
            if (notEncStringList.indexOf(prop) > -1) {
                dataObj[prop] = objProp != null ? objProp : null;
            }
            else {
                dataObj[prop] = objProp != null ? objProp.encryptedString : null;
            }
        }
    }
    decryptObj(viewModel, map, orgId, key = null) {
        return __awaiter(this, void 0, void 0, function* () {
            const promises = [];
            const self = this;
            for (const prop in map) {
                if (!map.hasOwnProperty(prop)) {
                    continue;
                }
                // tslint:disable-next-line
                (function (theProp) {
                    const p = Promise.resolve().then(() => {
                        const mapProp = map[theProp] || theProp;
                        if (self[mapProp]) {
                            return self[mapProp].decrypt(orgId, key);
                        }
                        return null;
                    }).then((val) => {
                        viewModel[theProp] = val;
                    });
                    promises.push(p);
                })(prop);
            }
            yield Promise.all(promises);
            return viewModel;
        });
    }
}


/***/ }),

/***/ 33:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UriMatchType; });
var UriMatchType;
(function (UriMatchType) {
    UriMatchType[UriMatchType["Domain"] = 0] = "Domain";
    UriMatchType[UriMatchType["Host"] = 1] = "Host";
    UriMatchType[UriMatchType["StartsWith"] = 2] = "StartsWith";
    UriMatchType[UriMatchType["Exact"] = 3] = "Exact";
    UriMatchType[UriMatchType["RegularExpression"] = 4] = "RegularExpression";
    UriMatchType[UriMatchType["Never"] = 5] = "Never";
})(UriMatchType || (UriMatchType = {}));


/***/ }),

/***/ 38:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeviceType; });
var DeviceType;
(function (DeviceType) {
    DeviceType[DeviceType["Android"] = 0] = "Android";
    DeviceType[DeviceType["iOS"] = 1] = "iOS";
    DeviceType[DeviceType["ChromeExtension"] = 2] = "ChromeExtension";
    DeviceType[DeviceType["FirefoxExtension"] = 3] = "FirefoxExtension";
    DeviceType[DeviceType["OperaExtension"] = 4] = "OperaExtension";
    DeviceType[DeviceType["EdgeExtension"] = 5] = "EdgeExtension";
    DeviceType[DeviceType["WindowsDesktop"] = 6] = "WindowsDesktop";
    DeviceType[DeviceType["MacOsDesktop"] = 7] = "MacOsDesktop";
    DeviceType[DeviceType["LinuxDesktop"] = 8] = "LinuxDesktop";
    DeviceType[DeviceType["ChromeBrowser"] = 9] = "ChromeBrowser";
    DeviceType[DeviceType["FirefoxBrowser"] = 10] = "FirefoxBrowser";
    DeviceType[DeviceType["OperaBrowser"] = 11] = "OperaBrowser";
    DeviceType[DeviceType["EdgeBrowser"] = 12] = "EdgeBrowser";
    DeviceType[DeviceType["IEBrowser"] = 13] = "IEBrowser";
    DeviceType[DeviceType["UnknownBrowser"] = 14] = "UnknownBrowser";
    DeviceType[DeviceType["AndroidAmazon"] = 15] = "AndroidAmazon";
    DeviceType[DeviceType["UWP"] = 16] = "UWP";
    DeviceType[DeviceType["SafariBrowser"] = 17] = "SafariBrowser";
    DeviceType[DeviceType["VivaldiBrowser"] = 18] = "VivaldiBrowser";
    DeviceType[DeviceType["VivaldiExtension"] = 19] = "VivaldiExtension";
    DeviceType[DeviceType["SafariExtension"] = 20] = "SafariExtension";
})(DeviceType || (DeviceType = {}));


/***/ }),

/***/ 45:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SendType; });
var SendType;
(function (SendType) {
    SendType[SendType["Text"] = 0] = "Text";
    SendType[SendType["File"] = 1] = "File";
})(SendType || (SendType = {}));


/***/ }),

/***/ 48:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CipherRepromptType; });
var CipherRepromptType;
(function (CipherRepromptType) {
    CipherRepromptType[CipherRepromptType["None"] = 0] = "None";
    CipherRepromptType[CipherRepromptType["Password"] = 1] = "Password";
})(CipherRepromptType || (CipherRepromptType = {}));


/***/ }),

/***/ 49:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventType; });
var EventType;
(function (EventType) {
    EventType[EventType["User_LoggedIn"] = 1000] = "User_LoggedIn";
    EventType[EventType["User_ChangedPassword"] = 1001] = "User_ChangedPassword";
    EventType[EventType["User_Updated2fa"] = 1002] = "User_Updated2fa";
    EventType[EventType["User_Disabled2fa"] = 1003] = "User_Disabled2fa";
    EventType[EventType["User_Recovered2fa"] = 1004] = "User_Recovered2fa";
    EventType[EventType["User_FailedLogIn"] = 1005] = "User_FailedLogIn";
    EventType[EventType["User_FailedLogIn2fa"] = 1006] = "User_FailedLogIn2fa";
    EventType[EventType["User_ClientExportedVault"] = 1007] = "User_ClientExportedVault";
    EventType[EventType["User_UpdatedTempPassword"] = 1008] = "User_UpdatedTempPassword";
    EventType[EventType["User_MigratedKeyToKeyConnector"] = 1009] = "User_MigratedKeyToKeyConnector";
    EventType[EventType["Cipher_Created"] = 1100] = "Cipher_Created";
    EventType[EventType["Cipher_Updated"] = 1101] = "Cipher_Updated";
    EventType[EventType["Cipher_Deleted"] = 1102] = "Cipher_Deleted";
    EventType[EventType["Cipher_AttachmentCreated"] = 1103] = "Cipher_AttachmentCreated";
    EventType[EventType["Cipher_AttachmentDeleted"] = 1104] = "Cipher_AttachmentDeleted";
    EventType[EventType["Cipher_Shared"] = 1105] = "Cipher_Shared";
    EventType[EventType["Cipher_UpdatedCollections"] = 1106] = "Cipher_UpdatedCollections";
    EventType[EventType["Cipher_ClientViewed"] = 1107] = "Cipher_ClientViewed";
    EventType[EventType["Cipher_ClientToggledPasswordVisible"] = 1108] = "Cipher_ClientToggledPasswordVisible";
    EventType[EventType["Cipher_ClientToggledHiddenFieldVisible"] = 1109] = "Cipher_ClientToggledHiddenFieldVisible";
    EventType[EventType["Cipher_ClientToggledCardCodeVisible"] = 1110] = "Cipher_ClientToggledCardCodeVisible";
    EventType[EventType["Cipher_ClientCopiedPassword"] = 1111] = "Cipher_ClientCopiedPassword";
    EventType[EventType["Cipher_ClientCopiedHiddenField"] = 1112] = "Cipher_ClientCopiedHiddenField";
    EventType[EventType["Cipher_ClientCopiedCardCode"] = 1113] = "Cipher_ClientCopiedCardCode";
    EventType[EventType["Cipher_ClientAutofilled"] = 1114] = "Cipher_ClientAutofilled";
    EventType[EventType["Cipher_SoftDeleted"] = 1115] = "Cipher_SoftDeleted";
    EventType[EventType["Cipher_Restored"] = 1116] = "Cipher_Restored";
    EventType[EventType["Cipher_ClientToggledCardNumberVisible"] = 1117] = "Cipher_ClientToggledCardNumberVisible";
    EventType[EventType["Collection_Created"] = 1300] = "Collection_Created";
    EventType[EventType["Collection_Updated"] = 1301] = "Collection_Updated";
    EventType[EventType["Collection_Deleted"] = 1302] = "Collection_Deleted";
    EventType[EventType["Group_Created"] = 1400] = "Group_Created";
    EventType[EventType["Group_Updated"] = 1401] = "Group_Updated";
    EventType[EventType["Group_Deleted"] = 1402] = "Group_Deleted";
    EventType[EventType["OrganizationUser_Invited"] = 1500] = "OrganizationUser_Invited";
    EventType[EventType["OrganizationUser_Confirmed"] = 1501] = "OrganizationUser_Confirmed";
    EventType[EventType["OrganizationUser_Updated"] = 1502] = "OrganizationUser_Updated";
    EventType[EventType["OrganizationUser_Removed"] = 1503] = "OrganizationUser_Removed";
    EventType[EventType["OrganizationUser_UpdatedGroups"] = 1504] = "OrganizationUser_UpdatedGroups";
    EventType[EventType["OrganizationUser_UnlinkedSso"] = 1505] = "OrganizationUser_UnlinkedSso";
    EventType[EventType["OrganizationUser_ResetPassword_Enroll"] = 1506] = "OrganizationUser_ResetPassword_Enroll";
    EventType[EventType["OrganizationUser_ResetPassword_Withdraw"] = 1507] = "OrganizationUser_ResetPassword_Withdraw";
    EventType[EventType["OrganizationUser_AdminResetPassword"] = 1508] = "OrganizationUser_AdminResetPassword";
    EventType[EventType["OrganizationUser_ResetSsoLink"] = 1509] = "OrganizationUser_ResetSsoLink";
    EventType[EventType["OrganizationUser_FirstSsoLogin"] = 1510] = "OrganizationUser_FirstSsoLogin";
    EventType[EventType["Organization_Updated"] = 1600] = "Organization_Updated";
    EventType[EventType["Organization_PurgedVault"] = 1601] = "Organization_PurgedVault";
    // Organization_ClientExportedVault = 1602,
    EventType[EventType["Organization_VaultAccessed"] = 1603] = "Organization_VaultAccessed";
    EventType[EventType["Organization_EnabledSso"] = 1604] = "Organization_EnabledSso";
    EventType[EventType["Organization_DisabledSso"] = 1605] = "Organization_DisabledSso";
    EventType[EventType["Organization_EnabledKeyConnector"] = 1606] = "Organization_EnabledKeyConnector";
    EventType[EventType["Organization_DisabledKeyConnector"] = 1607] = "Organization_DisabledKeyConnector";
    EventType[EventType["Policy_Updated"] = 1700] = "Policy_Updated";
    EventType[EventType["ProviderUser_Invited"] = 1800] = "ProviderUser_Invited";
    EventType[EventType["ProviderUser_Confirmed"] = 1801] = "ProviderUser_Confirmed";
    EventType[EventType["ProviderUser_Updated"] = 1802] = "ProviderUser_Updated";
    EventType[EventType["ProviderUser_Removed"] = 1803] = "ProviderUser_Removed";
    EventType[EventType["ProviderOrganization_Created"] = 1900] = "ProviderOrganization_Created";
    EventType[EventType["ProviderOrganization_Added"] = 1901] = "ProviderOrganization_Added";
    EventType[EventType["ProviderOrganization_Removed"] = 1902] = "ProviderOrganization_Removed";
    EventType[EventType["ProviderOrganization_VaultAccessed"] = 1903] = "ProviderOrganization_VaultAccessed";
})(EventType || (EventType = {}));


/***/ }),

/***/ 52:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FieldType; });
var FieldType;
(function (FieldType) {
    FieldType[FieldType["Text"] = 0] = "Text";
    FieldType[FieldType["Hidden"] = 1] = "Hidden";
    FieldType[FieldType["Boolean"] = 2] = "Boolean";
    FieldType[FieldType["Linked"] = 3] = "Linked";
})(FieldType || (FieldType = {}));


/***/ }),

/***/ 56:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PolicyType; });
var PolicyType;
(function (PolicyType) {
    PolicyType[PolicyType["TwoFactorAuthentication"] = 0] = "TwoFactorAuthentication";
    PolicyType[PolicyType["MasterPassword"] = 1] = "MasterPassword";
    PolicyType[PolicyType["PasswordGenerator"] = 2] = "PasswordGenerator";
    PolicyType[PolicyType["SingleOrg"] = 3] = "SingleOrg";
    PolicyType[PolicyType["RequireSso"] = 4] = "RequireSso";
    PolicyType[PolicyType["PersonalOwnership"] = 5] = "PersonalOwnership";
    PolicyType[PolicyType["DisableSend"] = 6] = "DisableSend";
    PolicyType[PolicyType["SendOptions"] = 7] = "SendOptions";
    PolicyType[PolicyType["ResetPassword"] = 8] = "ResetPassword";
    PolicyType[PolicyType["MaximumVaultTimeout"] = 9] = "MaximumVaultTimeout";
    PolicyType[PolicyType["DisablePersonalVaultExport"] = 10] = "DisablePersonalVaultExport";
})(PolicyType || (PolicyType = {}));


/***/ }),

/***/ 6:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, global, Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Utils; });
/* harmony import */ var tldjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var tldjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tldjs__WEBPACK_IMPORTED_MODULE_0__);

// tslint:disable-next-line
const nodeURL = typeof window === 'undefined' ? __webpack_require__(216) : null;
class Utils {
    static init() {
        if (Utils.inited) {
            return;
        }
        Utils.inited = true;
        Utils.isNode = typeof process !== 'undefined' && process.release != null &&
            process.release.name === 'node';
        Utils.isBrowser = typeof window !== 'undefined';
        Utils.isNativeScript = !Utils.isNode && !Utils.isBrowser;
        Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);
        Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);
        Utils.global = Utils.isNativeScript ? global : (Utils.isNode && !Utils.isBrowser ? global : window);
    }
    static fromB64ToArray(str) {
        if (Utils.isNode || Utils.isNativeScript) {
            return new Uint8Array(Buffer.from(str, 'base64'));
        }
        else {
            const binaryString = window.atob(str);
            const bytes = new Uint8Array(binaryString.length);
            for (let i = 0; i < binaryString.length; i++) {
                bytes[i] = binaryString.charCodeAt(i);
            }
            return bytes;
        }
    }
    static fromUrlB64ToArray(str) {
        return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));
    }
    static fromHexToArray(str) {
        if (Utils.isNode || Utils.isNativeScript) {
            return new Uint8Array(Buffer.from(str, 'hex'));
        }
        else {
            const bytes = new Uint8Array(str.length / 2);
            for (let i = 0; i < str.length; i += 2) {
                bytes[i / 2] = parseInt(str.substr(i, 2), 16);
            }
            return bytes;
        }
    }
    static fromUtf8ToArray(str) {
        if (Utils.isNode || Utils.isNativeScript) {
            return new Uint8Array(Buffer.from(str, 'utf8'));
        }
        else {
            const strUtf8 = unescape(encodeURIComponent(str));
            const arr = new Uint8Array(strUtf8.length);
            for (let i = 0; i < strUtf8.length; i++) {
                arr[i] = strUtf8.charCodeAt(i);
            }
            return arr;
        }
    }
    static fromByteStringToArray(str) {
        const arr = new Uint8Array(str.length);
        for (let i = 0; i < str.length; i++) {
            arr[i] = str.charCodeAt(i);
        }
        return arr;
    }
    static fromBufferToB64(buffer) {
        if (Utils.isNode || Utils.isNativeScript) {
            return Buffer.from(buffer).toString('base64');
        }
        else {
            let binary = '';
            const bytes = new Uint8Array(buffer);
            for (let i = 0; i < bytes.byteLength; i++) {
                binary += String.fromCharCode(bytes[i]);
            }
            return window.btoa(binary);
        }
    }
    static fromBufferToUrlB64(buffer) {
        return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));
    }
    static fromB64toUrlB64(b64Str) {
        return b64Str.replace(/\+/g, '-')
            .replace(/\//g, '_')
            .replace(/=/g, '');
    }
    static fromBufferToUtf8(buffer) {
        if (Utils.isNode || Utils.isNativeScript) {
            return Buffer.from(buffer).toString('utf8');
        }
        else {
            const bytes = new Uint8Array(buffer);
            const encodedString = String.fromCharCode.apply(null, bytes);
            return decodeURIComponent(escape(encodedString));
        }
    }
    static fromBufferToByteString(buffer) {
        return String.fromCharCode.apply(null, new Uint8Array(buffer));
    }
    // ref: https://stackoverflow.com/a/40031979/1090359
    static fromBufferToHex(buffer) {
        if (Utils.isNode || Utils.isNativeScript) {
            return Buffer.from(buffer).toString('hex');
        }
        else {
            const bytes = new Uint8Array(buffer);
            return Array.prototype.map.call(bytes, (x) => ('00' + x.toString(16)).slice(-2)).join('');
        }
    }
    static fromUrlB64ToB64(urlB64Str) {
        let output = urlB64Str.replace(/-/g, '+').replace(/_/g, '/');
        switch (output.length % 4) {
            case 0:
                break;
            case 2:
                output += '==';
                break;
            case 3:
                output += '=';
                break;
            default:
                throw new Error('Illegal base64url string!');
        }
        return output;
    }
    static fromUrlB64ToUtf8(urlB64Str) {
        return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));
    }
    static fromUtf8ToB64(utfStr) {
        if (Utils.isNode || Utils.isNativeScript) {
            return Buffer.from(utfStr, 'utf8').toString('base64');
        }
        else {
            return decodeURIComponent(escape(window.btoa(utfStr)));
        }
    }
    static fromUtf8ToUrlB64(utfStr) {
        return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));
    }
    static fromB64ToUtf8(b64Str) {
        if (Utils.isNode || Utils.isNativeScript) {
            return Buffer.from(b64Str, 'base64').toString('utf8');
        }
        else {
            return decodeURIComponent(escape(window.atob(b64Str)));
        }
    }
    // ref: http://stackoverflow.com/a/2117523/1090359
    static newGuid() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {
            // tslint:disable-next-line
            const r = Math.random() * 16 | 0;
            // tslint:disable-next-line
            const v = c === 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }
    static isGuid(id) {
        return RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/, 'i').test(id);
    }
    static getHostname(uriString) {
        const url = Utils.getUrl(uriString);
        try {
            return url != null && url.hostname !== '' ? url.hostname : null;
        }
        catch (_a) {
            return null;
        }
    }
    static getHost(uriString) {
        const url = Utils.getUrl(uriString);
        try {
            return url != null && url.host !== '' ? url.host : null;
        }
        catch (_a) {
            return null;
        }
    }
    static getDomain(uriString) {
        if (uriString == null) {
            return null;
        }
        uriString = uriString.trim();
        if (uriString === '') {
            return null;
        }
        if (uriString.startsWith('data:')) {
            return null;
        }
        let httpUrl = uriString.startsWith('http://') || uriString.startsWith('https://');
        if (!httpUrl && uriString.indexOf('://') < 0 && Utils.tldEndingRegex.test(uriString) &&
            uriString.indexOf('@') < 0) {
            uriString = 'http://' + uriString;
            httpUrl = true;
        }
        if (httpUrl) {
            try {
                const url = Utils.getUrlObject(uriString);
                const validHostname = (tldjs__WEBPACK_IMPORTED_MODULE_0__ === null || tldjs__WEBPACK_IMPORTED_MODULE_0__ === void 0 ? void 0 : tldjs__WEBPACK_IMPORTED_MODULE_0__["isValid"]) != null ? tldjs__WEBPACK_IMPORTED_MODULE_0__["isValid"](url.hostname) : true;
                if (!validHostname) {
                    return null;
                }
                if (url.hostname === 'localhost' || Utils.validIpAddress(url.hostname)) {
                    return url.hostname;
                }
                const urlDomain = tldjs__WEBPACK_IMPORTED_MODULE_0__ != null && tldjs__WEBPACK_IMPORTED_MODULE_0__["getDomain"] != null ? tldjs__WEBPACK_IMPORTED_MODULE_0__["getDomain"](url.hostname) : null;
                return urlDomain != null ? urlDomain : url.hostname;
            }
            catch (e) {
                // Invalid domain, try another approach below.
            }
        }
        try {
            const domain = tldjs__WEBPACK_IMPORTED_MODULE_0__ != null && tldjs__WEBPACK_IMPORTED_MODULE_0__["getDomain"] != null ? tldjs__WEBPACK_IMPORTED_MODULE_0__["getDomain"](uriString) : null;
            if (domain != null) {
                return domain;
            }
        }
        catch (_a) {
            return null;
        }
        return null;
    }
    static getQueryParams(uriString) {
        const url = Utils.getUrl(uriString);
        if (url == null || url.search == null || url.search === '') {
            return null;
        }
        const map = new Map();
        const pairs = (url.search[0] === '?' ? url.search.substr(1) : url.search).split('&');
        pairs.forEach(pair => {
            const parts = pair.split('=');
            if (parts.length < 1) {
                return;
            }
            map.set(decodeURIComponent(parts[0]).toLowerCase(), parts[1] == null ? '' : decodeURIComponent(parts[1]));
        });
        return map;
    }
    static getSortFunction(i18nService, prop) {
        return (a, b) => {
            if (a[prop] == null && b[prop] != null) {
                return -1;
            }
            if (a[prop] != null && b[prop] == null) {
                return 1;
            }
            if (a[prop] == null && b[prop] == null) {
                return 0;
            }
            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :
                a[prop].localeCompare(b[prop]);
        };
    }
    static isNullOrWhitespace(str) {
        return str == null || typeof str !== 'string' || str.trim() === '';
    }
    static nameOf(name) {
        return name;
    }
    static assign(target, source) {
        return Object.assign(target, source);
    }
    static iterateEnum(obj) {
        return Object.keys(obj).filter(k => Number.isNaN(+k)).map(k => obj[k]);
    }
    static getUrl(uriString) {
        if (uriString == null) {
            return null;
        }
        uriString = uriString.trim();
        if (uriString === '') {
            return null;
        }
        let url = Utils.getUrlObject(uriString);
        if (url == null) {
            const hasHttpProtocol = uriString.indexOf('http://') === 0 || uriString.indexOf('https://') === 0;
            if (!hasHttpProtocol && uriString.indexOf('.') > -1) {
                url = Utils.getUrlObject('http://' + uriString);
            }
        }
        return url;
    }
    static camelToPascalCase(s) {
        return s.charAt(0).toUpperCase() + s.slice(1);
    }
    static validIpAddress(ipString) {
        // tslint:disable-next-line
        const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
        return ipRegex.test(ipString);
    }
    static isMobile(win) {
        let mobile = false;
        (a => {
            // tslint:disable-next-line
            if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) {
                mobile = true;
            }
        })(win.navigator.userAgent || win.navigator.vendor || win.opera);
        return mobile || win.navigator.userAgent.match(/iPad/i) != null;
    }
    static isAppleMobile(win) {
        return win.navigator.userAgent.match(/iPhone/i) != null || win.navigator.userAgent.match(/iPad/i) != null;
    }
    static getUrlObject(uriString) {
        try {
            if (nodeURL != null) {
                return nodeURL.URL ? new nodeURL.URL(uriString) : nodeURL.parse(uriString);
            }
            else if (typeof URL === 'function') {
                return new URL(uriString);
            }
            else if (window != null) {
                const hasProtocol = uriString.indexOf('://') > -1;
                if (!hasProtocol && uriString.indexOf('.') > -1) {
                    uriString = 'http://' + uriString;
                }
                else if (!hasProtocol) {
                    return null;
                }
                const anchor = window.document.createElement('a');
                anchor.href = uriString;
                return anchor;
            }
        }
        catch (e) {
            // Ignore error
        }
        return null;
    }
}
Utils.inited = false;
Utils.isNativeScript = false;
Utils.isNode = false;
Utils.isBrowser = true;
Utils.isMobileBrowser = false;
Utils.isAppleMobileBrowser = false;
Utils.global = null;
Utils.tldEndingRegex = /.*\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;
// Transpiled version of /\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.
Utils.regexpEmojiPresentation = /(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])/g;
Utils.init();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(98), __webpack_require__(67), __webpack_require__(79).Buffer))

/***/ }),

/***/ 71:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ErrorResponse; });
/* harmony import */ var _misc_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _baseResponse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);


class ErrorResponse extends _baseResponse__WEBPACK_IMPORTED_MODULE_1__[/* BaseResponse */ "a"] {
    constructor(response, status, identityResponse) {
        var _a, _b;
        super(response);
        let errorModel = null;
        if (response != null) {
            const responseErrorModel = this.getResponseProperty('ErrorModel');
            if (responseErrorModel && identityResponse) {
                errorModel = responseErrorModel;
            }
            else {
                errorModel = response;
            }
        }
        if (errorModel) {
            this.message = this.getResponseProperty('Message', errorModel);
            this.validationErrors = this.getResponseProperty('ValidationErrors', errorModel);
            this.captchaSiteKey = (_b = (_a = this.validationErrors) === null || _a === void 0 ? void 0 : _a.HCaptcha_SiteKey) === null || _b === void 0 ? void 0 : _b[0];
            this.captchaRequired = !_misc_utils__WEBPACK_IMPORTED_MODULE_0__[/* Utils */ "a"].isNullOrWhitespace(this.captchaSiteKey);
        }
        else {
            if (status === 429) {
                this.message = 'Rate limit exceeded. Try again later.';
            }
        }
        this.statusCode = status;
    }
    getSingleMessage() {
        if (this.validationErrors == null) {
            return this.message;
        }
        for (const key in this.validationErrors) {
            if (!this.validationErrors.hasOwnProperty(key)) {
                continue;
            }
            if (this.validationErrors[key].length) {
                return this.validationErrors[key][0];
            }
        }
        return this.message;
    }
    getAllMessages() {
        const messages = [];
        if (this.validationErrors == null) {
            return messages;
        }
        for (const key in this.validationErrors) {
            if (!this.validationErrors.hasOwnProperty(key)) {
                continue;
            }
            this.validationErrors[key].forEach((item) => {
                let prefix = '';
                if (key.indexOf('[') > -1 && key.indexOf(']') > -1) {
                    const lastSep = key.lastIndexOf('.');
                    prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + ': ';
                }
                messages.push(prefix + item);
            });
        }
        return messages;
    }
}


/***/ }),

/***/ 725:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 76:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ItemView; });
class ItemView {
}


/***/ }),

/***/ 760:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js
var core = __webpack_require__(0);

// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js + 2 modules
var a11y = __webpack_require__(155);

// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js
var drag_drop = __webpack_require__(124);

// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js + 1 modules
var scrolling = __webpack_require__(51);

// EXTERNAL MODULE: ./node_modules/angular2-toaster/__ivy_ngcc__/fesm2015/angular2-toaster.js
var angular2_toaster = __webpack_require__(43);

// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js
var fesm2015_router = __webpack_require__(4);

// CONCATENATED MODULE: ./jslib/common/src/abstractions/keyConnector.service.ts
class KeyConnectorService {
}

// EXTERNAL MODULE: ./jslib/common/src/abstractions/messaging.service.ts
var messaging_service = __webpack_require__(16);

// CONCATENATED MODULE: ./jslib/common/src/abstractions/user.service.ts
class UserService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/vaultTimeout.service.ts
class VaultTimeoutService {
}

// CONCATENATED MODULE: ./jslib/angular/src/services/auth-guard.service.ts
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};












class AuthGuardService {
    constructor(vaultTimeoutService, userService, router, messagingService, keyConnectorService) {
        this.vaultTimeoutService = vaultTimeoutService;
        this.userService = userService;
        this.router = router;
        this.messagingService = messagingService;
        this.keyConnectorService = keyConnectorService;
    }
    canActivate(route, routerState) {
        return __awaiter(this, void 0, void 0, function* () {
            const isAuthed = yield this.userService.isAuthenticated();
            if (!isAuthed) {
                this.messagingService.send('authBlocked');
                return false;
            }
            const locked = yield this.vaultTimeoutService.isLocked();
            if (locked) {
                if (routerState != null) {
                    this.messagingService.send('lockedUrl', { url: routerState.url });
                }
                this.router.navigate(['lock'], { queryParams: { promptBiometric: true } });
                return false;
            }
            if (!routerState.url.includes('remove-password') && (yield this.keyConnectorService.getConvertAccountRequired())) {
                this.router.navigate(['/remove-password']);
                return false;
            }
            return true;
        });
    }
}
AuthGuardService.ɵfac = function AuthGuardService_Factory(t) { return new (t || AuthGuardService)(core["nc" /* ɵɵinject */](VaultTimeoutService), core["nc" /* ɵɵinject */](UserService), core["nc" /* ɵɵinject */](fesm2015_router["e" /* Router */]), core["nc" /* ɵɵinject */](messaging_service["a" /* MessagingService */]), core["nc" /* ɵɵinject */](KeyConnectorService)); };
AuthGuardService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: AuthGuardService, factory: AuthGuardService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](AuthGuardService, [{
        type: core["A" /* Injectable */]
    }], function () { return [{ type: VaultTimeoutService }, { type: UserService }, { type: fesm2015_router["e" /* Router */] }, { type: messaging_service["a" /* MessagingService */] }, { type: KeyConnectorService }]; }, null); })();

// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/operators/filter.js
var filter = __webpack_require__(156);

// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/operators/pairwise.js
var pairwise = __webpack_require__(768);

// CONCATENATED MODULE: ./src/popup/services/debounceNavigationService.ts
var debounceNavigationService_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





class debounceNavigationService_DebounceNavigationService {
    constructor(router) {
        this.router = router;
        this.navigationStartSub = this.router.events
            .pipe(Object(filter["a" /* filter */])(event => event instanceof fesm2015_router["c" /* NavigationStart */]), Object(pairwise["a" /* pairwise */])())
            .subscribe((events) => [this.lastNavigation, this.thisNavigation] = events);
        this.navigationSuccessSub = this.router.events
            .pipe(Object(filter["a" /* filter */])(event => event instanceof fesm2015_router["b" /* NavigationEnd */]))
            .subscribe((event) => this.lastNavigationSuccessId = event.id);
    }
    canActivate() {
        var _a, _b;
        return debounceNavigationService_awaiter(this, void 0, void 0, function* () {
            return !(((_a = this.thisNavigation) === null || _a === void 0 ? void 0 : _a.navigationTrigger) === 'hashchange' &&
                this.lastNavigation.navigationTrigger === 'popstate' &&
                this.lastNavigationSuccessId === this.lastNavigation.id &&
                this.lastNavigation.url === ((_b = this.thisNavigation) === null || _b === void 0 ? void 0 : _b.url));
        });
    }
    ngOnDestroy() {
        if (this.navigationStartSub != null) {
            this.navigationStartSub.unsubscribe();
        }
        if (this.navigationSuccessSub != null) {
            this.navigationSuccessSub.unsubscribe();
        }
    }
}
debounceNavigationService_DebounceNavigationService.ɵfac = function DebounceNavigationService_Factory(t) { return new (t || debounceNavigationService_DebounceNavigationService)(core["nc" /* ɵɵinject */](fesm2015_router["e" /* Router */])); };
debounceNavigationService_DebounceNavigationService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: debounceNavigationService_DebounceNavigationService, factory: debounceNavigationService_DebounceNavigationService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](debounceNavigationService_DebounceNavigationService, [{
        type: core["A" /* Injectable */]
    }], function () { return [{ type: fesm2015_router["e" /* Router */] }]; }, null); })();

// EXTERNAL MODULE: ./src/browser/browserApi.ts
var browserApi = __webpack_require__(13);

// CONCATENATED MODULE: ./jslib/angular/src/services/unauth-guard.service.ts
var unauth_guard_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};








class unauth_guard_service_UnauthGuardService {
    constructor(vaultTimeoutService, userService, router) {
        this.vaultTimeoutService = vaultTimeoutService;
        this.userService = userService;
        this.router = router;
        this.homepage = 'vault';
    }
    canActivate() {
        return unauth_guard_service_awaiter(this, void 0, void 0, function* () {
            const isAuthed = yield this.userService.isAuthenticated();
            if (isAuthed) {
                const locked = yield this.vaultTimeoutService.isLocked();
                if (locked) {
                    this.router.navigate(['lock']);
                }
                else {
                    this.router.navigate([this.homepage]);
                }
                return false;
            }
            return true;
        });
    }
}
unauth_guard_service_UnauthGuardService.ɵfac = function UnauthGuardService_Factory(t) { return new (t || unauth_guard_service_UnauthGuardService)(core["nc" /* ɵɵinject */](VaultTimeoutService), core["nc" /* ɵɵinject */](UserService), core["nc" /* ɵɵinject */](fesm2015_router["e" /* Router */])); };
unauth_guard_service_UnauthGuardService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: unauth_guard_service_UnauthGuardService, factory: unauth_guard_service_UnauthGuardService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](unauth_guard_service_UnauthGuardService, [{
        type: core["A" /* Injectable */]
    }], function () { return [{ type: VaultTimeoutService }, { type: UserService }, { type: fesm2015_router["e" /* Router */] }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/services/unauth-guard.service.ts



class services_unauth_guard_service_UnauthGuardService extends unauth_guard_service_UnauthGuardService {
    constructor() {
        super(...arguments);
        this.homepage = 'tabs/current';
    }
}
services_unauth_guard_service_UnauthGuardService.ɵfac = function UnauthGuardService_Factory(t) { return ɵUnauthGuardService_BaseFactory(t || services_unauth_guard_service_UnauthGuardService); };
services_unauth_guard_service_UnauthGuardService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: services_unauth_guard_service_UnauthGuardService, factory: services_unauth_guard_service_UnauthGuardService.ɵfac });
const ɵUnauthGuardService_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](services_unauth_guard_service_UnauthGuardService);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](services_unauth_guard_service_UnauthGuardService, [{
        type: core["A" /* Injectable */]
    }], null, null); })();

// CONCATENATED MODULE: ./src/popup/services/launch-guard.service.ts
var launch_guard_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







class launch_guard_service_LaunchGuardService {
    constructor(router, unauthGuardService) {
        this.router = router;
        this.unauthGuardService = unauthGuardService;
    }
    canActivate() {
        return launch_guard_service_awaiter(this, void 0, void 0, function* () {
            if (browserApi["a" /* BrowserApi */].getBackgroundPage() == null) {
                this.router.navigate(['private-mode']);
                return false;
            }
            return yield this.unauthGuardService.canActivate();
        });
    }
}
launch_guard_service_LaunchGuardService.ɵfac = function LaunchGuardService_Factory(t) { return new (t || launch_guard_service_LaunchGuardService)(core["nc" /* ɵɵinject */](fesm2015_router["e" /* Router */]), core["nc" /* ɵɵinject */](services_unauth_guard_service_UnauthGuardService)); };
launch_guard_service_LaunchGuardService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: launch_guard_service_LaunchGuardService, factory: launch_guard_service_LaunchGuardService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](launch_guard_service_LaunchGuardService, [{
        type: core["A" /* Injectable */]
    }], function () { return [{ type: fesm2015_router["e" /* Router */] }, { type: services_unauth_guard_service_UnauthGuardService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/services/lock-guard.service.ts
var lock_guard_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};








class lock_guard_service_LockGuardService {
    constructor(vaultTimeoutService, userService, router) {
        this.vaultTimeoutService = vaultTimeoutService;
        this.userService = userService;
        this.router = router;
        this.homepage = 'vault';
    }
    canActivate() {
        return lock_guard_service_awaiter(this, void 0, void 0, function* () {
            const isAuthed = yield this.userService.isAuthenticated();
            if (isAuthed) {
                const locked = yield this.vaultTimeoutService.isLocked();
                if (locked) {
                    return true;
                }
                else {
                    this.router.navigate([this.homepage]);
                    return false;
                }
            }
            this.router.navigate(['']);
            return false;
        });
    }
}
lock_guard_service_LockGuardService.ɵfac = function LockGuardService_Factory(t) { return new (t || lock_guard_service_LockGuardService)(core["nc" /* ɵɵinject */](VaultTimeoutService), core["nc" /* ɵɵinject */](UserService), core["nc" /* ɵɵinject */](fesm2015_router["e" /* Router */])); };
lock_guard_service_LockGuardService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: lock_guard_service_LockGuardService, factory: lock_guard_service_LockGuardService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](lock_guard_service_LockGuardService, [{
        type: core["A" /* Injectable */]
    }], function () { return [{ type: VaultTimeoutService }, { type: UserService }, { type: fesm2015_router["e" /* Router */] }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/services/lock-guard.service.ts



class services_lock_guard_service_LockGuardService extends lock_guard_service_LockGuardService {
    constructor() {
        super(...arguments);
        this.homepage = 'tabs/current';
    }
}
services_lock_guard_service_LockGuardService.ɵfac = function LockGuardService_Factory(t) { return ɵLockGuardService_BaseFactory(t || services_lock_guard_service_LockGuardService); };
services_lock_guard_service_LockGuardService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: services_lock_guard_service_LockGuardService, factory: services_lock_guard_service_LockGuardService.ɵfac });
const ɵLockGuardService_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](services_lock_guard_service_LockGuardService);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](services_lock_guard_service_LockGuardService, [{
        type: core["A" /* Injectable */]
    }], null, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/environment.service.ts
class EnvironmentService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/i18n.service.ts
class I18nService {
}

// EXTERNAL MODULE: ./jslib/common/src/abstractions/platformUtils.service.ts
var platformUtils_service = __webpack_require__(3);

// CONCATENATED MODULE: ./jslib/angular/src/components/environment.component.ts
var environment_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};








class environment_component_EnvironmentComponent {
    constructor(platformUtilsService, environmentService, i18nService) {
        this.platformUtilsService = platformUtilsService;
        this.environmentService = environmentService;
        this.i18nService = i18nService;
        this.onSaved = new core["t" /* EventEmitter */]();
        this.showCustom = false;
        const urls = this.environmentService.getUrls();
        this.baseUrl = urls.base || '';
        this.webVaultUrl = urls.webVault || '';
        this.apiUrl = urls.api || '';
        this.identityUrl = urls.identity || '';
        this.iconsUrl = urls.icons || '';
        this.notificationsUrl = urls.notifications || '';
    }
    submit() {
        return environment_component_awaiter(this, void 0, void 0, function* () {
            const resUrls = yield this.environmentService.setUrls({
                base: this.baseUrl,
                api: this.apiUrl,
                identity: this.identityUrl,
                webVault: this.webVaultUrl,
                icons: this.iconsUrl,
                notifications: this.notificationsUrl,
            });
            // re-set urls since service can change them, ex: prefixing https://
            this.baseUrl = resUrls.base;
            this.apiUrl = resUrls.api;
            this.identityUrl = resUrls.identity;
            this.webVaultUrl = resUrls.webVault;
            this.iconsUrl = resUrls.icons;
            this.notificationsUrl = resUrls.notifications;
            this.platformUtilsService.showToast('success', null, this.i18nService.t('environmentSaved'));
            this.saved();
        });
    }
    toggleCustom() {
        this.showCustom = !this.showCustom;
    }
    saved() {
        this.onSaved.emit();
    }
}
environment_component_EnvironmentComponent.ɵfac = function EnvironmentComponent_Factory(t) { return new (t || environment_component_EnvironmentComponent)(core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](I18nService)); };
environment_component_EnvironmentComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: environment_component_EnvironmentComponent, outputs: { onSaved: "onSaved" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](environment_component_EnvironmentComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: EnvironmentService }, { type: I18nService }]; }, { onSaved: [{
            type: core["O" /* Output */]
        }] }); })();

// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js
var fesm2015_forms = __webpack_require__(2);

// CONCATENATED MODULE: ./jslib/angular/src/directives/blur-click.directive.ts


class BlurClickDirective {
    constructor(el) {
        this.el = el;
    }
    onClick() {
        this.el.nativeElement.blur();
    }
}
BlurClickDirective.ɵfac = function BlurClickDirective_Factory(t) { return new (t || BlurClickDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */])); };
BlurClickDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: BlurClickDirective, selectors: [["", "appBlurClick", ""]], hostBindings: function BlurClickDirective_HostBindings(rf, ctx) { if (rf & 1) {
        core["qc" /* ɵɵlistener */]("click", function BlurClickDirective_click_HostBindingHandler() { return ctx.onClick(); });
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](BlurClickDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appBlurClick]',
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }]; }, { onClick: [{
            type: core["w" /* HostListener */],
            args: ['click']
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/box-row.directive.ts


class BoxRowDirective {
    constructor(elRef) {
        this.elRef = elRef;
        this.el = null;
        this.el = elRef.nativeElement;
    }
    ngOnInit() {
        this.formEls = Array.from(this.el.querySelectorAll('input:not([type="hidden"]), select, textarea'));
        this.formEls.forEach(formEl => {
            formEl.addEventListener('focus', (event) => {
                this.el.classList.add('active');
            }, false);
            formEl.addEventListener('blur', (event) => {
                this.el.classList.remove('active');
            }, false);
        });
    }
    onClick(event) {
        const target = event.target;
        if (target !== this.el && !target.classList.contains('progress') &&
            !target.classList.contains('progress-bar')) {
            return;
        }
        if (this.formEls.length > 0) {
            const formEl = this.formEls[0];
            if (formEl.tagName.toLowerCase() === 'input') {
                const inputEl = formEl;
                if (inputEl.type != null && inputEl.type.toLowerCase() === 'checkbox') {
                    inputEl.click();
                    return;
                }
            }
            formEl.focus();
        }
    }
}
BoxRowDirective.ɵfac = function BoxRowDirective_Factory(t) { return new (t || BoxRowDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */])); };
BoxRowDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: BoxRowDirective, selectors: [["", "appBoxRow", ""]], hostBindings: function BoxRowDirective_HostBindings(rf, ctx) { if (rf & 1) {
        core["qc" /* ɵɵlistener */]("click", function BoxRowDirective_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](BoxRowDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appBoxRow]',
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }]; }, { onClick: [{
            type: core["w" /* HostListener */],
            args: ['click', ['$event']]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/input-verbatim.directive.ts


class InputVerbatimDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
    }
    set appInputVerbatim(condition) {
        this.disableComplete = condition === '' || condition === true;
    }
    ngOnInit() {
        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {
            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');
        }
        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {
            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');
        }
        if (!this.el.nativeElement.hasAttribute('autocorrect')) {
            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');
        }
        if (!this.el.nativeElement.hasAttribute('spellcheck')) {
            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');
        }
        if (!this.el.nativeElement.hasAttribute('inputmode')) {
            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');
        }
    }
}
InputVerbatimDirective.ɵfac = function InputVerbatimDirective_Factory(t) { return new (t || InputVerbatimDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */]), core["dc" /* ɵɵdirectiveInject */](core["T" /* Renderer2 */])); };
InputVerbatimDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: InputVerbatimDirective, selectors: [["", "appInputVerbatim", ""]], inputs: { appInputVerbatim: "appInputVerbatim" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](InputVerbatimDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appInputVerbatim]',
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }, { type: core["T" /* Renderer2 */] }]; }, { appInputVerbatim: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/pipes/i18n.pipe.ts




class I18nPipe {
    constructor(i18nService) {
        this.i18nService = i18nService;
    }
    transform(id, p1, p2, p3) {
        return this.i18nService.t(id, p1, p2, p3);
    }
}
I18nPipe.ɵfac = function I18nPipe_Factory(t) { return new (t || I18nPipe)(core["dc" /* ɵɵdirectiveInject */](I18nService)); };
I18nPipe.ɵpipe = core["cc" /* ɵɵdefinePipe */]({ name: "i18n", type: I18nPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](I18nPipe, [{
        type: core["R" /* Pipe */],
        args: [{
                name: 'i18n',
            }]
    }], function () { return [{ type: I18nService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/accounts/environment.component.ts
















class accounts_environment_component_EnvironmentComponent extends environment_component_EnvironmentComponent {
    constructor(platformUtilsService, environmentService, i18nService, router) {
        super(platformUtilsService, environmentService, i18nService);
        this.router = router;
        this.showCustom = true;
    }
    saved() {
        super.saved();
        this.router.navigate(['']);
    }
}
accounts_environment_component_EnvironmentComponent.ɵfac = function EnvironmentComponent_Factory(t) { return new (t || accounts_environment_component_EnvironmentComponent)(core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */])); };
accounts_environment_component_EnvironmentComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_environment_component_EnvironmentComponent, selectors: [["app-environment"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 118, vars: 50, consts: [[3, "ngSubmit"], ["form", ""], [1, "left"], ["routerLink", "/home"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [1, "box"], [1, "box-header"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "baseUrl"], ["id", "baseUrl", "type", "text", "name", "BaseUrl", "placeholder", "ex. https://bitwarden.company.com", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], [1, "box-footer"], [1, "box-content", 3, "hidden"], ["for", "webVaultUrl"], ["id", "webVaultUrl", "type", "text", "name", "WebVaultUrl", "inputmode", "url", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "apiUrl"], ["id", "apiUrl", "type", "text", "name", "ApiUrl", "inputmode", "url", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "identityUrl"], ["id", "identityUrl", "type", "text", "name", "IdentityUrl", "inputmode", "url", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "notificationsUrl"], ["id", "notificationsUrl", "type", "text", "name", "NotificationsUrl", "inputmode", "url", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "iconsUrl"], ["id", "iconsUrl", "type", "text", "name", "IconsUrl", "inputmode", "url", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], [1, "box-footer", 3, "hidden"]], template: function EnvironmentComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function EnvironmentComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "button", 7);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "span", 8);
        core["Qc" /* ɵɵtext */](24);
        core["vc" /* ɵɵpipe */](25, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ec" /* ɵɵelement */](27, "i", 9);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["jc" /* ɵɵelementStart */](34, "div", 10);
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "div", 11);
        core["Qc" /* ɵɵtext */](37);
        core["vc" /* ɵɵpipe */](38, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](39, " ");
        core["jc" /* ɵɵelementStart */](40, "div", 12);
        core["Qc" /* ɵɵtext */](41, " ");
        core["jc" /* ɵɵelementStart */](42, "div", 13);
        core["Qc" /* ɵɵtext */](43, " ");
        core["jc" /* ɵɵelementStart */](44, "label", 14);
        core["Qc" /* ɵɵtext */](45);
        core["vc" /* ɵɵpipe */](46, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](47, " ");
        core["jc" /* ɵɵelementStart */](48, "input", 15);
        core["qc" /* ɵɵlistener */]("ngModelChange", function EnvironmentComponent_Template_input_ngModelChange_48_listener($event) { return ctx.baseUrl = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](49, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](50, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](51, " ");
        core["jc" /* ɵɵelementStart */](52, "div", 16);
        core["Qc" /* ɵɵtext */](53);
        core["vc" /* ɵɵpipe */](54, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](55, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](56, " ");
        core["jc" /* ɵɵelementStart */](57, "div", 10);
        core["Qc" /* ɵɵtext */](58, " ");
        core["jc" /* ɵɵelementStart */](59, "div", 11);
        core["Qc" /* ɵɵtext */](60);
        core["vc" /* ɵɵpipe */](61, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](62, " ");
        core["jc" /* ɵɵelementStart */](63, "div", 17);
        core["Qc" /* ɵɵtext */](64, " ");
        core["jc" /* ɵɵelementStart */](65, "div", 13);
        core["Qc" /* ɵɵtext */](66, " ");
        core["jc" /* ɵɵelementStart */](67, "label", 18);
        core["Qc" /* ɵɵtext */](68);
        core["vc" /* ɵɵpipe */](69, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](70, " ");
        core["jc" /* ɵɵelementStart */](71, "input", 19);
        core["qc" /* ɵɵlistener */]("ngModelChange", function EnvironmentComponent_Template_input_ngModelChange_71_listener($event) { return ctx.webVaultUrl = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](72, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](73, " ");
        core["jc" /* ɵɵelementStart */](74, "div", 13);
        core["Qc" /* ɵɵtext */](75, " ");
        core["jc" /* ɵɵelementStart */](76, "label", 20);
        core["Qc" /* ɵɵtext */](77);
        core["vc" /* ɵɵpipe */](78, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](79, " ");
        core["jc" /* ɵɵelementStart */](80, "input", 21);
        core["qc" /* ɵɵlistener */]("ngModelChange", function EnvironmentComponent_Template_input_ngModelChange_80_listener($event) { return ctx.apiUrl = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](81, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](82, " ");
        core["jc" /* ɵɵelementStart */](83, "div", 13);
        core["Qc" /* ɵɵtext */](84, " ");
        core["jc" /* ɵɵelementStart */](85, "label", 22);
        core["Qc" /* ɵɵtext */](86);
        core["vc" /* ɵɵpipe */](87, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](88, " ");
        core["jc" /* ɵɵelementStart */](89, "input", 23);
        core["qc" /* ɵɵlistener */]("ngModelChange", function EnvironmentComponent_Template_input_ngModelChange_89_listener($event) { return ctx.identityUrl = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](90, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](91, " ");
        core["jc" /* ɵɵelementStart */](92, "div", 13);
        core["Qc" /* ɵɵtext */](93, " ");
        core["jc" /* ɵɵelementStart */](94, "label", 24);
        core["Qc" /* ɵɵtext */](95);
        core["vc" /* ɵɵpipe */](96, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](97, " ");
        core["jc" /* ɵɵelementStart */](98, "input", 25);
        core["qc" /* ɵɵlistener */]("ngModelChange", function EnvironmentComponent_Template_input_ngModelChange_98_listener($event) { return ctx.notificationsUrl = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](99, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](100, " ");
        core["jc" /* ɵɵelementStart */](101, "div", 13);
        core["Qc" /* ɵɵtext */](102, " ");
        core["jc" /* ɵɵelementStart */](103, "label", 26);
        core["Qc" /* ɵɵtext */](104);
        core["vc" /* ɵɵpipe */](105, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](106, " ");
        core["jc" /* ɵɵelementStart */](107, "input", 27);
        core["qc" /* ɵɵlistener */]("ngModelChange", function EnvironmentComponent_Template_input_ngModelChange_107_listener($event) { return ctx.iconsUrl = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](108, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](109, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](110, " ");
        core["jc" /* ɵɵelementStart */](111, "div", 28);
        core["Qc" /* ɵɵtext */](112);
        core["vc" /* ɵɵpipe */](113, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](114, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](115, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](116, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](117, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 24, "close"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 26, "appName"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](25, 28, "save"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](10);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](38, 30, "selfHostedEnvironment"), " ");
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](46, 32, "baseUrl"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.baseUrl);
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](54, 34, "selfHostedEnvironmentFooter"), " ");
        core["Sb" /* ɵɵadvance */](7);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](61, 36, "customEnvironment"), " ");
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !ctx.showCustom);
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](69, 38, "webVaultUrl"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.webVaultUrl);
        core["Sb" /* ɵɵadvance */](6);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](78, 40, "apiUrl"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.apiUrl);
        core["Sb" /* ɵɵadvance */](6);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](87, 42, "identityUrl"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.identityUrl);
        core["Sb" /* ɵɵadvance */](6);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](96, 44, "notificationsUrl"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.notificationsUrl);
        core["Sb" /* ɵɵadvance */](6);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](105, 46, "iconsUrl"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.iconsUrl);
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("hidden", !ctx.showCustom);
        core["Sb" /* ɵɵadvance */](1);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](113, 48, "customEnvironmentFooter"), " ");
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_environment_component_EnvironmentComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-environment',
                templateUrl: 'environment.component.html',
            }]
    }], function () { return [{ type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: EnvironmentService }, { type: I18nService }, { type: fesm2015_router["e" /* Router */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/api.service.ts
class ApiService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/log.service.ts
class LogService {
}

// CONCATENATED MODULE: ./jslib/common/src/models/request/passwordHintRequest.ts
class PasswordHintRequest {
    constructor(email) {
        this.email = email;
    }
}

// CONCATENATED MODULE: ./jslib/angular/src/components/hint.component.ts
var hint_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

class hint_component_HintComponent {
    constructor(router, i18nService, apiService, platformUtilsService, logService) {
        this.router = router;
        this.i18nService = i18nService;
        this.apiService = apiService;
        this.platformUtilsService = platformUtilsService;
        this.logService = logService;
        this.email = '';
        this.successRoute = 'login';
    }
    submit() {
        return hint_component_awaiter(this, void 0, void 0, function* () {
            if (this.email == null || this.email === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('emailRequired'));
                return;
            }
            if (this.email.indexOf('@') === -1) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('invalidEmail'));
                return;
            }
            try {
                this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));
                yield this.formPromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t('masterPassSent'));
                if (this.onSuccessfulSubmit != null) {
                    this.onSuccessfulSubmit();
                }
                else if (this.router != null) {
                    this.router.navigate([this.successRoute]);
                }
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
}

// EXTERNAL MODULE: ./jslib/common/src/models/response/errorResponse.ts
var errorResponse = __webpack_require__(71);

// CONCATENATED MODULE: ./jslib/angular/src/services/validation.service.ts






class ValidationService {
    constructor(i18nService, platformUtilsService) {
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
    }
    showError(data) {
        const defaultErrorMessage = this.i18nService.t('unexpectedError');
        let errors = [];
        if (data != null && typeof data === 'string') {
            errors.push(data);
        }
        else if (data == null || typeof data !== 'object') {
            errors.push(defaultErrorMessage);
        }
        else if (data.validationErrors != null) {
            errors = errors.concat(data.getAllMessages());
        }
        else {
            errors.push(data.message ? data.message : defaultErrorMessage);
        }
        if (errors.length === 1) {
            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors[0]);
        }
        else if (errors.length > 1) {
            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors, {
                timeout: 5000 * errors.length,
            });
        }
        return errors;
    }
}
ValidationService.ɵfac = function ValidationService_Factory(t) { return new (t || ValidationService)(core["nc" /* ɵɵinject */](I18nService), core["nc" /* ɵɵinject */](platformUtils_service["a" /* PlatformUtilsService */])); };
ValidationService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: ValidationService, factory: ValidationService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](ValidationService, [{
        type: core["A" /* Injectable */]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/api-action.directive.ts







class api_action_directive_ApiActionDirective {
    constructor(el, validationService, logService) {
        this.el = el;
        this.validationService = validationService;
        this.logService = logService;
    }
    ngOnChanges(changes) {
        if (this.appApiAction == null || this.appApiAction.then == null) {
            return;
        }
        this.el.nativeElement.loading = true;
        this.appApiAction.then((response) => {
            this.el.nativeElement.loading = false;
        }, (e) => {
            var _a;
            this.el.nativeElement.loading = false;
            if ((e instanceof errorResponse["a" /* ErrorResponse */] || e.constructor.name === 'ErrorResponse') && e.captchaRequired) {
                this.logService.error('Captcha required error response: ' + e.getSingleMessage());
                return;
            }
            (_a = this.logService) === null || _a === void 0 ? void 0 : _a.error(`Received API exception: ${e}`);
            this.validationService.showError(e);
        });
    }
}
api_action_directive_ApiActionDirective.ɵfac = function ApiActionDirective_Factory(t) { return new (t || api_action_directive_ApiActionDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */]), core["dc" /* ɵɵdirectiveInject */](ValidationService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
api_action_directive_ApiActionDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: api_action_directive_ApiActionDirective, selectors: [["", "appApiAction", ""]], inputs: { appApiAction: "appApiAction" }, features: [core["Qb" /* ɵɵNgOnChangesFeature */]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](api_action_directive_ApiActionDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appApiAction]',
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }, { type: ValidationService }, { type: LogService }]; }, { appApiAction: [{
            type: core["D" /* Input */]
        }] }); })();

// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/operators/take.js
var take = __webpack_require__(196);

// EXTERNAL MODULE: ./jslib/common/src/misc/utils.ts
var utils = __webpack_require__(6);

// CONCATENATED MODULE: ./jslib/angular/src/directives/autofocus.directive.ts




class autofocus_directive_AutofocusDirective {
    constructor(el, ngZone) {
        this.el = el;
        this.ngZone = ngZone;
    }
    set appAutofocus(condition) {
        this.autofocus = condition === '' || condition === true;
    }
    ngOnInit() {
        if (!utils["a" /* Utils */].isMobileBrowser && this.autofocus) {
            if (this.ngZone.isStable) {
                this.el.nativeElement.focus();
            }
            else {
                this.ngZone.onStable.pipe(Object(take["a" /* take */])(1)).subscribe(() => this.el.nativeElement.focus());
            }
        }
    }
}
autofocus_directive_AutofocusDirective.ɵfac = function AutofocusDirective_Factory(t) { return new (t || autofocus_directive_AutofocusDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */]), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */])); };
autofocus_directive_AutofocusDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: autofocus_directive_AutofocusDirective, selectors: [["", "appAutofocus", ""]], inputs: { appAutofocus: "appAutofocus" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](autofocus_directive_AutofocusDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appAutofocus]',
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }, { type: core["M" /* NgZone */] }]; }, { appAutofocus: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/accounts/hint.component.ts




















class accounts_hint_component_HintComponent extends hint_component_HintComponent {
    constructor(router, platformUtilsService, i18nService, apiService, logService) {
        super(router, i18nService, apiService, platformUtilsService, logService);
    }
}
accounts_hint_component_HintComponent.ɵfac = function HintComponent_Factory(t) { return new (t || accounts_hint_component_HintComponent)(core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
accounts_hint_component_HintComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_hint_component_HintComponent, selectors: [["app-hint"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 55, vars: 20, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["routerLink", "/login"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "email"], ["id", "email", "type", "text", "name", "Email", "required", "", "appAutofocus", "", "inputmode", "email", "appInputVerbatim", "false", 3, "ngModel", "ngModelChange"], [1, "box-footer"]], template: function HintComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function HintComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "button", 7);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "span", 8);
        core["Qc" /* ɵɵtext */](24);
        core["vc" /* ɵɵpipe */](25, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ec" /* ɵɵelement */](27, "i", 9);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["jc" /* ɵɵelementStart */](34, "div", 10);
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "div", 11);
        core["Qc" /* ɵɵtext */](37, " ");
        core["jc" /* ɵɵelementStart */](38, "div", 12);
        core["Qc" /* ɵɵtext */](39, " ");
        core["jc" /* ɵɵelementStart */](40, "label", 13);
        core["Qc" /* ɵɵtext */](41);
        core["vc" /* ɵɵpipe */](42, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](43, " ");
        core["jc" /* ɵɵelementStart */](44, "input", 14);
        core["qc" /* ɵɵlistener */]("ngModelChange", function HintComponent_Template_input_ngModelChange_44_listener($event) { return ctx.email = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](45, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](46, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](47, " ");
        core["jc" /* ɵɵelementStart */](48, "div", 15);
        core["Qc" /* ɵɵtext */](49);
        core["vc" /* ɵɵpipe */](50, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](51, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](52, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](53, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](54, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 10, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 12, "passwordHint"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](25, 14, "submit"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](14);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](42, 16, "emailAddress"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.email);
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](50, 18, "enterEmailToGetHint"), " ");
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], autofocus_directive_AutofocusDirective, InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_hint_component_HintComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-hint',
                templateUrl: 'hint.component.html',
            }]
    }], function () { return [{ type: fesm2015_router["e" /* Router */] }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: ApiService }, { type: LogService }]; }, null); })();

// EXTERNAL MODULE: ./jslib/common/src/services/constants.service.ts
var constants_service = __webpack_require__(9);

// CONCATENATED MODULE: ./jslib/common/src/abstractions/cryptoFunction.service.ts
class CryptoFunctionService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/passwordGeneration.service.ts
class PasswordGenerationService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/storage.service.ts
class StorageService {
}

// CONCATENATED MODULE: ./src/popup/accounts/home.component.ts
var home_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
















class home_component_HomeComponent {
    constructor(platformUtilsService, passwordGenerationService, storageService, cryptoFunctionService, environmentService) {
        this.platformUtilsService = platformUtilsService;
        this.passwordGenerationService = passwordGenerationService;
        this.storageService = storageService;
        this.cryptoFunctionService = cryptoFunctionService;
        this.environmentService = environmentService;
    }
    launchSsoBrowser() {
        return home_component_awaiter(this, void 0, void 0, function* () {
            // Generate necessary sso params
            const passwordOptions = {
                type: 'password',
                length: 64,
                uppercase: true,
                lowercase: true,
                numbers: true,
                special: false,
            };
            const state = (yield this.passwordGenerationService.generatePassword(passwordOptions)) + ':clientId=browser';
            const codeVerifier = yield this.passwordGenerationService.generatePassword(passwordOptions);
            const codeVerifierHash = yield this.cryptoFunctionService.hash(codeVerifier, 'sha256');
            const codeChallenge = utils["a" /* Utils */].fromBufferToUrlB64(codeVerifierHash);
            yield this.storageService.save(constants_service["a" /* ConstantsService */].ssoCodeVerifierKey, codeVerifier);
            yield this.storageService.save(constants_service["a" /* ConstantsService */].ssoStateKey, state);
            let url = this.environmentService.getWebVaultUrl();
            if (url == null) {
                url = 'https://vault.bitwarden.com';
            }
            const redirectUri = url + '/sso-connector.html';
            // Launch browser
            this.platformUtilsService.launchUri(url + '/#/sso?clientId=browser' +
                '&redirectUri=' + encodeURIComponent(redirectUri) +
                '&state=' + state + '&codeChallenge=' + codeChallenge);
        });
    }
}
home_component_HomeComponent.ɵfac = function HomeComponent_Factory(t) { return new (t || home_component_HomeComponent)(core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](CryptoFunctionService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService)); };
home_component_HomeComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: home_component_HomeComponent, selectors: [["app-home"]], decls: 35, vars: 15, consts: [[1, "center-content"], [1, "content"], [1, "logo-image"], [1, "lead", "text-center"], ["routerLink", "/login", 1, "btn", "primary", "block"], ["type", "button", 1, "btn", "block", 3, "click"], ["aria-hidden", "true", 1, "fa", "fa-bank"], ["routerLink", "/register", 1, "btn", "block"], ["routerLink", "/environment", 1, "settings-icon"], ["aria-hidden", "true", 1, "fa", "fa-cog", "fa-lg"]], template: function HomeComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "div", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 1);
        core["Qc" /* ɵɵtext */](3, " ");
        core["ec" /* ɵɵelement */](4, "div", 2);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "p", 3);
        core["Qc" /* ɵɵtext */](7);
        core["vc" /* ɵɵpipe */](8, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](9, " ");
        core["jc" /* ɵɵelementStart */](10, "a", 4);
        core["jc" /* ɵɵelementStart */](11, "b");
        core["Qc" /* ɵɵtext */](12);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "button", 5);
        core["qc" /* ɵɵlistener */]("click", function HomeComponent_Template_button_click_15_listener() { return ctx.launchSsoBrowser(); });
        core["Qc" /* ɵɵtext */](16, " ");
        core["ec" /* ɵɵelement */](17, "i", 6);
        core["Qc" /* ɵɵtext */](18);
        core["vc" /* ɵɵpipe */](19, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "a", 7);
        core["Qc" /* ɵɵtext */](22);
        core["vc" /* ɵɵpipe */](23, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](25, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "a", 8);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ec" /* ɵɵelement */](29, "i", 9);
        core["jc" /* ɵɵelementStart */](30, "span");
        core["Qc" /* ɵɵtext */](31);
        core["vc" /* ɵɵpipe */](32, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](34, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 5, "loginOrCreateNewAccount"));
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 7, "login"));
        core["Sb" /* ɵɵadvance */](6);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](19, 9, "enterpriseSingleSignOn"), " ");
        core["Sb" /* ɵɵadvance */](4);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](23, 11, "createAccount"));
        core["Sb" /* ɵɵadvance */](9);
        core["Sc" /* ɵɵtextInterpolate1 */]("\u00A0", core["wc" /* ɵɵpipeBind1 */](32, 13, "settings"), "");
    } }, directives: [fesm2015_router["g" /* RouterLinkWithHref */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](home_component_HomeComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-home',
                templateUrl: 'home.component.html',
            }]
    }], function () { return [{ type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: PasswordGenerationService }, { type: StorageService }, { type: CryptoFunctionService }, { type: EnvironmentService }]; }, null); })();

// EXTERNAL MODULE: ./node_modules/sweetalert2/dist/sweetalert2.all.js
var sweetalert2_all = __webpack_require__(343);
var sweetalert2_all_default = /*#__PURE__*/__webpack_require__.n(sweetalert2_all);

// CONCATENATED MODULE: ./jslib/common/src/abstractions/crypto.service.ts
class CryptoService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/state.service.ts
class StateService {
}

// EXTERNAL MODULE: ./jslib/common/src/models/domain/encString.ts
var encString = __webpack_require__(21);

// EXTERNAL MODULE: ./jslib/common/src/models/request/secretVerificationRequest.ts
var secretVerificationRequest = __webpack_require__(170);

// EXTERNAL MODULE: ./jslib/common/src/enums/hashPurpose.ts
var hashPurpose = __webpack_require__(81);

// CONCATENATED MODULE: ./jslib/angular/src/components/lock.component.ts
var lock_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

































class lock_component_LockComponent {
    constructor(router, i18nService, platformUtilsService, messagingService, userService, cryptoService, storageService, vaultTimeoutService, environmentService, stateService, apiService, logService, keyConnectorService) {
        this.router = router;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.messagingService = messagingService;
        this.userService = userService;
        this.cryptoService = cryptoService;
        this.storageService = storageService;
        this.vaultTimeoutService = vaultTimeoutService;
        this.environmentService = environmentService;
        this.stateService = stateService;
        this.apiService = apiService;
        this.logService = logService;
        this.keyConnectorService = keyConnectorService;
        this.masterPassword = '';
        this.pin = '';
        this.showPassword = false;
        this.pinLock = false;
        this.webVaultHostname = '';
        this.successRoute = 'vault';
        this.invalidPinAttempts = 0;
    }
    ngOnInit() {
        return lock_component_awaiter(this, void 0, void 0, function* () {
            this.pinSet = yield this.vaultTimeoutService.isPinLockSet();
            this.pinLock = (this.pinSet[0] && this.vaultTimeoutService.pinProtectedKey != null) || this.pinSet[1];
            this.supportsBiometric = yield this.platformUtilsService.supportsBiometric();
            this.biometricLock = (yield this.vaultTimeoutService.isBiometricLockSet()) &&
                ((yield this.cryptoService.hasKeyStored('biometric')) || !this.platformUtilsService.supportsSecureStorage());
            this.biometricText = yield this.storageService.get(constants_service["a" /* ConstantsService */].biometricText);
            this.email = yield this.userService.getEmail();
            const usesKeyConnector = yield this.keyConnectorService.getUsesKeyConnector();
            this.hideInput = usesKeyConnector && !this.pinLock;
            // Users with key connector and without biometric or pin has no MP to unlock using
            if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {
                yield this.vaultTimeoutService.logOut();
            }
            const webVaultUrl = this.environmentService.getWebVaultUrl();
            const vaultUrl = webVaultUrl === 'https://vault.bitwarden.com' ? 'https://bitwarden.com' : webVaultUrl;
            this.webVaultHostname = utils["a" /* Utils */].getHostname(vaultUrl);
        });
    }
    submit() {
        return lock_component_awaiter(this, void 0, void 0, function* () {
            if (this.pinLock && (this.pin == null || this.pin === '')) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('pinRequired'));
                return;
            }
            if (!this.pinLock && (this.masterPassword == null || this.masterPassword === '')) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPassRequired'));
                return;
            }
            const kdf = yield this.userService.getKdf();
            const kdfIterations = yield this.userService.getKdfIterations();
            if (this.pinLock) {
                let failed = true;
                try {
                    if (this.pinSet[0]) {
                        const key = yield this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations, this.vaultTimeoutService.pinProtectedKey);
                        const encKey = yield this.cryptoService.getEncKey(key);
                        const protectedPin = yield this.storageService.get(constants_service["a" /* ConstantsService */].protectedPin);
                        const decPin = yield this.cryptoService.decryptToUtf8(new encString["a" /* EncString */](protectedPin), encKey);
                        failed = decPin !== this.pin;
                        if (!failed) {
                            yield this.setKeyAndContinue(key);
                        }
                    }
                    else {
                        const key = yield this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations);
                        failed = false;
                        yield this.setKeyAndContinue(key);
                    }
                }
                catch (_a) {
                    failed = true;
                }
                if (failed) {
                    this.invalidPinAttempts++;
                    if (this.invalidPinAttempts >= 5) {
                        this.messagingService.send('logout');
                        return;
                    }
                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('invalidPin'));
                }
            }
            else {
                const key = yield this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);
                const storedKeyHash = yield this.cryptoService.getKeyHash();
                let passwordValid = false;
                if (storedKeyHash != null) {
                    passwordValid = yield this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);
                }
                else {
                    const request = new secretVerificationRequest["a" /* SecretVerificationRequest */]();
                    const serverKeyHash = yield this.cryptoService.hashPassword(this.masterPassword, key, hashPurpose["a" /* HashPurpose */].ServerAuthorization);
                    request.masterPasswordHash = serverKeyHash;
                    try {
                        this.formPromise = this.apiService.postAccountVerifyPassword(request);
                        yield this.formPromise;
                        passwordValid = true;
                        const localKeyHash = yield this.cryptoService.hashPassword(this.masterPassword, key, hashPurpose["a" /* HashPurpose */].LocalAuthorization);
                        yield this.cryptoService.setKeyHash(localKeyHash);
                    }
                    catch (e) {
                        this.logService.error(e);
                    }
                }
                if (passwordValid) {
                    if (this.pinSet[0]) {
                        const protectedPin = yield this.storageService.get(constants_service["a" /* ConstantsService */].protectedPin);
                        const encKey = yield this.cryptoService.getEncKey(key);
                        const decPin = yield this.cryptoService.decryptToUtf8(new encString["a" /* EncString */](protectedPin), encKey);
                        const pinKey = yield this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);
                        this.vaultTimeoutService.pinProtectedKey = yield this.cryptoService.encrypt(key.key, pinKey);
                    }
                    this.setKeyAndContinue(key);
                }
                else {
                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('invalidMasterPassword'));
                }
            }
        });
    }
    logOut() {
        return lock_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'), this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));
            if (confirmed) {
                this.messagingService.send('logout');
            }
        });
    }
    unlockBiometric() {
        return lock_component_awaiter(this, void 0, void 0, function* () {
            if (!this.biometricLock) {
                return;
            }
            const success = (yield this.cryptoService.getKey('biometric')) != null;
            if (success) {
                yield this.doContinue();
            }
            return success;
        });
    }
    togglePassword() {
        this.showPassword = !this.showPassword;
        document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();
    }
    setKeyAndContinue(key) {
        return lock_component_awaiter(this, void 0, void 0, function* () {
            yield this.cryptoService.setKey(key);
            this.doContinue();
        });
    }
    doContinue() {
        return lock_component_awaiter(this, void 0, void 0, function* () {
            this.vaultTimeoutService.biometricLocked = false;
            this.vaultTimeoutService.everBeenUnlocked = true;
            const disableFavicon = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableFaviconKey);
            yield this.stateService.save(constants_service["a" /* ConstantsService */].disableFaviconKey, !!disableFavicon);
            this.messagingService.send('unlocked');
            if (this.onSuccessfulSubmit != null) {
                this.onSuccessfulSubmit();
            }
            else if (this.router != null) {
                this.router.navigate([this.successRoute]);
            }
        });
    }
}
lock_component_LockComponent.ɵfac = function LockComponent_Factory(t) { return new (t || lock_component_LockComponent)(core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](VaultTimeoutService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](LogService), core["dc" /* ɵɵdirectiveInject */](KeyConnectorService)); };
lock_component_LockComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: lock_component_LockComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](lock_component_LockComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: messaging_service["a" /* MessagingService */] }, { type: UserService }, { type: CryptoService }, { type: StorageService }, { type: VaultTimeoutService }, { type: EnvironmentService }, { type: StateService }, { type: ApiService }, { type: LogService }, { type: KeyConnectorService }]; }, null); })();

// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js
var common = __webpack_require__(1);

// CONCATENATED MODULE: ./jslib/angular/src/directives/stop-click.directive.ts


class StopClickDirective {
    onClick($event) {
        $event.preventDefault();
    }
}
StopClickDirective.ɵfac = function StopClickDirective_Factory(t) { return new (t || StopClickDirective)(); };
StopClickDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: StopClickDirective, selectors: [["", "appStopClick", ""]], hostBindings: function StopClickDirective_HostBindings(rf, ctx) { if (rf & 1) {
        core["qc" /* ɵɵlistener */]("click", function StopClickDirective_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](StopClickDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appStopClick]',
            }]
    }], null, { onClick: [{
            type: core["w" /* HostListener */],
            args: ['click', ['$event']]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/a11y-title.directive.ts


class A11yTitleDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
    }
    set appA11yTitle(title) {
        this.title = title;
    }
    ngOnInit() {
        if (!this.el.nativeElement.hasAttribute('title')) {
            this.renderer.setAttribute(this.el.nativeElement, 'title', this.title);
        }
        if (!this.el.nativeElement.hasAttribute('aria-label')) {
            this.renderer.setAttribute(this.el.nativeElement, 'aria-label', this.title);
        }
    }
}
A11yTitleDirective.ɵfac = function A11yTitleDirective_Factory(t) { return new (t || A11yTitleDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */]), core["dc" /* ɵɵdirectiveInject */](core["T" /* Renderer2 */])); };
A11yTitleDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: A11yTitleDirective, selectors: [["", "appA11yTitle", ""]], inputs: { appA11yTitle: "appA11yTitle" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](A11yTitleDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appA11yTitle]',
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }, { type: core["T" /* Renderer2 */] }]; }, { appA11yTitle: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/accounts/lock.component.ts
var accounts_lock_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







































function LockComponent_button_15_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "button", 13);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "unlock"));
} }
function LockComponent_div_25_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 19);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 20);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "input", 21);
    core["qc" /* ɵɵlistener */]("ngModelChange", function LockComponent_div_25_div_2_Template_input_ngModelChange_6_listener($event) { core["Jc" /* ɵɵrestoreView */](_r6); const ctx_r5 = core["uc" /* ɵɵnextContext */](2); return ctx_r5.pin = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "pin"));
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx_r3.showPassword ? "text" : "password");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r3.pin);
} }
function LockComponent_div_25_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r8 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 19);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 22);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "input", 23);
    core["qc" /* ɵɵlistener */]("ngModelChange", function LockComponent_div_25_div_4_Template_input_ngModelChange_6_listener($event) { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r7 = core["uc" /* ɵɵnextContext */](2); return ctx_r7.masterPassword = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "masterPass"));
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx_r4.showPassword ? "text" : "password");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.masterPassword);
} }
const _c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
function LockComponent_div_25_Template(rf, ctx) { if (rf & 1) {
    const _r10 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, LockComponent_div_25_div_2_Template, 8, 5, "div", 15);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, LockComponent_div_25_div_4_Template, 8, 5, "div", 15);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 16);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "button", 17);
    core["qc" /* ɵɵlistener */]("click", function LockComponent_div_25_Template_button_click_8_listener() { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r9 = core["uc" /* ɵɵnextContext */](); return ctx_r9.togglePassword(); });
    core["vc" /* ɵɵpipe */](9, "i18n");
    core["Qc" /* ɵɵtext */](10, " ");
    core["ec" /* ɵɵelement */](11, "i", 18);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.pinLock);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.pinLock);
    core["Sb" /* ɵɵadvance */](4);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](9, 4, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](6, _c0, !ctx_r1.showPassword, ctx_r1.showPassword));
} }
function LockComponent_div_37_Template(rf, ctx) { if (rf & 1) {
    const _r12 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 6);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 9);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "button", 24);
    core["qc" /* ɵɵlistener */]("click", function LockComponent_div_37_Template_button_click_4_listener() { core["Jc" /* ɵɵrestoreView */](_r12); const ctx_r11 = core["uc" /* ɵɵnextContext */](); return ctx_r11.unlockBiometric(); });
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 1, "unlockWithBiometrics"));
} }
class accounts_lock_component_LockComponent extends lock_component_LockComponent {
    constructor(router, i18nService, platformUtilsService, messagingService, userService, cryptoService, storageService, vaultTimeoutService, environmentService, stateService, apiService, logService, keyConnectorService) {
        super(router, i18nService, platformUtilsService, messagingService, userService, cryptoService, storageService, vaultTimeoutService, environmentService, stateService, apiService, logService, keyConnectorService);
        this.successRoute = '/tabs/current';
        this.isInitialLockScreen = window.previousPopupUrl == null;
    }
    ngOnInit() {
        const _super = Object.create(null, {
            ngOnInit: { get: () => super.ngOnInit }
        });
        var _a;
        return accounts_lock_component_awaiter(this, void 0, void 0, function* () {
            yield _super.ngOnInit.call(this);
            const disableAutoBiometricsPrompt = (_a = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableAutoBiometricsPromptKey)) !== null && _a !== void 0 ? _a : true;
            window.setTimeout(() => accounts_lock_component_awaiter(this, void 0, void 0, function* () {
                document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();
                if (this.biometricLock && !disableAutoBiometricsPrompt && this.isInitialLockScreen) {
                    if (yield this.vaultTimeoutService.isLocked()) {
                        yield this.unlockBiometric();
                    }
                }
            }), 100);
        });
    }
    unlockBiometric() {
        const _super = Object.create(null, {
            unlockBiometric: { get: () => super.unlockBiometric }
        });
        return accounts_lock_component_awaiter(this, void 0, void 0, function* () {
            if (!this.biometricLock) {
                return;
            }
            const div = document.createElement('div');
            div.innerHTML = `<div class="swal2-text">${this.i18nService.t('awaitDesktop')}</div>`;
            sweetalert2_all_default.a.fire({
                heightAuto: false,
                buttonsStyling: false,
                html: div,
                showCancelButton: true,
                cancelButtonText: this.i18nService.t('cancel'),
                showConfirmButton: false,
            });
            const success = yield _super.unlockBiometric.call(this);
            // Avoid closing the error dialogs
            if (success) {
                sweetalert2_all_default.a.close();
            }
            return success;
        });
    }
}
accounts_lock_component_LockComponent.ɵfac = function LockComponent_Factory(t) { return new (t || accounts_lock_component_LockComponent)(core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](VaultTimeoutService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](LogService), core["dc" /* ɵɵdirectiveInject */](KeyConnectorService)); };
accounts_lock_component_LockComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_lock_component_LockComponent, selectors: [["app-lock"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 48, vars: 17, consts: [[3, "ngSubmit"], [1, "left"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 4, "ngIf"], [1, "box"], [1, "box-content"], ["class", "box-content-row box-content-row-flex", "appBoxRow", "", 4, "ngIf"], [1, "box-footer"], ["class", "box", 4, "ngIf"], [1, "text-center"], ["type", "button", "appStopClick", "", 3, "click"], ["type", "submit", "appBlurClick", ""], ["appBoxRow", "", 1, "box-content-row", "box-content-row-flex"], ["class", "row-main", 4, "ngIf"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], [1, "row-main"], ["for", "pin"], ["id", "pin", "name", "PIN", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], ["for", "masterPassword"], ["id", "masterPassword", "name", "MasterPassword", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], ["type", "button", "appStopClick", "", 1, "btn", "primary", "block", 3, "click"]], template: function LockComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0);
        core["qc" /* ɵɵlistener */]("ngSubmit", function LockComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "header");
        core["Qc" /* ɵɵtext */](3, " ");
        core["ec" /* ɵɵelement */](4, "div", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "div", 2);
        core["Qc" /* ɵɵtext */](7, " ");
        core["jc" /* ɵɵelementStart */](8, "span", 3);
        core["Qc" /* ɵɵtext */](9);
        core["vc" /* ɵɵpipe */](10, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["jc" /* ɵɵelementStart */](13, "div", 4);
        core["Qc" /* ɵɵtext */](14, " ");
        core["Oc" /* ɵɵtemplate */](15, LockComponent_button_15_Template, 3, 3, "button", 5);
        core["Qc" /* ɵɵtext */](16, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "content");
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "div", 6);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "div", 7);
        core["Qc" /* ɵɵtext */](24, " ");
        core["Oc" /* ɵɵtemplate */](25, LockComponent_div_25_Template, 15, 9, "div", 8);
        core["Qc" /* ɵɵtext */](26, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](27, " ");
        core["jc" /* ɵɵelementStart */](28, "div", 9);
        core["Qc" /* ɵɵtext */](29, " ");
        core["jc" /* ɵɵelementStart */](30, "p");
        core["Qc" /* ɵɵtext */](31);
        core["vc" /* ɵɵpipe */](32, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33);
        core["vc" /* ɵɵpipe */](34, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](35, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](36, " ");
        core["Oc" /* ɵɵtemplate */](37, LockComponent_div_37_Template, 9, 3, "div", 10);
        core["Qc" /* ɵɵtext */](38, " ");
        core["jc" /* ɵɵelementStart */](39, "p", 11);
        core["Qc" /* ɵɵtext */](40, " ");
        core["jc" /* ɵɵelementStart */](41, "button", 12);
        core["qc" /* ɵɵlistener */]("click", function LockComponent_Template_button_click_41_listener() { return ctx.logOut(); });
        core["Qc" /* ɵɵtext */](42);
        core["vc" /* ɵɵpipe */](43, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](44, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](45, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](46, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](47, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 7, "verifyIdentity"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.hideInput);
        core["Sb" /* ɵɵadvance */](10);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.hideInput);
        core["Sb" /* ɵɵadvance */](6);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](32, 9, "yourVaultIsLocked"));
        core["Sb" /* ɵɵadvance */](2);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["yc" /* ɵɵpipeBind3 */](34, 11, "loggedInAsOn", ctx.email, ctx.webVaultHostname), " ");
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.biometricLock);
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](43, 15, "logOut"));
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], common["l" /* NgIf */], StopClickDirective, BlurClickDirective, BoxRowDirective, A11yTitleDirective, common["j" /* NgClass */], fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_lock_component_LockComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-lock',
                templateUrl: 'lock.component.html',
            }]
    }], function () { return [{ type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: messaging_service["a" /* MessagingService */] }, { type: UserService }, { type: CryptoService }, { type: StorageService }, { type: VaultTimeoutService }, { type: EnvironmentService }, { type: StateService }, { type: ApiService }, { type: LogService }, { type: KeyConnectorService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/auth.service.ts
class AuthService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/sync.service.ts
class SyncService {
}

// CONCATENATED MODULE: ./jslib/common/src/misc/iframe_component.ts
class IFrameComponent {
    constructor(win, webVaultUrl, path, iframeId, successCallback, errorCallback, infoCallback) {
        this.win = win;
        this.webVaultUrl = webVaultUrl;
        this.path = path;
        this.iframeId = iframeId;
        this.successCallback = successCallback;
        this.errorCallback = errorCallback;
        this.infoCallback = infoCallback;
        this.parseFunction = this.parseMessage.bind(this);
        this.connectorLink = win.document.createElement('a');
    }
    stop() {
        this.sendMessage('stop');
    }
    start() {
        this.sendMessage('start');
    }
    sendMessage(message) {
        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {
            return;
        }
        this.iframe.contentWindow.postMessage(message, this.iframe.src);
    }
    base64Encode(str) {
        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {
            return String.fromCharCode(('0x' + p1));
        }));
    }
    cleanup() {
        this.win.removeEventListener('message', this.parseFunction, false);
    }
    createParams(data, version) {
        return new URLSearchParams({
            data: this.base64Encode(JSON.stringify(data)),
            parent: encodeURIComponent(this.win.document.location.href),
            v: version.toString(),
        });
    }
    initComponent(params) {
        this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;
        this.iframe = this.win.document.getElementById(this.iframeId);
        this.iframe.src = this.connectorLink.href;
        this.win.addEventListener('message', this.parseFunction, false);
    }
    parseMessage(event) {
        if (!this.validMessage(event)) {
            return;
        }
        const parts = event.data.split('|');
        if (parts[0] === 'success' && this.successCallback) {
            this.successCallback(parts[1]);
        }
        else if (parts[0] === 'error' && this.errorCallback) {
            this.errorCallback(parts[1]);
        }
        else if (parts[0] === 'info' && this.infoCallback) {
            this.infoCallback(parts[1]);
        }
    }
    validMessage(event) {
        if (event.origin == null || event.origin === '' || event.origin !== this.connectorLink.origin ||
            event.data == null || typeof (event.data) !== 'string') {
            return false;
        }
        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||
            event.data.indexOf('info|') === 0;
    }
}

// CONCATENATED MODULE: ./jslib/common/src/misc/captcha_iframe.ts

class captcha_iframe_CaptchaIFrame extends IFrameComponent {
    constructor(win, webVaultUrl, i18nService, successCallback, errorCallback, infoCallback) {
        super(win, webVaultUrl, 'captcha-connector.html', 'hcaptcha_iframe', successCallback, errorCallback, (message) => {
            const parsedMessage = JSON.parse(message);
            if (typeof (parsedMessage) !== 'string') {
                this.iframe.height = (parsedMessage.height).toString();
                this.iframe.width = (parsedMessage.width).toString();
            }
            else {
                infoCallback(parsedMessage);
            }
        });
        this.i18nService = i18nService;
    }
    init(siteKey) {
        super.initComponent(this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1));
    }
}

// CONCATENATED MODULE: ./jslib/angular/src/components/captchaProtected.component.ts
var captchaProtected_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










class captchaProtected_component_CaptchaProtectedComponent {
    constructor(environmentService, i18nService, platformUtilsService) {
        this.environmentService = environmentService;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.captchaSiteKey = null;
        this.captchaToken = null;
    }
    setupCaptcha() {
        return captchaProtected_component_awaiter(this, void 0, void 0, function* () {
            const webVaultUrl = this.environmentService.getWebVaultUrl();
            this.captcha = new captcha_iframe_CaptchaIFrame(window, webVaultUrl, this.i18nService, (token) => {
                this.captchaToken = token;
            }, (error) => {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);
            }, (info) => {
                this.platformUtilsService.showToast('info', this.i18nService.t('info'), info);
            });
        });
    }
    showCaptcha() {
        return !utils["a" /* Utils */].isNullOrWhitespace(this.captchaSiteKey);
    }
    handleCaptchaRequired(response) {
        if (utils["a" /* Utils */].isNullOrWhitespace(response.captchaSiteKey)) {
            return false;
        }
        this.captchaSiteKey = response.captchaSiteKey;
        this.captcha.init(response.captchaSiteKey);
        return true;
    }
}
captchaProtected_component_CaptchaProtectedComponent.ɵfac = function CaptchaProtectedComponent_Factory(t) { return new (t || captchaProtected_component_CaptchaProtectedComponent)(core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */])); };
captchaProtected_component_CaptchaProtectedComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: captchaProtected_component_CaptchaProtectedComponent, inputs: { captchaSiteKey: "captchaSiteKey" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](captchaProtected_component_CaptchaProtectedComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: EnvironmentService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }]; }, { captchaSiteKey: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/login.component.ts
var login_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

























const Keys = {
    rememberedEmail: 'rememberedEmail',
    rememberEmail: 'rememberEmail',
};
class login_component_LoginComponent extends captchaProtected_component_CaptchaProtectedComponent {
    constructor(authService, router, platformUtilsService, i18nService, stateService, environmentService, passwordGenerationService, cryptoFunctionService, storageService, logService) {
        super(environmentService, i18nService, platformUtilsService);
        this.authService = authService;
        this.router = router;
        this.stateService = stateService;
        this.passwordGenerationService = passwordGenerationService;
        this.cryptoFunctionService = cryptoFunctionService;
        this.storageService = storageService;
        this.logService = logService;
        this.email = '';
        this.rememberEmail = true;
        this.masterPassword = '';
        this.showPassword = false;
        this.twoFactorRoute = '2fa';
        this.successRoute = 'vault';
        this.forcePasswordResetRoute = 'update-temp-password';
    }
    ngOnInit() {
        return login_component_awaiter(this, void 0, void 0, function* () {
            if (this.email == null || this.email === '') {
                this.email = yield this.storageService.get(Keys.rememberedEmail);
                if (this.email == null) {
                    this.email = '';
                }
            }
            this.rememberEmail = yield this.storageService.get(Keys.rememberEmail);
            if (this.rememberEmail == null) {
                this.rememberEmail = true;
            }
            if (utils["a" /* Utils */].isBrowser && !utils["a" /* Utils */].isNode) {
                this.focusInput();
            }
        });
    }
    submit() {
        return login_component_awaiter(this, void 0, void 0, function* () {
            yield this.setupCaptcha();
            if (this.email == null || this.email === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('emailRequired'));
                return;
            }
            if (this.email.indexOf('@') === -1) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('invalidEmail'));
                return;
            }
            if (this.masterPassword == null || this.masterPassword === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPassRequired'));
                return;
            }
            try {
                this.formPromise = this.authService.logIn(this.email, this.masterPassword, this.captchaToken);
                const response = yield this.formPromise;
                yield this.storageService.save(Keys.rememberEmail, this.rememberEmail);
                if (this.rememberEmail) {
                    yield this.storageService.save(Keys.rememberedEmail, this.email);
                }
                else {
                    yield this.storageService.remove(Keys.rememberedEmail);
                }
                if (this.handleCaptchaRequired(response)) {
                    return;
                }
                else if (response.twoFactor) {
                    if (this.onSuccessfulLoginTwoFactorNavigate != null) {
                        this.onSuccessfulLoginTwoFactorNavigate();
                    }
                    else {
                        this.router.navigate([this.twoFactorRoute]);
                    }
                }
                else if (response.forcePasswordReset) {
                    if (this.onSuccessfulLoginForceResetNavigate != null) {
                        this.onSuccessfulLoginForceResetNavigate();
                    }
                    else {
                        this.router.navigate([this.forcePasswordResetRoute]);
                    }
                }
                else {
                    const disableFavicon = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableFaviconKey);
                    yield this.stateService.save(constants_service["a" /* ConstantsService */].disableFaviconKey, !!disableFavicon);
                    if (this.onSuccessfulLogin != null) {
                        this.onSuccessfulLogin();
                    }
                    if (this.onSuccessfulLoginNavigate != null) {
                        this.onSuccessfulLoginNavigate();
                    }
                    else {
                        this.router.navigate([this.successRoute]);
                    }
                }
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
    togglePassword() {
        this.showPassword = !this.showPassword;
        document.getElementById('masterPassword').focus();
    }
    launchSsoBrowser(clientId, ssoRedirectUri) {
        return login_component_awaiter(this, void 0, void 0, function* () {
            // Generate necessary sso params
            const passwordOptions = {
                type: 'password',
                length: 64,
                uppercase: true,
                lowercase: true,
                numbers: true,
                special: false,
            };
            const state = yield this.passwordGenerationService.generatePassword(passwordOptions);
            const ssoCodeVerifier = yield this.passwordGenerationService.generatePassword(passwordOptions);
            const codeVerifierHash = yield this.cryptoFunctionService.hash(ssoCodeVerifier, 'sha256');
            const codeChallenge = utils["a" /* Utils */].fromBufferToUrlB64(codeVerifierHash);
            // Save sso params
            yield this.storageService.save(constants_service["a" /* ConstantsService */].ssoStateKey, state);
            yield this.storageService.save(constants_service["a" /* ConstantsService */].ssoCodeVerifierKey, ssoCodeVerifier);
            // Build URI
            const webUrl = this.environmentService.getWebVaultUrl();
            // Launch browser
            this.platformUtilsService.launchUri(webUrl + '/#/sso?clientId=' + clientId +
                '&redirectUri=' + encodeURIComponent(ssoRedirectUri) +
                '&state=' + state + '&codeChallenge=' + codeChallenge);
        });
    }
    focusInput() {
        document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();
    }
}
login_component_LoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || login_component_LoginComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](CryptoFunctionService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
login_component_LoginComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: login_component_LoginComponent, inputs: { email: "email", rememberEmail: "rememberEmail" }, features: [core["Pb" /* ɵɵInheritDefinitionFeature */]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](login_component_LoginComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: StateService }, { type: EnvironmentService }, { type: PasswordGenerationService }, { type: CryptoFunctionService }, { type: StorageService }, { type: LogService }]; }, { email: [{
            type: core["D" /* Input */]
        }], rememberEmail: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/accounts/login.component.ts
var accounts_login_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


































const login_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
class accounts_login_component_LoginComponent extends login_component_LoginComponent {
    constructor(authService, router, platformUtilsService, i18nService, stateService, environmentService, passwordGenerationService, cryptoFunctionService, storageService, syncService, logService) {
        super(authService, router, platformUtilsService, i18nService, stateService, environmentService, passwordGenerationService, cryptoFunctionService, storageService, logService);
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.stateService = stateService;
        this.environmentService = environmentService;
        this.passwordGenerationService = passwordGenerationService;
        this.cryptoFunctionService = cryptoFunctionService;
        super.onSuccessfulLogin = () => accounts_login_component_awaiter(this, void 0, void 0, function* () {
            yield syncService.fullSync(true);
        });
        super.successRoute = '/tabs/vault';
    }
    settings() {
        this.router.navigate(['environment']);
    }
}
accounts_login_component_LoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || accounts_login_component_LoginComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](CryptoFunctionService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
accounts_login_component_LoginComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_login_component_LoginComponent, selectors: [["app-login"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 84, vars: 33, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["routerLink", "/home"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "email"], ["id", "email", "type", "text", "name", "Email", "required", "", "inputmode", "email", "appInputVerbatim", "false", 3, "ngModel", "ngModelChange"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-flex"], [1, "row-main"], ["for", "masterPassword"], ["id", "masterPassword", "name", "MasterPassword", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], [1, "box-content-row", 3, "hidden"], ["id", "hcaptcha_iframe", "height", "80"], [1, "text-center"], ["routerLink", "/hint"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function LoginComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "button", 7);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "span", 8);
        core["Qc" /* ɵɵtext */](24);
        core["vc" /* ɵɵpipe */](25, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ec" /* ɵɵelement */](27, "i", 9);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["jc" /* ɵɵelementStart */](34, "div", 10);
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "div", 11);
        core["Qc" /* ɵɵtext */](37, " ");
        core["jc" /* ɵɵelementStart */](38, "div", 12);
        core["Qc" /* ɵɵtext */](39, " ");
        core["jc" /* ɵɵelementStart */](40, "label", 13);
        core["Qc" /* ɵɵtext */](41);
        core["vc" /* ɵɵpipe */](42, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](43, " ");
        core["jc" /* ɵɵelementStart */](44, "input", 14);
        core["qc" /* ɵɵlistener */]("ngModelChange", function LoginComponent_Template_input_ngModelChange_44_listener($event) { return ctx.email = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](45, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](46, " ");
        core["jc" /* ɵɵelementStart */](47, "div", 15);
        core["Qc" /* ɵɵtext */](48, " ");
        core["jc" /* ɵɵelementStart */](49, "div", 16);
        core["Qc" /* ɵɵtext */](50, " ");
        core["jc" /* ɵɵelementStart */](51, "label", 17);
        core["Qc" /* ɵɵtext */](52);
        core["vc" /* ɵɵpipe */](53, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](54, " ");
        core["jc" /* ɵɵelementStart */](55, "input", 18);
        core["qc" /* ɵɵlistener */]("ngModelChange", function LoginComponent_Template_input_ngModelChange_55_listener($event) { return ctx.masterPassword = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](56, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](57, " ");
        core["jc" /* ɵɵelementStart */](58, "div", 19);
        core["Qc" /* ɵɵtext */](59, " ");
        core["jc" /* ɵɵelementStart */](60, "button", 20);
        core["qc" /* ɵɵlistener */]("click", function LoginComponent_Template_button_click_60_listener() { return ctx.togglePassword(); });
        core["vc" /* ɵɵpipe */](61, "i18n");
        core["Qc" /* ɵɵtext */](62, " ");
        core["ec" /* ɵɵelement */](63, "i", 21);
        core["Qc" /* ɵɵtext */](64, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](65, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](66, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](67, " ");
        core["jc" /* ɵɵelementStart */](68, "div", 22);
        core["Qc" /* ɵɵtext */](69, " ");
        core["ec" /* ɵɵelement */](70, "iframe", 23);
        core["Qc" /* ɵɵtext */](71, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](72, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](73, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](74, " ");
        core["jc" /* ɵɵelementStart */](75, "p", 24);
        core["Qc" /* ɵɵtext */](76, " ");
        core["jc" /* ɵɵelementStart */](77, "a", 25);
        core["Qc" /* ɵɵtext */](78);
        core["vc" /* ɵɵpipe */](79, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](80, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](81, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](82, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](83, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 16, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 18, "appName"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](25, 20, "login"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](14);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](42, 22, "emailAddress"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.email);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](53, 24, "masterPass"));
        core["Sb" /* ɵɵadvance */](3);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.showPassword ? "text" : "password");
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.masterPassword);
        core["Sb" /* ɵɵadvance */](5);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](61, 26, "toggleVisibility"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](30, login_component_c0, !ctx.showPassword, ctx.showPassword));
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("hidden", !ctx.showCaptcha());
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](79, 28, "getMasterPasswordHint"));
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], StopClickDirective, A11yTitleDirective, common["j" /* NgClass */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_login_component_LoginComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-login',
                templateUrl: 'login.component.html',
            }]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: StateService }, { type: EnvironmentService }, { type: PasswordGenerationService }, { type: CryptoFunctionService }, { type: StorageService }, { type: SyncService }, { type: LogService }]; }, null); })();

// EXTERNAL MODULE: ./jslib/common/src/models/request/keysRequest.ts
var keysRequest = __webpack_require__(116);

// CONCATENATED MODULE: ./jslib/common/src/models/request/registerRequest.ts
class RegisterRequest {
    constructor(email, name, masterPasswordHash, masterPasswordHint, key, kdf, kdfIterations, referenceData, captchaResponse) {
        this.email = email;
        this.name = name;
        this.masterPasswordHash = masterPasswordHash;
        this.key = key;
        this.kdf = kdf;
        this.kdfIterations = kdfIterations;
        this.referenceData = referenceData;
        this.captchaResponse = captchaResponse;
        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;
    }
}

// EXTERNAL MODULE: ./jslib/common/src/enums/kdfType.ts
var kdfType = __webpack_require__(171);

// CONCATENATED MODULE: ./jslib/angular/src/components/register.component.ts
var register_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


























class register_component_RegisterComponent extends captchaProtected_component_CaptchaProtectedComponent {
    constructor(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService, passwordGenerationService, environmentService, logService) {
        super(environmentService, i18nService, platformUtilsService);
        this.authService = authService;
        this.router = router;
        this.cryptoService = cryptoService;
        this.apiService = apiService;
        this.stateService = stateService;
        this.passwordGenerationService = passwordGenerationService;
        this.logService = logService;
        this.name = '';
        this.email = '';
        this.masterPassword = '';
        this.confirmMasterPassword = '';
        this.hint = '';
        this.showPassword = false;
        this.showTerms = true;
        this.acceptPolicies = false;
        this.successRoute = 'login';
        this.showTerms = !platformUtilsService.isSelfHost();
    }
    ngOnInit() {
        return register_component_awaiter(this, void 0, void 0, function* () {
            this.setupCaptcha();
        });
    }
    get masterPasswordScoreWidth() {
        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;
    }
    get masterPasswordScoreColor() {
        switch (this.masterPasswordScore) {
            case 4:
                return 'success';
            case 3:
                return 'primary';
            case 2:
                return 'warning';
            default:
                return 'danger';
        }
    }
    get masterPasswordScoreText() {
        switch (this.masterPasswordScore) {
            case 4:
                return this.i18nService.t('strong');
            case 3:
                return this.i18nService.t('good');
            case 2:
                return this.i18nService.t('weak');
            default:
                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;
        }
    }
    submit() {
        return register_component_awaiter(this, void 0, void 0, function* () {
            if (!this.acceptPolicies && this.showTerms) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('acceptPoliciesError'));
                return;
            }
            if (this.email == null || this.email === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('emailRequired'));
                return;
            }
            if (this.email.indexOf('@') === -1) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('invalidEmail'));
                return;
            }
            if (this.masterPassword == null || this.masterPassword === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPassRequired'));
                return;
            }
            if (this.masterPassword.length < 8) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPassLength'));
                return;
            }
            if (this.masterPassword !== this.confirmMasterPassword) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPassDoesntMatch'));
                return;
            }
            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword, this.getPasswordStrengthUserInput());
            if (strengthResult != null && strengthResult.score < 3) {
                const result = yield this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'), this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
                if (!result) {
                    return;
                }
            }
            if (this.hint === this.masterPassword) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('hintEqualsPassword'));
                return;
            }
            this.name = this.name === '' ? null : this.name;
            this.email = this.email.trim().toLowerCase();
            const kdf = kdfType["a" /* KdfType */].PBKDF2_SHA256;
            const useLowerKdf = this.platformUtilsService.isIE();
            const kdfIterations = useLowerKdf ? 10000 : 100000;
            const key = yield this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);
            const encKey = yield this.cryptoService.makeEncKey(key);
            const hashedPassword = yield this.cryptoService.hashPassword(this.masterPassword, key);
            const keys = yield this.cryptoService.makeKeyPair(encKey[0]);
            const request = new RegisterRequest(this.email, this.name, hashedPassword, this.hint, encKey[1].encryptedString, kdf, kdfIterations, this.referenceData, this.captchaToken);
            request.keys = new keysRequest["a" /* KeysRequest */](keys[0], keys[1].encryptedString);
            const orgInvite = yield this.stateService.get('orgInvitation');
            if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {
                request.token = orgInvite.token;
                request.organizationUserId = orgInvite.organizationUserId;
            }
            try {
                this.formPromise = this.apiService.postRegister(request);
                try {
                    yield this.formPromise;
                }
                catch (e) {
                    if (this.handleCaptchaRequired(e)) {
                        return;
                    }
                    else {
                        throw e;
                    }
                }
                this.platformUtilsService.showToast('success', null, this.i18nService.t('newAccountCreated'));
                this.router.navigate([this.successRoute], { queryParams: { email: this.email } });
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
    togglePassword(confirmField) {
        this.showPassword = !this.showPassword;
        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();
    }
    updatePasswordStrength() {
        if (this.masterPasswordStrengthTimeout != null) {
            clearTimeout(this.masterPasswordStrengthTimeout);
        }
        this.masterPasswordStrengthTimeout = setTimeout(() => {
            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword, this.getPasswordStrengthUserInput());
            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;
        }, 300);
    }
    getPasswordStrengthUserInput() {
        let userInput = [];
        const atPosition = this.email.indexOf('@');
        if (atPosition > -1) {
            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));
        }
        if (this.name != null && this.name !== '') {
            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));
        }
        return userInput;
    }
}
register_component_RegisterComponent.ɵfac = function RegisterComponent_Factory(t) { return new (t || register_component_RegisterComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
register_component_RegisterComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: register_component_RegisterComponent, features: [core["Pb" /* ɵɵInheritDefinitionFeature */]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](register_component_RegisterComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: CryptoService }, { type: ApiService }, { type: StateService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: PasswordGenerationService }, { type: EnvironmentService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/accounts/register.component.ts

































function RegisterComponent_strong_56_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "strong");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Ub" /* ɵɵclassMapInterpolate1 */]("sub-label text-", ctx_r1.masterPasswordScoreColor, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r1.masterPasswordScoreText, " ");
} }
function RegisterComponent_div_127_Template(rf, ctx) { if (rf & 1) {
    const _r4 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 33);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 11);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 34);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "input", 35);
    core["qc" /* ɵɵlistener */]("ngModelChange", function RegisterComponent_div_127_Template_input_ngModelChange_6_listener($event) { core["Jc" /* ɵɵrestoreView */](_r4); const ctx_r3 = core["uc" /* ɵɵnextContext */](); return ctx_r3.acceptPolicies = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "label", 36);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ec" /* ɵɵelement */](11, "br");
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "a", 37);
    core["Qc" /* ɵɵtext */](14);
    core["vc" /* ɵɵpipe */](15, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, ", ");
    core["jc" /* ɵɵelementStart */](17, "a", 38);
    core["Qc" /* ɵɵtext */](18);
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.acceptPolicies);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](10, 4, "acceptPolicies"), "");
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](15, 6, "termsOfService"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 8, "privacyPolicy"));
} }
const register_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
const _c1 = function (a0) { return { width: a0 }; };
class accounts_register_component_RegisterComponent extends register_component_RegisterComponent {
    constructor(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService, passwordGenerationService, environmentService, logService) {
        super(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService, passwordGenerationService, environmentService, logService);
    }
}
accounts_register_component_RegisterComponent.ɵfac = function RegisterComponent_Factory(t) { return new (t || accounts_register_component_RegisterComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
accounts_register_component_RegisterComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_register_component_RegisterComponent, selectors: [["app-register"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 131, vars: 63, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["routerLink", "/home"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "email"], ["id", "email", "type", "text", "name", "Email", "required", "", "inputmode", "email", "appInputVerbatim", "false", 3, "ngModel", "appAutofocus", "ngModelChange"], [1, "box-content-row-flex"], [1, "row-main"], ["for", "masterPassword"], [3, "class", 4, "ngIf"], ["id", "masterPassword", "name", "MasterPassword", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "appAutofocus", "ngModelChange", "input"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], [1, "progress"], ["role", "progressbar", "aria-valuenow", "0", "aria-valuemin", "0", "aria-valuemax", "100", 3, "ngStyle"], [1, "box-footer"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-flex"], ["for", "masterPasswordRetype"], ["id", "masterPasswordRetype", "name", "MasterPasswordRetype", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], ["for", "hint"], ["id", "hint", "type", "text", "name", "Hint", 3, "ngModel", "ngModelChange"], ["id", "hcaptcha_iframe", "height", "80"], ["class", "box last", 4, "ngIf"], [1, "box", "last"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox", "box-content-row-checkbox-left", "box-content-row-word-break"], ["type", "checkbox", "id", "acceptPolicies", "name", "AcceptPolicies", 3, "ngModel", "ngModelChange"], ["for", "acceptPolicies"], ["href", "https://bitwarden.com/terms/", "target", "_blank", "rel", "noopener"], ["href", "https://bitwarden.com/privacy/", "target", "_blank", "rel", "noopener"]], template: function RegisterComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function RegisterComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "button", 7);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "span", 8);
        core["Qc" /* ɵɵtext */](24);
        core["vc" /* ɵɵpipe */](25, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ec" /* ɵɵelement */](27, "i", 9);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["jc" /* ɵɵelementStart */](34, "div", 10);
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "div", 11);
        core["Qc" /* ɵɵtext */](37, " ");
        core["jc" /* ɵɵelementStart */](38, "div", 12);
        core["Qc" /* ɵɵtext */](39, " ");
        core["jc" /* ɵɵelementStart */](40, "label", 13);
        core["Qc" /* ɵɵtext */](41);
        core["vc" /* ɵɵpipe */](42, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](43, " ");
        core["jc" /* ɵɵelementStart */](44, "input", 14);
        core["qc" /* ɵɵlistener */]("ngModelChange", function RegisterComponent_Template_input_ngModelChange_44_listener($event) { return ctx.email = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](45, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](46, " ");
        core["jc" /* ɵɵelementStart */](47, "div", 12);
        core["Qc" /* ɵɵtext */](48, " ");
        core["jc" /* ɵɵelementStart */](49, "div", 15);
        core["Qc" /* ɵɵtext */](50, " ");
        core["jc" /* ɵɵelementStart */](51, "div", 16);
        core["Qc" /* ɵɵtext */](52, " ");
        core["jc" /* ɵɵelementStart */](53, "label", 17);
        core["Qc" /* ɵɵtext */](54);
        core["vc" /* ɵɵpipe */](55, "i18n");
        core["Oc" /* ɵɵtemplate */](56, RegisterComponent_strong_56_Template, 2, 4, "strong", 18);
        core["Qc" /* ɵɵtext */](57, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](58, " ");
        core["jc" /* ɵɵelementStart */](59, "input", 19);
        core["qc" /* ɵɵlistener */]("ngModelChange", function RegisterComponent_Template_input_ngModelChange_59_listener($event) { return ctx.masterPassword = $event; })("input", function RegisterComponent_Template_input_input_59_listener() { return ctx.updatePasswordStrength(); });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](60, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](61, " ");
        core["jc" /* ɵɵelementStart */](62, "div", 20);
        core["Qc" /* ɵɵtext */](63, " ");
        core["jc" /* ɵɵelementStart */](64, "button", 21);
        core["qc" /* ɵɵlistener */]("click", function RegisterComponent_Template_button_click_64_listener() { return ctx.togglePassword(false); });
        core["vc" /* ɵɵpipe */](65, "i18n");
        core["Qc" /* ɵɵtext */](66, " ");
        core["ec" /* ɵɵelement */](67, "i", 22);
        core["Qc" /* ɵɵtext */](68, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](69, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](70, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](71, " ");
        core["jc" /* ɵɵelementStart */](72, "div", 23);
        core["Qc" /* ɵɵtext */](73, " ");
        core["ec" /* ɵɵelement */](74, "div", 24);
        core["Qc" /* ɵɵtext */](75, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](76, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](77, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](78, " ");
        core["jc" /* ɵɵelementStart */](79, "div", 25);
        core["Qc" /* ɵɵtext */](80);
        core["vc" /* ɵɵpipe */](81, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](82, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](83, " ");
        core["jc" /* ɵɵelementStart */](84, "div", 10);
        core["Qc" /* ɵɵtext */](85, " ");
        core["jc" /* ɵɵelementStart */](86, "div", 11);
        core["Qc" /* ɵɵtext */](87, " ");
        core["jc" /* ɵɵelementStart */](88, "div", 26);
        core["Qc" /* ɵɵtext */](89, " ");
        core["jc" /* ɵɵelementStart */](90, "div", 16);
        core["Qc" /* ɵɵtext */](91, " ");
        core["jc" /* ɵɵelementStart */](92, "label", 27);
        core["Qc" /* ɵɵtext */](93);
        core["vc" /* ɵɵpipe */](94, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](95, " ");
        core["jc" /* ɵɵelementStart */](96, "input", 28);
        core["qc" /* ɵɵlistener */]("ngModelChange", function RegisterComponent_Template_input_ngModelChange_96_listener($event) { return ctx.confirmMasterPassword = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](97, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](98, " ");
        core["jc" /* ɵɵelementStart */](99, "div", 20);
        core["Qc" /* ɵɵtext */](100, " ");
        core["jc" /* ɵɵelementStart */](101, "button", 21);
        core["qc" /* ɵɵlistener */]("click", function RegisterComponent_Template_button_click_101_listener() { return ctx.togglePassword(true); });
        core["vc" /* ɵɵpipe */](102, "i18n");
        core["Qc" /* ɵɵtext */](103, " ");
        core["ec" /* ɵɵelement */](104, "i", 22);
        core["Qc" /* ɵɵtext */](105, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](106, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](107, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](108, " ");
        core["jc" /* ɵɵelementStart */](109, "div", 12);
        core["Qc" /* ɵɵtext */](110, " ");
        core["jc" /* ɵɵelementStart */](111, "label", 29);
        core["Qc" /* ɵɵtext */](112);
        core["vc" /* ɵɵpipe */](113, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](114, " ");
        core["jc" /* ɵɵelementStart */](115, "input", 30);
        core["qc" /* ɵɵlistener */]("ngModelChange", function RegisterComponent_Template_input_ngModelChange_115_listener($event) { return ctx.hint = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](116, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](117, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](118, " ");
        core["jc" /* ɵɵelementStart */](119, "div", 25);
        core["Qc" /* ɵɵtext */](120);
        core["vc" /* ɵɵpipe */](121, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](122, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](123, " ");
        core["jc" /* ɵɵelementStart */](124, "div", 8);
        core["ec" /* ɵɵelement */](125, "iframe", 31);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](126, " ");
        core["Oc" /* ɵɵtemplate */](127, RegisterComponent_div_127_Template, 24, 10, "div", 32);
        core["Qc" /* ɵɵtext */](128, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](129, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](130, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 33, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 35, "createAccount"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](25, 37, "submit"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](14);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](42, 39, "emailAddress"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.email)("appAutofocus", ctx.email === "");
        core["Sb" /* ɵɵadvance */](10);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](55, 41, "masterPass"), " ");
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.masterPasswordScoreText);
        core["Sb" /* ɵɵadvance */](3);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.showPassword ? "text" : "password");
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.masterPassword)("appAutofocus", ctx.email !== "");
        core["Sb" /* ɵɵadvance */](5);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](65, 43, "toggleVisibility"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](55, register_component_c0, !ctx.showPassword, ctx.showPassword));
        core["Sb" /* ɵɵadvance */](7);
        core["Ub" /* ɵɵclassMapInterpolate1 */]("progress-bar bg-", ctx.masterPasswordScoreColor, "");
        core["Bc" /* ɵɵproperty */]("ngStyle", core["Fc" /* ɵɵpureFunction1 */](58, _c1, ctx.masterPasswordScoreWidth + "%"));
        core["Tb" /* ɵɵattribute */]("aria-valuenow", ctx.masterPasswordScoreWidth);
        core["Sb" /* ɵɵadvance */](6);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](81, 45, "masterPassDesc"), " ");
        core["Sb" /* ɵɵadvance */](13);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](94, 47, "reTypeMasterPass"));
        core["Sb" /* ɵɵadvance */](3);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.showPassword ? "text" : "password");
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.confirmMasterPassword);
        core["Sb" /* ɵɵadvance */](5);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](102, 49, "toggleVisibility"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](60, register_component_c0, !ctx.showPassword, ctx.showPassword));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](113, 51, "masterPassHint"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.hint);
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](121, 53, "masterPassHintDesc"), " ");
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("hidden", !ctx.showCaptcha());
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showTerms);
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], autofocus_directive_AutofocusDirective, common["l" /* NgIf */], StopClickDirective, A11yTitleDirective, common["j" /* NgClass */], common["m" /* NgStyle */], fesm2015_forms["a" /* CheckboxControlValueAccessor */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_register_component_RegisterComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-register',
                templateUrl: 'register.component.html',
            }]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: CryptoService }, { type: ApiService }, { type: StateService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: PasswordGenerationService }, { type: EnvironmentService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/remove-password.component.ts
var remove_password_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


















class remove_password_component_RemovePasswordComponent {
    constructor(router, userService, apiService, syncService, platformUtilsService, i18nService, keyConnectorService, storageService) {
        this.router = router;
        this.userService = userService;
        this.apiService = apiService;
        this.syncService = syncService;
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.keyConnectorService = keyConnectorService;
        this.storageService = storageService;
        this.continuing = false;
        this.leaving = false;
        this.loading = true;
    }
    ngOnInit() {
        return remove_password_component_awaiter(this, void 0, void 0, function* () {
            this.organization = yield this.keyConnectorService.getManagingOrganization();
            this.email = yield this.userService.getEmail();
            yield this.syncService.fullSync(false);
            this.loading = false;
        });
    }
    convert() {
        return remove_password_component_awaiter(this, void 0, void 0, function* () {
            this.continuing = true;
            this.actionPromise = this.keyConnectorService.migrateUser();
            try {
                yield this.actionPromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t('removedMasterPassword'));
                yield this.keyConnectorService.removeConvertAccountRequired();
                this.router.navigate(['']);
            }
            catch (e) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), e.message);
            }
        });
    }
    leave() {
        return remove_password_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('leaveOrganizationConfirmation'), this.organization.name, this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                this.leaving = true;
                this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {
                    return this.syncService.fullSync(true);
                });
                yield this.actionPromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t('leftOrganization'));
                yield this.keyConnectorService.removeConvertAccountRequired();
                this.router.navigate(['']);
            }
            catch (e) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), e);
            }
        });
    }
}
remove_password_component_RemovePasswordComponent.ɵfac = function RemovePasswordComponent_Factory(t) { return new (t || remove_password_component_RemovePasswordComponent)(core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](KeyConnectorService), core["dc" /* ɵɵdirectiveInject */](StorageService)); };
remove_password_component_RemovePasswordComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: remove_password_component_RemovePasswordComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](remove_password_component_RemovePasswordComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: fesm2015_router["e" /* Router */] }, { type: UserService }, { type: ApiService }, { type: SyncService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: KeyConnectorService }, { type: StorageService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/accounts/remove-password.component.ts






function RemovePasswordComponent_i_31_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 11);
    core["vc" /* ɵɵpipe */](1, "i18n");
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 1, "loading"));
} }
function RemovePasswordComponent_i_40_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 11);
    core["vc" /* ɵɵpipe */](1, "i18n");
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 1, "loading"));
} }
class accounts_remove_password_component_RemovePasswordComponent extends remove_password_component_RemovePasswordComponent {
}
accounts_remove_password_component_RemovePasswordComponent.ɵfac = function RemovePasswordComponent_Factory(t) { return ɵRemovePasswordComponent_BaseFactory(t || accounts_remove_password_component_RemovePasswordComponent); };
accounts_remove_password_component_RemovePasswordComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_remove_password_component_RemovePasswordComponent, selectors: [["app-remove-password"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 48, vars: 17, consts: [[1, "left"], [1, "center"], [1, "title"], [1, "right"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], [1, "box-content-row"], ["type", "button", 1, "btn", "block", "primary", 3, "disabled", "click"], ["class", "fa fa-spinner fa-spin", "aria-hidden", "true", 3, "title", 4, "ngIf"], ["type", "button", 1, "btn", "btn-outline-secondary", "block", 3, "disabled", "click"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-spin", 3, "title"]], template: function RemovePasswordComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["ec" /* ɵɵelement */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "div", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "span", 2);
        core["Qc" /* ɵɵtext */](7);
        core["vc" /* ɵɵpipe */](8, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](9, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ec" /* ɵɵelement */](11, "div", 3);
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "content");
        core["Qc" /* ɵɵtext */](15, " ");
        core["jc" /* ɵɵelementStart */](16, "div", 4);
        core["Qc" /* ɵɵtext */](17, " ");
        core["jc" /* ɵɵelementStart */](18, "div", 5);
        core["Qc" /* ɵɵtext */](19, " ");
        core["jc" /* ɵɵelementStart */](20, "div", 6);
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "p");
        core["Qc" /* ɵɵtext */](23);
        core["vc" /* ɵɵpipe */](24, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](25, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "div", 7);
        core["Qc" /* ɵɵtext */](28, " ");
        core["jc" /* ɵɵelementStart */](29, "button", 8);
        core["qc" /* ɵɵlistener */]("click", function RemovePasswordComponent_Template_button_click_29_listener() { return ctx.convert(); });
        core["Qc" /* ɵɵtext */](30, " ");
        core["Oc" /* ɵɵtemplate */](31, RemovePasswordComponent_i_31_Template, 2, 3, "i", 9);
        core["Qc" /* ɵɵtext */](32);
        core["vc" /* ɵɵpipe */](33, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](34, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "div", 7);
        core["Qc" /* ɵɵtext */](37, " ");
        core["jc" /* ɵɵelementStart */](38, "button", 10);
        core["qc" /* ɵɵlistener */]("click", function RemovePasswordComponent_Template_button_click_38_listener() { return ctx.leave(); });
        core["Qc" /* ɵɵtext */](39, " ");
        core["Oc" /* ɵɵtemplate */](40, RemovePasswordComponent_i_40_Template, 2, 3, "i", 9);
        core["Qc" /* ɵɵtext */](41);
        core["vc" /* ɵɵpipe */](42, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](43, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](44, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](45, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](46, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](47, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 8, "removeMasterPassword"));
        core["Sb" /* ɵɵadvance */](16);
        core["Rc" /* ɵɵtextInterpolate */](core["xc" /* ɵɵpipeBind2 */](24, 10, "convertOrganizationEncryptionDesc", ctx.organization.name));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", ctx.actionPromise);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.continuing);
        core["Sb" /* ɵɵadvance */](1);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](33, 13, "removeMasterPassword"), " ");
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", ctx.actionPromise);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.leaving);
        core["Sb" /* ɵɵadvance */](1);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](42, 15, "leaveOrganization"), " ");
    } }, directives: [BoxRowDirective, common["l" /* NgIf */]], pipes: [I18nPipe], encapsulation: 2 });
const ɵRemovePasswordComponent_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](accounts_remove_password_component_RemovePasswordComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_remove_password_component_RemovePasswordComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-remove-password',
                templateUrl: 'remove-password.component.html',
            }]
    }], null, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/policy.service.ts
class PolicyService {
}

// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/operators/first.js
var first = __webpack_require__(199);

// CONCATENATED MODULE: ./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts
class OrganizationUserResetPasswordEnrollmentRequest {
}

// CONCATENATED MODULE: ./jslib/common/src/models/request/setPasswordRequest.ts
class SetPasswordRequest {
    constructor(masterPasswordHash, key, masterPasswordHint, kdf, kdfIterations, orgIdentifier, keys) {
        this.masterPasswordHash = masterPasswordHash;
        this.key = key;
        this.masterPasswordHint = masterPasswordHint;
        this.kdf = kdf;
        this.kdfIterations = kdfIterations;
        this.orgIdentifier = orgIdentifier;
        this.keys = keys;
    }
}

// CONCATENATED MODULE: ./jslib/angular/src/components/change-password.component.ts
var change_password_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
















class ChangePasswordComponent {
    constructor(i18nService, cryptoService, messagingService, userService, passwordGenerationService, platformUtilsService, policyService) {
        this.i18nService = i18nService;
        this.cryptoService = cryptoService;
        this.messagingService = messagingService;
        this.userService = userService;
        this.passwordGenerationService = passwordGenerationService;
        this.platformUtilsService = platformUtilsService;
        this.policyService = policyService;
    }
    ngOnInit() {
        return change_password_component_awaiter(this, void 0, void 0, function* () {
            this.email = yield this.userService.getEmail();
            this.enforcedPolicyOptions = yield this.policyService.getMasterPasswordPolicyOptions();
        });
    }
    submit() {
        return change_password_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.strongPassword())) {
                return;
            }
            if (!(yield this.setupSubmitActions())) {
                return;
            }
            const email = yield this.userService.getEmail();
            if (this.kdf == null) {
                this.kdf = yield this.userService.getKdf();
            }
            if (this.kdfIterations == null) {
                this.kdfIterations = yield this.userService.getKdfIterations();
            }
            const key = yield this.cryptoService.makeKey(this.masterPassword, email.trim().toLowerCase(), this.kdf, this.kdfIterations);
            const masterPasswordHash = yield this.cryptoService.hashPassword(this.masterPassword, key);
            let encKey = null;
            const existingEncKey = yield this.cryptoService.getEncKey();
            if (existingEncKey == null) {
                encKey = yield this.cryptoService.makeEncKey(key);
            }
            else {
                encKey = yield this.cryptoService.remakeEncKey(key);
            }
            yield this.performSubmitActions(masterPasswordHash, key, encKey);
        });
    }
    setupSubmitActions() {
        return change_password_component_awaiter(this, void 0, void 0, function* () {
            // Override in sub-class
            // Can be used for additional validation and/or other processes the should occur before changing passwords
            return true;
        });
    }
    performSubmitActions(masterPasswordHash, key, encKey) {
        return change_password_component_awaiter(this, void 0, void 0, function* () {
            // Override in sub-class
        });
    }
    strongPassword() {
        return change_password_component_awaiter(this, void 0, void 0, function* () {
            if (this.masterPassword == null || this.masterPassword === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPassRequired'));
                return false;
            }
            if (this.masterPassword.length < 8) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPassLength'));
                return false;
            }
            if (this.masterPassword !== this.masterPasswordRetype) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPassDoesntMatch'));
                return false;
            }
            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword, this.getPasswordStrengthUserInput());
            if (this.enforcedPolicyOptions != null &&
                !this.policyService.evaluateMasterPassword(strengthResult.score, this.masterPassword, this.enforcedPolicyOptions)) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));
                return false;
            }
            if (strengthResult != null && strengthResult.score < 3) {
                const result = yield this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'), this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
                if (!result) {
                    return false;
                }
            }
            return true;
        });
    }
    updatePasswordStrength() {
        if (this.masterPasswordStrengthTimeout != null) {
            clearTimeout(this.masterPasswordStrengthTimeout);
        }
        this.masterPasswordStrengthTimeout = setTimeout(() => {
            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword, this.getPasswordStrengthUserInput());
            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;
        }, 300);
    }
    logOut() {
        return change_password_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'), this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));
            if (confirmed) {
                this.messagingService.send('logout');
            }
        });
    }
    getPasswordStrengthUserInput() {
        let userInput = [];
        const atPosition = this.email.indexOf('@');
        if (atPosition > -1) {
            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));
        }
        return userInput;
    }
}
ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) { return new (t || ChangePasswordComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](PolicyService)); };
ChangePasswordComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: ChangePasswordComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](ChangePasswordComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: I18nService }, { type: CryptoService }, { type: messaging_service["a" /* MessagingService */] }, { type: UserService }, { type: PasswordGenerationService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: PolicyService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/set-password.component.ts
var set_password_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






























class set_password_component_SetPasswordComponent extends ChangePasswordComponent {
    constructor(i18nService, cryptoService, messagingService, userService, passwordGenerationService, platformUtilsService, policyService, router, apiService, syncService, route) {
        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService, platformUtilsService, policyService);
        this.router = router;
        this.apiService = apiService;
        this.syncService = syncService;
        this.route = route;
        this.syncLoading = true;
        this.showPassword = false;
        this.hint = '';
        this.identifier = null;
        this.resetPasswordAutoEnroll = false;
        this.successRoute = 'vault';
    }
    ngOnInit() {
        const _super = Object.create(null, {
            ngOnInit: { get: () => super.ngOnInit }
        });
        return set_password_component_awaiter(this, void 0, void 0, function* () {
            yield this.syncService.fullSync(true);
            this.syncLoading = false;
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((qParams) => set_password_component_awaiter(this, void 0, void 0, function* () {
                if (qParams.identifier != null) {
                    this.identifier = qParams.identifier;
                }
            }));
            // Automatic Enrollment Detection
            if (this.identifier != null) {
                try {
                    const response = yield this.apiService.getOrganizationAutoEnrollStatus(this.identifier);
                    this.orgId = response.id;
                    this.resetPasswordAutoEnroll = response.resetPasswordEnabled;
                }
                catch (_a) {
                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));
                }
            }
            _super.ngOnInit.call(this);
        });
    }
    setupSubmitActions() {
        return set_password_component_awaiter(this, void 0, void 0, function* () {
            this.kdf = kdfType["a" /* KdfType */].PBKDF2_SHA256;
            const useLowerKdf = this.platformUtilsService.isIE();
            this.kdfIterations = useLowerKdf ? 10000 : 100000;
            return true;
        });
    }
    performSubmitActions(masterPasswordHash, key, encKey) {
        return set_password_component_awaiter(this, void 0, void 0, function* () {
            const keys = yield this.cryptoService.makeKeyPair(encKey[0]);
            const request = new SetPasswordRequest(masterPasswordHash, encKey[1].encryptedString, this.hint, this.kdf, this.kdfIterations, this.identifier, new keysRequest["a" /* KeysRequest */](keys[0], keys[1].encryptedString));
            try {
                if (this.resetPasswordAutoEnroll) {
                    this.formPromise = this.apiService.setPassword(request).then(() => set_password_component_awaiter(this, void 0, void 0, function* () {
                        yield this.onSetPasswordSuccess(key, encKey, keys);
                        return this.apiService.getOrganizationKeys(this.orgId);
                    })).then((response) => set_password_component_awaiter(this, void 0, void 0, function* () {
                        if (response == null) {
                            throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));
                        }
                        const userId = yield this.userService.getUserId();
                        const publicKey = utils["a" /* Utils */].fromB64ToArray(response.publicKey);
                        // RSA Encrypt user's encKey.key with organization public key
                        const userEncKey = yield this.cryptoService.getEncKey();
                        const encryptedKey = yield this.cryptoService.rsaEncrypt(userEncKey.key, publicKey.buffer);
                        const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();
                        resetRequest.resetPasswordKey = encryptedKey.encryptedString;
                        return this.apiService.putOrganizationUserResetPasswordEnrollment(this.orgId, userId, resetRequest);
                    }));
                }
                else {
                    this.formPromise = this.apiService.setPassword(request).then(() => set_password_component_awaiter(this, void 0, void 0, function* () {
                        yield this.onSetPasswordSuccess(key, encKey, keys);
                    }));
                }
                yield this.formPromise;
                if (this.onSuccessfulChangePassword != null) {
                    this.onSuccessfulChangePassword();
                }
                else {
                    this.router.navigate([this.successRoute]);
                }
            }
            catch (_a) {
                this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));
            }
        });
    }
    togglePassword(confirmField) {
        this.showPassword = !this.showPassword;
        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();
    }
    onSetPasswordSuccess(key, encKey, keys) {
        return set_password_component_awaiter(this, void 0, void 0, function* () {
            yield this.userService.setInformation(yield this.userService.getUserId(), yield this.userService.getEmail(), this.kdf, this.kdfIterations);
            yield this.cryptoService.setKey(key);
            yield this.cryptoService.setEncKey(encKey[1].encryptedString);
            yield this.cryptoService.setEncPrivateKey(keys[1].encryptedString);
            const localKeyHash = yield this.cryptoService.hashPassword(this.masterPassword, key, hashPurpose["a" /* HashPurpose */].LocalAuthorization);
            yield this.cryptoService.setKeyHash(localKeyHash);
        });
    }
}
set_password_component_SetPasswordComponent.ɵfac = function SetPasswordComponent_Factory(t) { return new (t || set_password_component_SetPasswordComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */])); };
set_password_component_SetPasswordComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: set_password_component_SetPasswordComponent, features: [core["Pb" /* ɵɵInheritDefinitionFeature */]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](set_password_component_SetPasswordComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: I18nService }, { type: CryptoService }, { type: messaging_service["a" /* MessagingService */] }, { type: UserService }, { type: PasswordGenerationService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: PolicyService }, { type: fesm2015_router["e" /* Router */] }, { type: ApiService }, { type: SyncService }, { type: fesm2015_router["a" /* ActivatedRoute */] }]; }, null); })();

// EXTERNAL MODULE: ./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts
var masterPasswordPolicyOptions = __webpack_require__(259);

// CONCATENATED MODULE: ./jslib/angular/src/components/callout.component.ts







function CalloutComponent_h3_3_i_2_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 6);
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */](2);
    core["Ub" /* ɵɵclassMapInterpolate1 */]("fa ", ctx_r3.icon, "");
} }
function CalloutComponent_h3_3_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "h3", 4);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, CalloutComponent_h3_3_i_2_Template, 1, 3, "i", 5);
    core["Qc" /* ɵɵtext */](3);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.icon);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r1.title, " ");
} }
function CalloutComponent_div_5_li_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "li");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["xc" /* ɵɵpipeBind2 */](2, 1, "policyInEffectMinComplexity", ctx_r4.getPasswordScoreAlertDisplay()), " ");
} }
function CalloutComponent_div_5_li_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "li");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["xc" /* ɵɵpipeBind2 */](2, 1, "policyInEffectMinLength", ctx_r5.enforcedPolicyOptions == null ? null : ctx_r5.enforcedPolicyOptions.minLength.toString()), " ");
} }
function CalloutComponent_div_5_li_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "li");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "policyInEffectUppercase"), "");
} }
function CalloutComponent_div_5_li_10_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "li");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "policyInEffectLowercase"), "");
} }
function CalloutComponent_div_5_li_12_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "li");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "policyInEffectNumbers"), "");
} }
function CalloutComponent_div_5_li_14_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "li");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["xc" /* ɵɵpipeBind2 */](2, 1, "policyInEffectSpecial", "!@#$%^&*"), "");
} }
function CalloutComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 7);
    core["Qc" /* ɵɵtext */](1);
    core["jc" /* ɵɵelementStart */](2, "ul");
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, CalloutComponent_div_5_li_4_Template, 3, 4, "li", 8);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, CalloutComponent_div_5_li_6_Template, 3, 4, "li", 8);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, CalloutComponent_div_5_li_8_Template, 3, 3, "li", 8);
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, CalloutComponent_div_5_li_10_Template, 3, 3, "li", 8);
    core["Qc" /* ɵɵtext */](11, " ");
    core["Oc" /* ɵɵtemplate */](12, CalloutComponent_div_5_li_12_Template, 3, 3, "li", 8);
    core["Qc" /* ɵɵtext */](13, " ");
    core["Oc" /* ɵɵtemplate */](14, CalloutComponent_div_5_li_14_Template, 3, 4, "li", 8);
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r2.enforcedPolicyMessage, " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", (ctx_r2.enforcedPolicyOptions == null ? null : ctx_r2.enforcedPolicyOptions.minComplexity) > 0);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", (ctx_r2.enforcedPolicyOptions == null ? null : ctx_r2.enforcedPolicyOptions.minLength) > 0);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.enforcedPolicyOptions == null ? null : ctx_r2.enforcedPolicyOptions.requireUpper);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.enforcedPolicyOptions == null ? null : ctx_r2.enforcedPolicyOptions.requireLower);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.enforcedPolicyOptions == null ? null : ctx_r2.enforcedPolicyOptions.requireNumbers);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.enforcedPolicyOptions == null ? null : ctx_r2.enforcedPolicyOptions.requireSpecial);
} }
const callout_component_c0 = function (a0) { return { "clickable": a0 }; };
const callout_component_c1 = ["*"];
class CalloutComponent {
    constructor(i18nService) {
        this.i18nService = i18nService;
        this.type = 'info';
        this.useAlertRole = false;
    }
    ngOnInit() {
        this.calloutStyle = this.type;
        if (this.enforcedPolicyMessage === undefined) {
            this.enforcedPolicyMessage = this.i18nService.t('masterPasswordPolicyInEffect');
        }
        if (this.type === 'warning' || this.type === 'danger') {
            if (this.type === 'danger') {
                this.calloutStyle = 'danger';
            }
            if (this.title === undefined) {
                this.title = this.i18nService.t('warning');
            }
            if (this.icon === undefined) {
                this.icon = 'fa-warning';
            }
        }
        else if (this.type === 'error') {
            this.calloutStyle = 'danger';
            if (this.title === undefined) {
                this.title = this.i18nService.t('error');
            }
            if (this.icon === undefined) {
                this.icon = 'fa-bolt';
            }
        }
        else if (this.type === 'tip') {
            this.calloutStyle = 'success';
            if (this.title === undefined) {
                this.title = this.i18nService.t('tip');
            }
            if (this.icon === undefined) {
                this.icon = 'fa-lightbulb-o';
            }
        }
    }
    getPasswordScoreAlertDisplay() {
        if (this.enforcedPolicyOptions == null) {
            return '';
        }
        let str;
        switch (this.enforcedPolicyOptions.minComplexity) {
            case 4:
                str = this.i18nService.t('strong');
                break;
            case 3:
                str = this.i18nService.t('good');
                break;
            default:
                str = this.i18nService.t('weak');
                break;
        }
        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';
    }
}
CalloutComponent.ɵfac = function CalloutComponent_Factory(t) { return new (t || CalloutComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService)); };
CalloutComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: CalloutComponent, selectors: [["app-callout"]], inputs: { type: "type", icon: "icon", title: "title", clickable: "clickable", enforcedPolicyOptions: "enforcedPolicyOptions", enforcedPolicyMessage: "enforcedPolicyMessage", useAlertRole: "useAlertRole" }, ngContentSelectors: callout_component_c1, decls: 10, vars: 9, consts: [[3, "ngClass"], ["callout", ""], ["class", "callout-heading", 4, "ngIf"], ["class", "enforced-policy-options", 4, "ngIf"], [1, "callout-heading"], ["aria-hidden", "true", 3, "class", 4, "ngIf"], ["aria-hidden", "true"], [1, "enforced-policy-options"], [4, "ngIf"]], template: function CalloutComponent_Template(rf, ctx) { if (rf & 1) {
        core["Ac" /* ɵɵprojectionDef */]();
        core["jc" /* ɵɵelementStart */](0, "div", 0, 1);
        core["Qc" /* ɵɵtext */](2, " ");
        core["Oc" /* ɵɵtemplate */](3, CalloutComponent_h3_3_Template, 4, 2, "h3", 2);
        core["Qc" /* ɵɵtext */](4, " ");
        core["Oc" /* ɵɵtemplate */](5, CalloutComponent_div_5_Template, 17, 7, "div", 3);
        core["Qc" /* ɵɵtext */](6, " ");
        core["zc" /* ɵɵprojection */](7);
        core["Qc" /* ɵɵtext */](8, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](9, " ");
    } if (rf & 2) {
        core["Ub" /* ɵɵclassMapInterpolate1 */]("callout callout-", ctx.calloutStyle, "");
        core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](7, callout_component_c0, ctx.clickable));
        core["Tb" /* ɵɵattribute */]("role", ctx.useAlertRole ? "alert" : null);
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.title);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.enforcedPolicyOptions);
    } }, directives: [common["j" /* NgClass */], common["l" /* NgIf */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](CalloutComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-callout',
                templateUrl: 'callout.component.html',
            }]
    }], function () { return [{ type: I18nService }]; }, { type: [{
            type: core["D" /* Input */]
        }], icon: [{
            type: core["D" /* Input */]
        }], title: [{
            type: core["D" /* Input */]
        }], clickable: [{
            type: core["D" /* Input */]
        }], enforcedPolicyOptions: [{
            type: core["D" /* Input */]
        }], enforcedPolicyMessage: [{
            type: core["D" /* Input */]
        }], useAlertRole: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/accounts/set-password.component.ts

































function SetPasswordComponent_div_34_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 12);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 13);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} }
function SetPasswordComponent_div_36_app_callout_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 36);
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "resetPasswordPolicyAutoEnroll"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](3, 4, "resetPasswordAutoEnrollInviteWarning"), " ");
} }
function SetPasswordComponent_div_36_app_callout_10_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 37);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */](2);
    core["Bc" /* ɵɵproperty */]("enforcedPolicyOptions", ctx_r4.enforcedPolicyOptions);
} }
function SetPasswordComponent_div_36_strong_26_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "strong");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */](2);
    core["Ub" /* ɵɵclassMapInterpolate1 */]("sub-label text-", ctx_r5.masterPasswordScoreColor, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r5.masterPasswordScoreText, " ");
} }
const set_password_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
const set_password_component_c1 = function (a0) { return { width: a0 }; };
function SetPasswordComponent_div_36_Template(rf, ctx) { if (rf & 1) {
    const _r7 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "app-callout", 15);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, SetPasswordComponent_div_36_app_callout_8_Template, 4, 6, "app-callout", 16);
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, SetPasswordComponent_div_36_app_callout_10_Template, 2, 1, "app-callout", 17);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "div", 14);
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 18);
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "div", 19);
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "div", 20);
    core["Qc" /* ɵɵtext */](20, " ");
    core["jc" /* ɵɵelementStart */](21, "div", 21);
    core["Qc" /* ɵɵtext */](22, " ");
    core["jc" /* ɵɵelementStart */](23, "label", 22);
    core["Qc" /* ɵɵtext */](24);
    core["vc" /* ɵɵpipe */](25, "i18n");
    core["Oc" /* ɵɵtemplate */](26, SetPasswordComponent_div_36_strong_26_Template, 2, 4, "strong", 23);
    core["Qc" /* ɵɵtext */](27, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["jc" /* ɵɵelementStart */](29, "input", 24);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SetPasswordComponent_div_36_Template_input_ngModelChange_29_listener($event) { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r6 = core["uc" /* ɵɵnextContext */](); return ctx_r6.masterPassword = $event; })("input", function SetPasswordComponent_div_36_Template_input_input_29_listener() { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r8 = core["uc" /* ɵɵnextContext */](); return ctx_r8.updatePasswordStrength(); });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](31, " ");
    core["jc" /* ɵɵelementStart */](32, "div", 25);
    core["Qc" /* ɵɵtext */](33, " ");
    core["jc" /* ɵɵelementStart */](34, "button", 26);
    core["qc" /* ɵɵlistener */]("click", function SetPasswordComponent_div_36_Template_button_click_34_listener() { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r9 = core["uc" /* ɵɵnextContext */](); return ctx_r9.togglePassword(false); });
    core["vc" /* ɵɵpipe */](35, "i18n");
    core["Qc" /* ɵɵtext */](36, " ");
    core["ec" /* ɵɵelement */](37, "i", 27);
    core["Qc" /* ɵɵtext */](38, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](39, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](40, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](41, " ");
    core["jc" /* ɵɵelementStart */](42, "div", 28);
    core["Qc" /* ɵɵtext */](43, " ");
    core["jc" /* ɵɵelementStart */](44, "div", 29);
    core["Qc" /* ɵɵtext */](45, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](46, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](47, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](48, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](49, " ");
    core["jc" /* ɵɵelementStart */](50, "div", 30);
    core["Qc" /* ɵɵtext */](51);
    core["vc" /* ɵɵpipe */](52, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](53, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](54, " ");
    core["jc" /* ɵɵelementStart */](55, "div", 14);
    core["Qc" /* ɵɵtext */](56, " ");
    core["jc" /* ɵɵelementStart */](57, "div", 18);
    core["Qc" /* ɵɵtext */](58, " ");
    core["jc" /* ɵɵelementStart */](59, "div", 19);
    core["Qc" /* ɵɵtext */](60, " ");
    core["jc" /* ɵɵelementStart */](61, "div", 20);
    core["Qc" /* ɵɵtext */](62, " ");
    core["jc" /* ɵɵelementStart */](63, "div", 21);
    core["Qc" /* ɵɵtext */](64, " ");
    core["jc" /* ɵɵelementStart */](65, "label", 31);
    core["Qc" /* ɵɵtext */](66);
    core["vc" /* ɵɵpipe */](67, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](68, " ");
    core["jc" /* ɵɵelementStart */](69, "input", 32);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SetPasswordComponent_div_36_Template_input_ngModelChange_69_listener($event) { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r10 = core["uc" /* ɵɵnextContext */](); return ctx_r10.masterPasswordRetype = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](70, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](71, " ");
    core["jc" /* ɵɵelementStart */](72, "div", 25);
    core["Qc" /* ɵɵtext */](73, " ");
    core["jc" /* ɵɵelementStart */](74, "button", 26);
    core["qc" /* ɵɵlistener */]("click", function SetPasswordComponent_div_36_Template_button_click_74_listener() { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r11 = core["uc" /* ɵɵnextContext */](); return ctx_r11.togglePassword(true); });
    core["vc" /* ɵɵpipe */](75, "i18n");
    core["Qc" /* ɵɵtext */](76, " ");
    core["ec" /* ɵɵelement */](77, "i", 27);
    core["Qc" /* ɵɵtext */](78, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](79, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](80, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](81, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](82, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](83, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](84, " ");
    core["jc" /* ɵɵelementStart */](85, "div", 33);
    core["Qc" /* ɵɵtext */](86, " ");
    core["jc" /* ɵɵelementStart */](87, "div", 18);
    core["Qc" /* ɵɵtext */](88, " ");
    core["jc" /* ɵɵelementStart */](89, "div", 19);
    core["Qc" /* ɵɵtext */](90, " ");
    core["jc" /* ɵɵelementStart */](91, "label", 34);
    core["Qc" /* ɵɵtext */](92);
    core["vc" /* ɵɵpipe */](93, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](94, " ");
    core["jc" /* ɵɵelementStart */](95, "input", 35);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SetPasswordComponent_div_36_Template_input_ngModelChange_95_listener($event) { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r12 = core["uc" /* ɵɵnextContext */](); return ctx_r12.hint = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](96, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](97, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](98, " ");
    core["jc" /* ɵɵelementStart */](99, "div", 30);
    core["Qc" /* ɵɵtext */](100);
    core["vc" /* ɵɵpipe */](101, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](102, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](103, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 22, "ssoCompleteRegistration"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.resetPasswordAutoEnroll);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.enforcedPolicyOptions);
    core["Sb" /* ɵɵadvance */](14);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](25, 24, "masterPass"), " ");
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.masterPasswordScoreText);
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx_r2.showPassword ? "text" : "password");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.masterPassword);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](35, 26, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](38, set_password_component_c0, !ctx_r2.showPassword, ctx_r2.showPassword));
    core["Sb" /* ɵɵadvance */](7);
    core["Ub" /* ɵɵclassMapInterpolate1 */]("progress-bar bg-", ctx_r2.masterPasswordScoreColor, "");
    core["Bc" /* ɵɵproperty */]("ngStyle", core["Fc" /* ɵɵpureFunction1 */](41, set_password_component_c1, ctx_r2.masterPasswordScoreWidth + "%"));
    core["Tb" /* ɵɵattribute */]("aria-valuenow", ctx_r2.masterPasswordScoreWidth);
    core["Sb" /* ɵɵadvance */](7);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](52, 28, "masterPassDesc"), " ");
    core["Sb" /* ɵɵadvance */](15);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](67, 30, "reTypeMasterPass"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.masterPasswordRetype);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](75, 32, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](43, set_password_component_c0, !ctx_r2.showPassword, ctx_r2.showPassword));
    core["Sb" /* ɵɵadvance */](15);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](93, 34, "masterPassHint"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.hint);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](101, 36, "masterPassHintDesc"), " ");
} }
class accounts_set_password_component_SetPasswordComponent extends set_password_component_SetPasswordComponent {
    constructor(apiService, i18nService, cryptoService, messagingService, userService, passwordGenerationService, platformUtilsService, policyService, router, syncService, route) {
        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService, platformUtilsService, policyService, router, apiService, syncService, route);
    }
    get masterPasswordScoreWidth() {
        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;
    }
    get masterPasswordScoreColor() {
        switch (this.masterPasswordScore) {
            case 4:
                return 'success';
            case 3:
                return 'primary';
            case 2:
                return 'warning';
            default:
                return 'danger';
        }
    }
    get masterPasswordScoreText() {
        switch (this.masterPasswordScore) {
            case 4:
                return this.i18nService.t('strong');
            case 3:
                return this.i18nService.t('good');
            case 2:
                return this.i18nService.t('weak');
            default:
                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;
        }
    }
}
accounts_set_password_component_SetPasswordComponent.ɵfac = function SetPasswordComponent_Factory(t) { return new (t || accounts_set_password_component_SetPasswordComponent)(core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */])); };
accounts_set_password_component_SetPasswordComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_set_password_component_SetPasswordComponent, selectors: [["app-set-password"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 40, vars: 15, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["routerLink", "/home"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], ["class", "full-loading-spinner", 4, "ngIf"], [4, "ngIf"], [1, "full-loading-spinner"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-spin", "fa-3x"], [1, "box"], ["type", "tip"], ["type", "warning", 3, "title", 4, "ngIf"], ["type", "info", 3, "enforcedPolicyOptions", 4, "ngIf"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], [1, "box-content-row-flex"], [1, "row-main"], ["for", "masterPassword"], [3, "class", 4, "ngIf"], ["id", "masterPassword", "name", "MasterPassword", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange", "input"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", "role", "button", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], [1, "progress"], ["role", "progressbar", "aria-valuenow", "0", "aria-valuemin", "0", "aria-valuemax", "100", 3, "ngStyle"], [1, "box-footer"], ["for", "masterPasswordRetype"], ["id", "masterPasswordRetype", "type", "password", "name", "MasterPasswordRetype", "required", "", "appInputVerbatim", "", "autocomplete", "new-password", 1, "monospaced", 3, "ngModel", "ngModelChange"], [1, "box", "last"], ["for", "hint"], ["id", "hint", "type", "text", "name", "Hint", 3, "ngModel", "ngModelChange"], ["type", "warning", 3, "title"], ["type", "info", 3, "enforcedPolicyOptions"]], template: function SetPasswordComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function SetPasswordComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "button", 7);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "span", 8);
        core["Qc" /* ɵɵtext */](24);
        core["vc" /* ɵɵpipe */](25, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ec" /* ɵɵelement */](27, "i", 9);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["Oc" /* ɵɵtemplate */](34, SetPasswordComponent_div_34_Template, 4, 0, "div", 10);
        core["Qc" /* ɵɵtext */](35, " ");
        core["Oc" /* ɵɵtemplate */](36, SetPasswordComponent_div_36_Template, 104, 46, "div", 11);
        core["Qc" /* ɵɵtext */](37, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](38, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](39, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 9, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 11, "setMasterPassword"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](25, 13, "submit"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](7);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.syncLoading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.syncLoading);
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, common["l" /* NgIf */], CalloutComponent, BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], StopClickDirective, A11yTitleDirective, common["j" /* NgClass */], common["m" /* NgStyle */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_set_password_component_SetPasswordComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-set-password',
                templateUrl: 'set-password.component.html',
            }]
    }], function () { return [{ type: ApiService }, { type: I18nService }, { type: CryptoService }, { type: messaging_service["a" /* MessagingService */] }, { type: UserService }, { type: PasswordGenerationService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: PolicyService }, { type: fesm2015_router["e" /* Router */] }, { type: SyncService }, { type: fesm2015_router["a" /* ActivatedRoute */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/sso.component.ts
var sso_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



























class sso_component_SsoComponent {
    constructor(authService, router, i18nService, route, storageService, stateService, platformUtilsService, apiService, cryptoFunctionService, environmentService, passwordGenerationService, logService) {
        this.authService = authService;
        this.router = router;
        this.i18nService = i18nService;
        this.route = route;
        this.storageService = storageService;
        this.stateService = stateService;
        this.platformUtilsService = platformUtilsService;
        this.apiService = apiService;
        this.cryptoFunctionService = cryptoFunctionService;
        this.environmentService = environmentService;
        this.passwordGenerationService = passwordGenerationService;
        this.logService = logService;
        this.loggingIn = false;
        this.twoFactorRoute = '2fa';
        this.successRoute = 'lock';
        this.changePasswordRoute = 'set-password';
        this.forcePasswordResetRoute = 'update-temp-password';
    }
    ngOnInit() {
        return sso_component_awaiter(this, void 0, void 0, function* () {
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((qParams) => sso_component_awaiter(this, void 0, void 0, function* () {
                if (qParams.code != null && qParams.state != null) {
                    const codeVerifier = yield this.storageService.get(constants_service["a" /* ConstantsService */].ssoCodeVerifierKey);
                    const state = yield this.storageService.get(constants_service["a" /* ConstantsService */].ssoStateKey);
                    yield this.storageService.remove(constants_service["a" /* ConstantsService */].ssoCodeVerifierKey);
                    yield this.storageService.remove(constants_service["a" /* ConstantsService */].ssoStateKey);
                    if (qParams.code != null && codeVerifier != null && state != null && this.checkState(state, qParams.state)) {
                        yield this.logIn(qParams.code, codeVerifier, this.getOrgIdentifierFromState(qParams.state));
                    }
                }
                else if (qParams.clientId != null && qParams.redirectUri != null && qParams.state != null &&
                    qParams.codeChallenge != null) {
                    this.redirectUri = qParams.redirectUri;
                    this.state = qParams.state;
                    this.codeChallenge = qParams.codeChallenge;
                    this.clientId = qParams.clientId;
                }
            }));
        });
    }
    submit(returnUri, includeUserIdentifier) {
        return sso_component_awaiter(this, void 0, void 0, function* () {
            this.initiateSsoFormPromise = this.preValidate();
            if (yield this.initiateSsoFormPromise) {
                const authorizeUrl = yield this.buildAuthorizeUrl(returnUri, includeUserIdentifier);
                this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });
            }
        });
    }
    preValidate() {
        return sso_component_awaiter(this, void 0, void 0, function* () {
            if (this.identifier == null || this.identifier === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('ssoValidationFailed'), this.i18nService.t('ssoIdentifierRequired'));
                return false;
            }
            return yield this.apiService.preValidateSso(this.identifier);
        });
    }
    buildAuthorizeUrl(returnUri, includeUserIdentifier) {
        return sso_component_awaiter(this, void 0, void 0, function* () {
            let codeChallenge = this.codeChallenge;
            let state = this.state;
            const passwordOptions = {
                type: 'password',
                length: 64,
                uppercase: true,
                lowercase: true,
                numbers: true,
                special: false,
            };
            if (codeChallenge == null) {
                const codeVerifier = yield this.passwordGenerationService.generatePassword(passwordOptions);
                const codeVerifierHash = yield this.cryptoFunctionService.hash(codeVerifier, 'sha256');
                codeChallenge = utils["a" /* Utils */].fromBufferToUrlB64(codeVerifierHash);
                yield this.storageService.save(constants_service["a" /* ConstantsService */].ssoCodeVerifierKey, codeVerifier);
            }
            if (state == null) {
                state = yield this.passwordGenerationService.generatePassword(passwordOptions);
                if (returnUri) {
                    state += `_returnUri='${returnUri}'`;
                }
            }
            // Add Organization Identifier to state
            state += `_identifier=${this.identifier}`;
            // Save state (regardless of new or existing)
            yield this.storageService.save(constants_service["a" /* ConstantsService */].ssoStateKey, state);
            let authorizeUrl = this.environmentService.getIdentityUrl() + '/connect/authorize?' +
                'client_id=' + this.clientId + '&redirect_uri=' + encodeURIComponent(this.redirectUri) + '&' +
                'response_type=code&scope=api offline_access&' +
                'state=' + state + '&code_challenge=' + codeChallenge + '&' +
                'code_challenge_method=S256&response_mode=query&' +
                'domain_hint=' + encodeURIComponent(this.identifier);
            if (includeUserIdentifier) {
                const userIdentifier = yield this.apiService.getSsoUserIdentifier();
                authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;
            }
            return authorizeUrl;
        });
    }
    logIn(code, codeVerifier, orgIdFromState) {
        return sso_component_awaiter(this, void 0, void 0, function* () {
            this.loggingIn = true;
            try {
                this.formPromise = this.authService.logInSso(code, codeVerifier, this.redirectUri, orgIdFromState);
                const response = yield this.formPromise;
                if (response.twoFactor) {
                    if (this.onSuccessfulLoginTwoFactorNavigate != null) {
                        this.onSuccessfulLoginTwoFactorNavigate();
                    }
                    else {
                        this.router.navigate([this.twoFactorRoute], {
                            queryParams: {
                                identifier: orgIdFromState,
                                sso: 'true',
                            },
                        });
                    }
                }
                else if (response.resetMasterPassword) {
                    if (this.onSuccessfulLoginChangePasswordNavigate != null) {
                        this.onSuccessfulLoginChangePasswordNavigate();
                    }
                    else {
                        this.router.navigate([this.changePasswordRoute], {
                            queryParams: {
                                identifier: orgIdFromState,
                            },
                        });
                    }
                }
                else if (response.forcePasswordReset) {
                    if (this.onSuccessfulLoginForceResetNavigate != null) {
                        this.onSuccessfulLoginForceResetNavigate();
                    }
                    else {
                        this.router.navigate([this.forcePasswordResetRoute]);
                    }
                }
                else {
                    const disableFavicon = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableFaviconKey);
                    yield this.stateService.save(constants_service["a" /* ConstantsService */].disableFaviconKey, !!disableFavicon);
                    if (this.onSuccessfulLogin != null) {
                        this.onSuccessfulLogin();
                    }
                    if (this.onSuccessfulLoginNavigate != null) {
                        this.onSuccessfulLoginNavigate();
                    }
                    else {
                        this.router.navigate([this.successRoute]);
                    }
                }
            }
            catch (e) {
                this.logService.error(e);
                if (e.message === 'Unable to reach key connector') {
                    this.platformUtilsService.showToast('error', null, this.i18nService.t('ssoKeyConnectorUnavailable'));
                }
            }
            this.loggingIn = false;
        });
    }
    getOrgIdentifierFromState(state) {
        if (state === null || state === undefined) {
            return null;
        }
        const stateSplit = state.split('_identifier=');
        return stateSplit.length > 1 ? stateSplit[1] : null;
    }
    checkState(state, checkState) {
        if (state === null || state === undefined) {
            return false;
        }
        if (checkState === null || checkState === undefined) {
            return false;
        }
        const stateSplit = state.split('_identifier=');
        const checkStateSplit = checkState.split('_identifier=');
        return stateSplit[0] === checkStateSplit[0];
    }
}
sso_component_SsoComponent.ɵfac = function SsoComponent_Factory(t) { return new (t || sso_component_SsoComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](CryptoFunctionService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
sso_component_SsoComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: sso_component_SsoComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](sso_component_SsoComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: StorageService }, { type: StateService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: ApiService }, { type: CryptoFunctionService }, { type: EnvironmentService }, { type: PasswordGenerationService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/accounts/sso.component.ts
var accounts_sso_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






























class accounts_sso_component_SsoComponent extends sso_component_SsoComponent {
    constructor(authService, router, i18nService, route, storageService, stateService, platformUtilsService, apiService, cryptoFunctionService, passwordGenerationService, syncService, environmentService, logService, vaultTimeoutService) {
        super(authService, router, i18nService, route, storageService, stateService, platformUtilsService, apiService, cryptoFunctionService, environmentService, passwordGenerationService, logService);
        this.vaultTimeoutService = vaultTimeoutService;
        const url = this.environmentService.getWebVaultUrl();
        this.redirectUri = url + '/sso-connector.html';
        this.clientId = 'browser';
        super.onSuccessfulLogin = () => accounts_sso_component_awaiter(this, void 0, void 0, function* () {
            yield syncService.fullSync(true);
            if (yield this.vaultTimeoutService.isLocked()) {
                // If the vault is unlocked then this will clear keys from memory, which we don't want to do
                browserApi["a" /* BrowserApi */].reloadOpenWindows();
            }
            const thisWindow = window.open('', '_self');
            thisWindow.close();
        });
    }
}
accounts_sso_component_SsoComponent.ɵfac = function SsoComponent_Factory(t) { return new (t || accounts_sso_component_SsoComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](CryptoFunctionService), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](LogService), core["dc" /* ɵɵdirectiveInject */](VaultTimeoutService)); };
accounts_sso_component_SsoComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_sso_component_SsoComponent, selectors: [["app-sso"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 0, vars: 0, template: function SsoComponent_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_sso_component_SsoComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-sso',
                templateUrl: 'sso.component.html',
            }]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: StorageService }, { type: StateService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: ApiService }, { type: CryptoFunctionService }, { type: PasswordGenerationService }, { type: SyncService }, { type: EnvironmentService }, { type: LogService }, { type: VaultTimeoutService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/two-factor-options.component.ts










class two_factor_options_component_TwoFactorOptionsComponent {
    constructor(authService, router, i18nService, platformUtilsService, win) {
        this.authService = authService;
        this.router = router;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.win = win;
        this.onProviderSelected = new core["t" /* EventEmitter */]();
        this.onRecoverSelected = new core["t" /* EventEmitter */]();
        this.providers = [];
    }
    ngOnInit() {
        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);
    }
    choose(p) {
        this.onProviderSelected.emit(p.type);
    }
    recover() {
        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');
        this.onRecoverSelected.emit();
    }
}
two_factor_options_component_TwoFactorOptionsComponent.ɵfac = function TwoFactorOptionsComponent_Factory(t) { return new (t || two_factor_options_component_TwoFactorOptionsComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](Window)); };
two_factor_options_component_TwoFactorOptionsComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: two_factor_options_component_TwoFactorOptionsComponent, outputs: { onProviderSelected: "onProviderSelected", onRecoverSelected: "onRecoverSelected" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](two_factor_options_component_TwoFactorOptionsComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: Window }]; }, { onProviderSelected: [{
            type: core["O" /* Output */]
        }], onRecoverSelected: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/accounts/two-factor-options.component.ts














function TwoFactorOptionsComponent_button_25_Template(rf, ctx) { if (rf & 1) {
    const _r3 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 8);
    core["qc" /* ɵɵlistener */]("click", function TwoFactorOptionsComponent_button_25_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r3); const p_r1 = ctx.$implicit; const ctx_r2 = core["uc" /* ɵɵnextContext */](); return ctx_r2.choose(p_r1); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 9);
    core["Qc" /* ɵɵtext */](3);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 10);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const p_r1 = ctx.$implicit;
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](p_r1.name);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](p_r1.description);
} }
class accounts_two_factor_options_component_TwoFactorOptionsComponent extends two_factor_options_component_TwoFactorOptionsComponent {
    constructor(authService, router, i18nService, platformUtilsService) {
        super(authService, router, i18nService, platformUtilsService, window);
    }
    choose(p) {
        super.choose(p);
        this.authService.selectedTwoFactorProviderType = p.type;
        this.router.navigate(['2fa']);
    }
}
accounts_two_factor_options_component_TwoFactorOptionsComponent.ɵfac = function TwoFactorOptionsComponent_Factory(t) { return new (t || accounts_two_factor_options_component_TwoFactorOptionsComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */])); };
accounts_two_factor_options_component_TwoFactorOptionsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_two_factor_options_component_TwoFactorOptionsComponent, selectors: [["app-two-factor-options"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 41, vars: 13, consts: [[1, "left"], ["routerLink", "/2fa"], [1, "center"], [1, "title"], [1, "right"], [1, "box"], [1, "box-content"], ["type", "button", "appStopClick", "", "class", "box-content-row", 3, "click", 4, "ngFor", "ngForOf"], ["type", "button", "appStopClick", "", 1, "box-content-row", 3, "click"], [1, "text"], [1, "detail"]], template: function TwoFactorOptionsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "a", 1);
        core["Qc" /* ɵɵtext */](5);
        core["vc" /* ɵɵpipe */](6, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](7, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "div", 2);
        core["Qc" /* ɵɵtext */](10, " ");
        core["jc" /* ɵɵelementStart */](11, "span", 3);
        core["Qc" /* ɵɵtext */](12);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](15, " ");
        core["ec" /* ɵɵelement */](16, "div", 4);
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "content");
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "div", 5);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "div", 6);
        core["Qc" /* ɵɵtext */](24, " ");
        core["Oc" /* ɵɵtemplate */](25, TwoFactorOptionsComponent_button_25_Template, 8, 2, "button", 7);
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "button", 8);
        core["qc" /* ɵɵlistener */]("click", function TwoFactorOptionsComponent_Template_button_click_27_listener() { return ctx.recover(); });
        core["Qc" /* ɵɵtext */](28, " ");
        core["jc" /* ɵɵelementStart */](29, "span", 9);
        core["Qc" /* ɵɵtext */](30);
        core["vc" /* ɵɵpipe */](31, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](32, " ");
        core["jc" /* ɵɵelementStart */](33, "span", 10);
        core["Qc" /* ɵɵtext */](34);
        core["vc" /* ɵɵpipe */](35, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](36, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](37, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](38, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](39, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](40, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 5, "close"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 7, "twoStepOptions"));
        core["Sb" /* ɵɵadvance */](13);
        core["Bc" /* ɵɵproperty */]("ngForOf", ctx.providers);
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](31, 9, "recoveryCodeTitle"));
        core["Sb" /* ɵɵadvance */](4);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](35, 11, "recoveryCodeDesc"));
    } }, directives: [fesm2015_router["g" /* RouterLinkWithHref */], common["k" /* NgForOf */], StopClickDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_two_factor_options_component_TwoFactorOptionsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-two-factor-options',
                templateUrl: 'two-factor-options.component.html',
            }]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }]; }, null); })();

// EXTERNAL MODULE: ./jslib/common/src/enums/twoFactorProviderType.ts
var twoFactorProviderType = __webpack_require__(14);

// CONCATENATED MODULE: ./jslib/common/src/services/broadcaster.service.ts
class broadcaster_service_BroadcasterService {
    constructor() {
        this.subscribers = new Map();
    }
    send(message, id) {
        if (id != null) {
            if (this.subscribers.has(id)) {
                this.subscribers.get(id)(message);
            }
            return;
        }
        this.subscribers.forEach(value => {
            value(message);
        });
    }
    subscribe(id, messageCallback) {
        this.subscribers.set(id, messageCallback);
    }
    unsubscribe(id) {
        if (this.subscribers.has(id)) {
            this.subscribers.delete(id);
        }
    }
}

// CONCATENATED MODULE: ./jslib/angular/src/services/broadcaster.service.ts



class services_broadcaster_service_BroadcasterService extends broadcaster_service_BroadcasterService {
}
services_broadcaster_service_BroadcasterService.ɵfac = function BroadcasterService_Factory(t) { return ɵBroadcasterService_BaseFactory(t || services_broadcaster_service_BroadcasterService); };
services_broadcaster_service_BroadcasterService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: services_broadcaster_service_BroadcasterService, factory: services_broadcaster_service_BroadcasterService.ɵfac });
const ɵBroadcasterService_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](services_broadcaster_service_BroadcasterService);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](services_broadcaster_service_BroadcasterService, [{
        type: core["A" /* Injectable */]
    }], null, null); })();

// CONCATENATED MODULE: ./jslib/common/src/models/request/twoFactorEmailRequest.ts

class twoFactorEmailRequest_TwoFactorEmailRequest extends secretVerificationRequest["a" /* SecretVerificationRequest */] {
}

// EXTERNAL MODULE: ./jslib/common/src/services/auth.service.ts + 5 modules
var auth_service = __webpack_require__(194);

// EXTERNAL MODULE: ./node_modules/duo_web_sdk/index.js
var duo_web_sdk = __webpack_require__(417);

// CONCATENATED MODULE: ./jslib/common/src/misc/webauthn_iframe.ts
class WebAuthnIFrame {
    constructor(win, webVaultUrl, webAuthnNewTab, platformUtilsService, i18nService, successCallback, errorCallback, infoCallback) {
        this.win = win;
        this.webVaultUrl = webVaultUrl;
        this.webAuthnNewTab = webAuthnNewTab;
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.successCallback = successCallback;
        this.errorCallback = errorCallback;
        this.infoCallback = infoCallback;
        this.iframe = null;
        this.parseFunction = this.parseMessage.bind(this);
        this.connectorLink = win.document.createElement('a');
    }
    init(data) {
        const params = new URLSearchParams({
            data: this.base64Encode(JSON.stringify(data)),
            parent: encodeURIComponent(this.win.document.location.href),
            btnText: encodeURIComponent(this.i18nService.t('webAuthnAuthenticate')),
            v: '1',
        });
        if (this.webAuthnNewTab) {
            // Firefox fallback which opens the webauthn page in a new tab
            params.append('locale', this.i18nService.translationLocale);
            this.platformUtilsService.launchUri(`${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`);
        }
        else {
            this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;
            this.iframe = this.win.document.getElementById('webauthn_iframe');
            this.iframe.allow = 'publickey-credentials-get ' + new URL(this.webVaultUrl).origin;
            this.iframe.src = this.connectorLink.href;
            this.win.addEventListener('message', this.parseFunction, false);
        }
    }
    stop() {
        this.sendMessage('stop');
    }
    start() {
        this.sendMessage('start');
    }
    sendMessage(message) {
        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {
            return;
        }
        this.iframe.contentWindow.postMessage(message, this.iframe.src);
    }
    base64Encode(str) {
        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {
            return String.fromCharCode(('0x' + p1));
        }));
    }
    cleanup() {
        this.win.removeEventListener('message', this.parseFunction, false);
    }
    parseMessage(event) {
        if (!this.validMessage(event)) {
            return;
        }
        const parts = event.data.split('|');
        if (parts[0] === 'success' && this.successCallback) {
            this.successCallback(parts[1]);
        }
        else if (parts[0] === 'error' && this.errorCallback) {
            this.errorCallback(parts[1]);
        }
        else if (parts[0] === 'info' && this.infoCallback) {
            this.infoCallback(parts[1]);
        }
    }
    validMessage(event) {
        if (event.origin == null || event.origin === '' || event.origin !== this.connectorLink.origin ||
            event.data == null || typeof (event.data) !== 'string') {
            return false;
        }
        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||
            event.data.indexOf('info|') === 0;
    }
}

// CONCATENATED MODULE: ./jslib/angular/src/components/two-factor.component.ts
var two_factor_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



























class two_factor_component_TwoFactorComponent {
    constructor(authService, router, i18nService, apiService, platformUtilsService, win, environmentService, stateService, storageService, route, logService) {
        this.authService = authService;
        this.router = router;
        this.i18nService = i18nService;
        this.apiService = apiService;
        this.platformUtilsService = platformUtilsService;
        this.win = win;
        this.environmentService = environmentService;
        this.stateService = stateService;
        this.storageService = storageService;
        this.route = route;
        this.logService = logService;
        this.token = '';
        this.remember = false;
        this.webAuthnReady = false;
        this.webAuthnNewTab = false;
        this.providers = auth_service["b" /* TwoFactorProviders */];
        this.providerType = twoFactorProviderType["a" /* TwoFactorProviderType */];
        this.selectedProviderType = twoFactorProviderType["a" /* TwoFactorProviderType */].Authenticator;
        this.webAuthnSupported = false;
        this.webAuthn = null;
        this.title = '';
        this.twoFactorEmail = null;
        this.identifier = null;
        this.loginRoute = 'login';
        this.successRoute = 'vault';
        this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);
    }
    get webAuthnAllow() {
        return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;
    }
    ngOnInit() {
        return two_factor_component_awaiter(this, void 0, void 0, function* () {
            if (!this.authing || this.authService.twoFactorProvidersData == null) {
                this.router.navigate([this.loginRoute]);
                return;
            }
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe(qParams => {
                if (qParams.identifier != null) {
                    this.identifier = qParams.identifier;
                }
            });
            if (this.needsLock) {
                this.successRoute = 'lock';
            }
            if (this.win != null && this.webAuthnSupported) {
                const webVaultUrl = this.environmentService.getWebVaultUrl();
                this.webAuthn = new WebAuthnIFrame(this.win, webVaultUrl, this.webAuthnNewTab, this.platformUtilsService, this.i18nService, (token) => {
                    this.token = token;
                    this.submit();
                }, (error) => {
                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);
                }, (info) => {
                    if (info === 'ready') {
                        this.webAuthnReady = true;
                    }
                });
            }
            this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.webAuthnSupported);
            yield this.init();
        });
    }
    ngOnDestroy() {
        this.cleanupWebAuthn();
        this.webAuthn = null;
    }
    init() {
        return two_factor_component_awaiter(this, void 0, void 0, function* () {
            if (this.selectedProviderType == null) {
                this.title = this.i18nService.t('loginUnavailable');
                return;
            }
            this.cleanupWebAuthn();
            this.title = auth_service["b" /* TwoFactorProviders */][this.selectedProviderType].name;
            const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);
            switch (this.selectedProviderType) {
                case twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn:
                    if (!this.webAuthnNewTab) {
                        setTimeout(() => {
                            this.authWebAuthn();
                        }, 500);
                    }
                    break;
                case twoFactorProviderType["a" /* TwoFactorProviderType */].Duo:
                case twoFactorProviderType["a" /* TwoFactorProviderType */].OrganizationDuo:
                    setTimeout(() => {
                        duo_web_sdk["init"]({
                            iframe: undefined,
                            host: providerData.Host,
                            sig_request: providerData.Signature,
                            submit_callback: (f) => two_factor_component_awaiter(this, void 0, void 0, function* () {
                                const sig = f.querySelector('input[name="sig_response"]');
                                if (sig != null) {
                                    this.token = sig.value;
                                    yield this.submit();
                                }
                            }),
                        });
                    }, 0);
                    break;
                case twoFactorProviderType["a" /* TwoFactorProviderType */].Email:
                    this.twoFactorEmail = providerData.Email;
                    if (this.authService.twoFactorProvidersData.size > 1) {
                        yield this.sendEmail(false);
                    }
                    break;
                default:
                    break;
            }
        });
    }
    submit() {
        return two_factor_component_awaiter(this, void 0, void 0, function* () {
            if (this.token == null || this.token === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('verificationCodeRequired'));
                return;
            }
            if (this.selectedProviderType === twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn) {
                if (this.webAuthn != null) {
                    this.webAuthn.stop();
                }
                else {
                    return;
                }
            }
            else if (this.selectedProviderType === twoFactorProviderType["a" /* TwoFactorProviderType */].Email ||
                this.selectedProviderType === twoFactorProviderType["a" /* TwoFactorProviderType */].Authenticator) {
                this.token = this.token.replace(' ', '').trim();
            }
            try {
                yield this.doSubmit();
            }
            catch (_a) {
                if (this.selectedProviderType === twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn && this.webAuthn != null) {
                    this.webAuthn.start();
                }
            }
        });
    }
    doSubmit() {
        return two_factor_component_awaiter(this, void 0, void 0, function* () {
            this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);
            const response = yield this.formPromise;
            const disableFavicon = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableFaviconKey);
            yield this.stateService.save(constants_service["a" /* ConstantsService */].disableFaviconKey, !!disableFavicon);
            if (this.onSuccessfulLogin != null) {
                this.onSuccessfulLogin();
            }
            if (response.resetMasterPassword) {
                this.successRoute = 'set-password';
            }
            if (response.forcePasswordReset) {
                this.successRoute = 'update-temp-password';
            }
            if (this.onSuccessfulLoginNavigate != null) {
                this.onSuccessfulLoginNavigate();
            }
            else {
                this.router.navigate([this.successRoute], {
                    queryParams: {
                        identifier: this.identifier,
                    },
                });
            }
        });
    }
    sendEmail(doToast) {
        return two_factor_component_awaiter(this, void 0, void 0, function* () {
            if (this.selectedProviderType !== twoFactorProviderType["a" /* TwoFactorProviderType */].Email) {
                return;
            }
            if (this.emailPromise != null) {
                return;
            }
            try {
                const request = new twoFactorEmailRequest_TwoFactorEmailRequest();
                request.email = this.authService.email;
                request.masterPasswordHash = this.authService.masterPasswordHash;
                this.emailPromise = this.apiService.postTwoFactorEmail(request);
                yield this.emailPromise;
                if (doToast) {
                    this.platformUtilsService.showToast('success', null, this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));
                }
            }
            catch (e) {
                this.logService.error(e);
            }
            this.emailPromise = null;
        });
    }
    authWebAuthn() {
        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);
        if (!this.webAuthnSupported || this.webAuthn == null) {
            return;
        }
        this.webAuthn.init(providerData);
    }
    cleanupWebAuthn() {
        if (this.webAuthn != null) {
            this.webAuthn.stop();
            this.webAuthn.cleanup();
        }
    }
    get authing() {
        return this.authService.authingWithPassword() || this.authService.authingWithSso() || this.authService.authingWithApiKey();
    }
    get needsLock() {
        return this.authService.authingWithSso() || this.authService.authingWithApiKey();
    }
}
two_factor_component_TwoFactorComponent.ɵfac = function TwoFactorComponent_Factory(t) { return new (t || two_factor_component_TwoFactorComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](Window), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
two_factor_component_TwoFactorComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: two_factor_component_TwoFactorComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](two_factor_component_TwoFactorComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: ApiService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: Window }, { type: EnvironmentService }, { type: StateService }, { type: StorageService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: LogService }]; }, null); })();

// EXTERNAL MODULE: ./src/popup/services/popup-utils.service.ts
var popup_utils_service = __webpack_require__(23);

// CONCATENATED MODULE: ./src/popup/accounts/two-factor.component.ts
var accounts_two_factor_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};









































function TwoFactorComponent_button_20_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "button", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 13);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["uc" /* ɵɵnextContext */]();
    const _r0 = core["Ic" /* ɵɵreference */](1);
    core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 4, "continue"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
} }
function TwoFactorComponent_ng_container_26_span_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "span");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "enterVerificationCodeApp"), " ");
} }
function TwoFactorComponent_ng_container_26_span_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "span");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r10 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["xc" /* ɵɵpipeBind2 */](2, 1, "enterVerificationCodeEmail", ctx_r10.twoFactorEmail), " ");
} }
function TwoFactorComponent_ng_container_26_Template(rf, ctx) { if (rf & 1) {
    const _r12 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, TwoFactorComponent_ng_container_26_span_4_Template, 3, 3, "span", 8);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, TwoFactorComponent_ng_container_26_span_6_Template, 3, 4, "span", 8);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 15);
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "div", 16);
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "div", 17);
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "label", 18);
    core["Qc" /* ɵɵtext */](16);
    core["vc" /* ɵɵpipe */](17, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "input", 19);
    core["qc" /* ɵɵlistener */]("ngModelChange", function TwoFactorComponent_ng_container_26_Template_input_ngModelChange_19_listener($event) { core["Jc" /* ɵɵrestoreView */](_r12); const ctx_r11 = core["uc" /* ɵɵnextContext */](); return ctx_r11.token = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "div", 20);
    core["Qc" /* ɵɵtext */](23, " ");
    core["jc" /* ɵɵelementStart */](24, "label", 21);
    core["Qc" /* ɵɵtext */](25);
    core["vc" /* ɵɵpipe */](26, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](27, " ");
    core["jc" /* ɵɵelementStart */](28, "input", 22);
    core["qc" /* ɵɵlistener */]("ngModelChange", function TwoFactorComponent_ng_container_26_Template_input_ngModelChange_28_listener($event) { core["Jc" /* ɵɵrestoreView */](_r12); const ctx_r13 = core["uc" /* ɵɵnextContext */](); return ctx_r13.remember = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](31, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](32, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.selectedProviderType === ctx_r2.providerType.Authenticator);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.selectedProviderType === ctx_r2.providerType.Email);
    core["Sb" /* ɵɵadvance */](10);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](17, 6, "verificationCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.token);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](26, 8, "rememberMe"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.remember);
} }
function TwoFactorComponent_ng_container_28_Template(rf, ctx) { if (rf & 1) {
    const _r15 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "p", 23);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ec" /* ɵɵelement */](8, "img", 24);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "div", 15);
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "div", 16);
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 17);
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "label", 25);
    core["Qc" /* ɵɵtext */](18);
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["jc" /* ɵɵelementStart */](21, "input", 26);
    core["qc" /* ɵɵlistener */]("ngModelChange", function TwoFactorComponent_ng_container_28_Template_input_ngModelChange_21_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r14 = core["uc" /* ɵɵnextContext */](); return ctx_r14.token = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["jc" /* ɵɵelementStart */](24, "div", 20);
    core["Qc" /* ɵɵtext */](25, " ");
    core["jc" /* ɵɵelementStart */](26, "label", 21);
    core["Qc" /* ɵɵtext */](27);
    core["vc" /* ɵɵpipe */](28, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["jc" /* ɵɵelementStart */](30, "input", 22);
    core["qc" /* ɵɵlistener */]("ngModelChange", function TwoFactorComponent_ng_container_28_Template_input_ngModelChange_30_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r16 = core["uc" /* ɵɵnextContext */](); return ctx_r16.remember = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](31, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](32, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](33, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](34, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 5, "insertYubiKey"));
    core["Sb" /* ɵɵadvance */](13);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 7, "verificationCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r3.token);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](28, 9, "rememberMe"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r3.remember);
} }
function TwoFactorComponent_ng_container_30_Template(rf, ctx) { if (rf & 1) {
    const _r18 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 27);
    core["ec" /* ɵɵelement */](3, "iframe", 28);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "div", 29);
    core["Qc" /* ɵɵtext */](6, " ");
    core["jc" /* ɵɵelementStart */](7, "div", 16);
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 20);
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "label", 21);
    core["Qc" /* ɵɵtext */](12);
    core["vc" /* ɵɵpipe */](13, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "input", 22);
    core["qc" /* ɵɵlistener */]("ngModelChange", function TwoFactorComponent_ng_container_30_Template_input_ngModelChange_15_listener($event) { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r17 = core["uc" /* ɵɵnextContext */](); return ctx_r17.remember = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](17, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("allow", ctx_r4.webAuthnAllow);
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 3, "rememberMe"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.remember);
} }
function TwoFactorComponent_ng_container_32_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p", 23);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "button", 31);
    core["qc" /* ɵɵlistener */]("click", function TwoFactorComponent_ng_container_32_div_2_Template_button_click_6_listener() { core["Jc" /* ɵɵrestoreView */](_r21); const ctx_r20 = core["uc" /* ɵɵnextContext */](2); return ctx_r20.authWebAuthn(); });
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "webAuthnNewTab"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 4, "webAuthnNewTabOpen"));
} }
function TwoFactorComponent_ng_container_32_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, TwoFactorComponent_ng_container_32_div_2_Template, 10, 6, "div", 30);
    core["Qc" /* ɵɵtext */](3, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r5.webAuthnNewTab);
} }
function TwoFactorComponent_ng_container_34_Template(rf, ctx) { if (rf & 1) {
    const _r23 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 32);
    core["ec" /* ɵɵelement */](3, "iframe", 33);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "div", 29);
    core["Qc" /* ɵɵtext */](6, " ");
    core["jc" /* ɵɵelementStart */](7, "div", 16);
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 20);
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "label", 21);
    core["Qc" /* ɵɵtext */](12);
    core["vc" /* ɵɵpipe */](13, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "input", 22);
    core["qc" /* ɵɵlistener */]("ngModelChange", function TwoFactorComponent_ng_container_34_Template_input_ngModelChange_15_listener($event) { core["Jc" /* ɵɵrestoreView */](_r23); const ctx_r22 = core["uc" /* ɵɵnextContext */](); return ctx_r22.remember = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](17, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r6 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](12);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 2, "rememberMe"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.remember);
} }
function TwoFactorComponent_div_36_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 34);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p", 23);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "p", 23);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "noTwoStepProviders"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 4, "noTwoStepProviders2"));
} }
function TwoFactorComponent_div_38_p_9_Template(rf, ctx) { if (rf & 1) {
    const _r26 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "p", 23);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "button", 38);
    core["qc" /* ɵɵlistener */]("click", function TwoFactorComponent_div_38_p_9_Template_button_click_2_listener() { core["Jc" /* ɵɵrestoreView */](_r26); const ctx_r25 = core["uc" /* ɵɵnextContext */](2); return ctx_r25.sendEmail(true); });
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r24 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("appApiAction", ctx_r24.emailPromise);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 2, "sendVerificationCodeEmailAgain"), " ");
} }
function TwoFactorComponent_div_38_Template(rf, ctx) { if (rf & 1) {
    const _r28 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 35);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p", 23);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "button", 36);
    core["qc" /* ɵɵlistener */]("click", function TwoFactorComponent_div_38_Template_button_click_4_listener() { core["Jc" /* ɵɵrestoreView */](_r28); const ctx_r27 = core["uc" /* ɵɵnextContext */](); return ctx_r27.anotherMethod(); });
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["Oc" /* ɵɵtemplate */](9, TwoFactorComponent_div_38_p_9_Template, 6, 4, "p", 37);
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r8 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 2, "useAnotherTwoStepMethod"));
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r8.selectedProviderType === ctx_r8.providerType.Email);
} }
const BroadcasterSubscriptionId = 'TwoFactorComponent';
class accounts_two_factor_component_TwoFactorComponent extends two_factor_component_TwoFactorComponent {
    constructor(authService, router, i18nService, apiService, platformUtilsService, syncService, environmentService, broadcasterService, popupUtilsService, stateService, storageService, route, messagingService, logService) {
        super(authService, router, i18nService, apiService, platformUtilsService, window, environmentService, stateService, storageService, route, logService);
        this.syncService = syncService;
        this.broadcasterService = broadcasterService;
        this.popupUtilsService = popupUtilsService;
        this.messagingService = messagingService;
        this.showNewWindowMessage = false;
        super.onSuccessfulLogin = () => {
            return syncService.fullSync(true);
        };
        super.successRoute = '/tabs/vault';
        this.webAuthnNewTab = this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();
    }
    ngOnInit() {
        const _super = Object.create(null, {
            onSuccessfulLogin: { get: () => super.onSuccessfulLogin, set: v => super.onSuccessfulLogin = v },
            ngOnInit: { get: () => super.ngOnInit, set: v => super.ngOnInit = v }
        });
        return accounts_two_factor_component_awaiter(this, void 0, void 0, function* () {
            if (this.route.snapshot.paramMap.has('webAuthnResponse')) {
                // WebAuthn fallback response
                this.selectedProviderType = twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn;
                this.token = this.route.snapshot.paramMap.get('webAuthnResponse');
                _super.onSuccessfulLogin = () => accounts_two_factor_component_awaiter(this, void 0, void 0, function* () {
                    this.syncService.fullSync(true);
                    this.messagingService.send('reloadPopup');
                    window.close();
                });
                this.remember = this.route.snapshot.paramMap.get('remember') === 'true';
                yield this.doSubmit();
                return;
            }
            yield _super.ngOnInit.call(this);
            if (this.selectedProviderType == null) {
                return;
            }
            // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width
            // than usual to avoid cutting off the dialog.
            if (this.selectedProviderType === twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn && (yield this.isLinux())) {
                document.body.classList.add('linux-webauthn');
            }
            if (this.selectedProviderType === twoFactorProviderType["a" /* TwoFactorProviderType */].Email &&
                this.popupUtilsService.inPopup(window)) {
                const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('popup2faCloseMessage'), null, this.i18nService.t('yes'), this.i18nService.t('no'));
                if (confirmed) {
                    this.popupUtilsService.popOut(window);
                }
            }
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((qParams) => accounts_two_factor_component_awaiter(this, void 0, void 0, function* () {
                if (qParams.sso === 'true') {
                    _super.onSuccessfulLogin = () => {
                        browserApi["a" /* BrowserApi */].reloadOpenWindows();
                        const thisWindow = window.open('', '_self');
                        thisWindow.close();
                        return this.syncService.fullSync(true);
                    };
                }
            }));
        });
    }
    ngOnDestroy() {
        const _super = Object.create(null, {
            ngOnDestroy: { get: () => super.ngOnDestroy }
        });
        return accounts_two_factor_component_awaiter(this, void 0, void 0, function* () {
            this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);
            if (this.selectedProviderType === twoFactorProviderType["a" /* TwoFactorProviderType */].WebAuthn && (yield this.isLinux())) {
                document.body.classList.remove('linux-webauthn');
            }
            _super.ngOnDestroy.call(this);
        });
    }
    anotherMethod() {
        this.router.navigate(['2fa-options']);
    }
    isLinux() {
        return accounts_two_factor_component_awaiter(this, void 0, void 0, function* () {
            return (yield browserApi["a" /* BrowserApi */].getPlatformInfo()).os === 'linux';
        });
    }
}
accounts_two_factor_component_TwoFactorComponent.ɵfac = function TwoFactorComponent_Factory(t) { return new (t || accounts_two_factor_component_TwoFactorComponent)(core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
accounts_two_factor_component_TwoFactorComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_two_factor_component_TwoFactorComponent, selectors: [["app-two-factor"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 42, vars: 13, consts: [["id", "two-factor-page", 3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["routerLink", "/login"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled", 4, "ngIf"], [4, "ngIf"], ["class", "content", 4, "ngIf"], ["class", "content no-vpad", 4, "ngIf"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [1, "content", "text-center"], [1, "box", "first"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "code"], ["id", "code", "type", "text", "name", "Code", "required", "", "appAutofocus", "", "inputmode", "tel", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox"], ["for", "remember"], ["id", "remember", "type", "checkbox", "name", "Remember", 3, "ngModel", "ngModelChange"], [1, "text-center"], ["src", "./images/yubikey.jpg", "alt", "", 1, "img-rounded", "img-responsive"], ["for", "code", 1, "sr-only"], ["id", "code", "type", "password", "name", "Code", "required", "", "appAutofocus", "", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["id", "web-authn-frame"], ["id", "webauthn_iframe", 3, "allow"], [1, "box"], ["class", "content text-center", 4, "ngIf"], ["type", "button", "appStopClick", "", 1, "btn", "primary", "block", 3, "click"], ["id", "duo-frame"], ["id", "duo_iframe"], [1, "content"], [1, "content", "no-vpad"], ["type", "button", "appStopClick", "", 3, "click"], ["class", "text-center", 4, "ngIf"], ["type", "button", "appStopClick", "", 3, "appApiAction", "click"]], template: function TwoFactorComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function TwoFactorComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["jc" /* ɵɵelementStart */](18, "div", 6);
        core["Qc" /* ɵɵtext */](19, " ");
        core["Oc" /* ɵɵtemplate */](20, TwoFactorComponent_button_20_Template, 8, 6, "button", 7);
        core["Qc" /* ɵɵtext */](21, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](22, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](23, " ");
        core["jc" /* ɵɵelementStart */](24, "content");
        core["Qc" /* ɵɵtext */](25, " ");
        core["Oc" /* ɵɵtemplate */](26, TwoFactorComponent_ng_container_26_Template, 33, 10, "ng-container", 8);
        core["Qc" /* ɵɵtext */](27, " ");
        core["Oc" /* ɵɵtemplate */](28, TwoFactorComponent_ng_container_28_Template, 35, 11, "ng-container", 8);
        core["Qc" /* ɵɵtext */](29, " ");
        core["Oc" /* ɵɵtemplate */](30, TwoFactorComponent_ng_container_30_Template, 20, 5, "ng-container", 8);
        core["Qc" /* ɵɵtext */](31, " ");
        core["Oc" /* ɵɵtemplate */](32, TwoFactorComponent_ng_container_32_Template, 4, 1, "ng-container", 8);
        core["Qc" /* ɵɵtext */](33, " ");
        core["Oc" /* ɵɵtemplate */](34, TwoFactorComponent_ng_container_34_Template, 20, 4, "ng-container", 8);
        core["Qc" /* ɵɵtext */](35, " ");
        core["Oc" /* ɵɵtemplate */](36, TwoFactorComponent_div_36_Template, 10, 6, "div", 9);
        core["Qc" /* ɵɵtext */](37, " ");
        core["Oc" /* ɵɵtemplate */](38, TwoFactorComponent_div_38_Template, 11, 4, "div", 10);
        core["Qc" /* ɵɵtext */](39, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](40, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](41, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 11, "back"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](ctx.title);
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.selectedProviderType != null && ctx.selectedProviderType !== ctx.providerType.Duo && ctx.selectedProviderType !== ctx.providerType.OrganizationDuo && (ctx.selectedProviderType !== ctx.providerType.WebAuthn || _r0.loading));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.selectedProviderType === ctx.providerType.Authenticator || ctx.selectedProviderType === ctx.providerType.Email);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.selectedProviderType === ctx.providerType.Yubikey);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.selectedProviderType === ctx.providerType.WebAuthn && !ctx.webAuthnNewTab);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.selectedProviderType === ctx.providerType.WebAuthn && ctx.webAuthnNewTab);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.selectedProviderType === ctx.providerType.Duo || ctx.selectedProviderType === ctx.providerType.OrganizationDuo);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.selectedProviderType == null);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.selectedProviderType != null);
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, fesm2015_router["g" /* RouterLinkWithHref */], common["l" /* NgIf */], BlurClickDirective, BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], autofocus_directive_AutofocusDirective, InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], fesm2015_forms["a" /* CheckboxControlValueAccessor */], StopClickDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_two_factor_component_TwoFactorComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-two-factor',
                templateUrl: 'two-factor.component.html',
            }]
    }], function () { return [{ type: AuthService }, { type: fesm2015_router["e" /* Router */] }, { type: I18nService }, { type: ApiService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: SyncService }, { type: EnvironmentService }, { type: services_broadcaster_service_BroadcasterService }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: StateService }, { type: StorageService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: messaging_service["a" /* MessagingService */] }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts
class OrganizationUserResetPasswordRequest {
}

// CONCATENATED MODULE: ./jslib/common/src/models/request/updateTempPasswordRequest.ts

class updateTempPasswordRequest_UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {
}

// CONCATENATED MODULE: ./jslib/angular/src/components/update-temp-password.component.ts
var update_temp_password_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
























class update_temp_password_component_UpdateTempPasswordComponent extends ChangePasswordComponent {
    constructor(i18nService, platformUtilsService, passwordGenerationService, policyService, cryptoService, userService, messagingService, apiService, syncService, logService) {
        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService, platformUtilsService, policyService);
        this.apiService = apiService;
        this.syncService = syncService;
        this.logService = logService;
        this.showPassword = false;
    }
    ngOnInit() {
        const _super = Object.create(null, {
            ngOnInit: { get: () => super.ngOnInit }
        });
        return update_temp_password_component_awaiter(this, void 0, void 0, function* () {
            yield this.syncService.fullSync(true);
            _super.ngOnInit.call(this);
        });
    }
    togglePassword(confirmField) {
        this.showPassword = !this.showPassword;
        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();
    }
    setupSubmitActions() {
        return update_temp_password_component_awaiter(this, void 0, void 0, function* () {
            this.enforcedPolicyOptions = yield this.policyService.getMasterPasswordPolicyOptions();
            this.email = yield this.userService.getEmail();
            this.kdf = yield this.userService.getKdf();
            this.kdfIterations = yield this.userService.getKdfIterations();
            return true;
        });
    }
    submit() {
        return update_temp_password_component_awaiter(this, void 0, void 0, function* () {
            // Validation
            if (!(yield this.strongPassword())) {
                return;
            }
            if (!(yield this.setupSubmitActions())) {
                return;
            }
            try {
                // Create new key and hash new password
                const newKey = yield this.cryptoService.makeKey(this.masterPassword, this.email.trim().toLowerCase(), this.kdf, this.kdfIterations);
                const newPasswordHash = yield this.cryptoService.hashPassword(this.masterPassword, newKey);
                // Grab user's current enc key
                const userEncKey = yield this.cryptoService.getEncKey();
                // Create new encKey for the User
                const newEncKey = yield this.cryptoService.remakeEncKey(newKey, userEncKey);
                yield this.performSubmitActions(newPasswordHash, newKey, newEncKey);
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
    performSubmitActions(masterPasswordHash, key, encKey) {
        return update_temp_password_component_awaiter(this, void 0, void 0, function* () {
            try {
                // Create request
                const request = new updateTempPasswordRequest_UpdateTempPasswordRequest();
                request.key = encKey[1].encryptedString;
                request.newMasterPasswordHash = masterPasswordHash;
                request.masterPasswordHint = this.hint;
                // Update user's password
                this.formPromise = this.apiService.putUpdateTempPassword(request);
                yield this.formPromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t('updatedMasterPassword'));
                if (this.onSuccessfulChangePassword != null) {
                    this.onSuccessfulChangePassword();
                }
                else {
                    this.messagingService.send('logout');
                }
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
}
update_temp_password_component_UpdateTempPasswordComponent.ɵfac = function UpdateTempPasswordComponent_Factory(t) { return new (t || update_temp_password_component_UpdateTempPasswordComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
update_temp_password_component_UpdateTempPasswordComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: update_temp_password_component_UpdateTempPasswordComponent, features: [core["Pb" /* ɵɵInheritDefinitionFeature */]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](update_temp_password_component_UpdateTempPasswordComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: PasswordGenerationService }, { type: PolicyService }, { type: CryptoService }, { type: UserService }, { type: messaging_service["a" /* MessagingService */] }, { type: ApiService }, { type: SyncService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/accounts/update-temp-password.component.ts

































function UpdateTempPasswordComponent_app_callout_39_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 31);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Bc" /* ɵɵproperty */]("enforcedPolicyOptions", ctx_r1.enforcedPolicyOptions);
} }
function UpdateTempPasswordComponent_strong_54_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "strong");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Ub" /* ɵɵclassMapInterpolate1 */]("sub-label text-", ctx_r2.masterPasswordScoreStyle.Color, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r2.masterPasswordScoreStyle.Text, " ");
} }
const update_temp_password_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
const update_temp_password_component_c1 = function (a0) { return { width: a0 }; };
class accounts_update_temp_password_component_UpdateTempPasswordComponent extends update_temp_password_component_UpdateTempPasswordComponent {
    constructor(i18nService, platformUtilsService, passwordGenerationService, policyService, cryptoService, userService, messagingService, apiService, syncService, logService) {
        super(i18nService, platformUtilsService, passwordGenerationService, policyService, cryptoService, userService, messagingService, apiService, syncService, logService);
    }
    get masterPasswordScoreStyle() {
        const scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;
        switch (this.masterPasswordScore) {
            case 4:
                return {
                    Color: 'bg-success',
                    Text: 'strong',
                    Width: scoreWidth,
                };
            case 3:
                return {
                    Color: 'bg-primary',
                    Text: 'good',
                    Width: scoreWidth,
                };
            case 2:
                return {
                    Color: 'bg-warning',
                    Text: 'weak',
                    Width: scoreWidth,
                };
            default:
                return {
                    Color: 'bg-danger',
                    Text: 'weak',
                    Width: scoreWidth,
                };
        }
    }
}
accounts_update_temp_password_component_UpdateTempPasswordComponent.ɵfac = function UpdateTempPasswordComponent_Factory(t) { return new (t || accounts_update_temp_password_component_UpdateTempPasswordComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
accounts_update_temp_password_component_UpdateTempPasswordComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: accounts_update_temp_password_component_UpdateTempPasswordComponent, selectors: [["app-update-temp-password"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 126, vars: 59, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], [3, "click"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], ["type", "warning", 3, "title"], ["type", "info", 3, "enforcedPolicyOptions", 4, "ngIf"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], [1, "box-content-row-flex"], [1, "row-main"], ["for", "masterPassword"], [3, "class", 4, "ngIf"], ["id", "masterPassword", "name", "MasterPassword", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange", "input"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], [1, "progress"], ["role", "progressbar", "aria-valuenow", "0", "aria-valuemin", "0", "aria-valuemax", "100", 3, "ngStyle"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-flex"], ["for", "masterPasswordRetype"], ["id", "masterPasswordRetype", "name", "MasterPasswordRetype", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], ["for", "hint"], ["id", "hint", "type", "text", "name", "Hint", 3, "ngModel", "ngModelChange"], [1, "box-footer"], ["type", "info", 3, "enforcedPolicyOptions"]], template: function UpdateTempPasswordComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function UpdateTempPasswordComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["qc" /* ɵɵlistener */]("click", function UpdateTempPasswordComponent_Template_a_click_7_listener() { return ctx.logOut(); });
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "button", 7);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "span", 8);
        core["Qc" /* ɵɵtext */](24);
        core["vc" /* ɵɵpipe */](25, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ec" /* ɵɵelement */](27, "i", 9);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["jc" /* ɵɵelementStart */](34, "app-callout", 10);
        core["vc" /* ɵɵpipe */](35, "i18n");
        core["Qc" /* ɵɵtext */](36);
        core["vc" /* ɵɵpipe */](37, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](38, " ");
        core["Oc" /* ɵɵtemplate */](39, UpdateTempPasswordComponent_app_callout_39_Template, 2, 1, "app-callout", 11);
        core["Qc" /* ɵɵtext */](40, " ");
        core["jc" /* ɵɵelementStart */](41, "div", 12);
        core["Qc" /* ɵɵtext */](42, " ");
        core["jc" /* ɵɵelementStart */](43, "div", 13);
        core["Qc" /* ɵɵtext */](44, " ");
        core["jc" /* ɵɵelementStart */](45, "div", 14);
        core["Qc" /* ɵɵtext */](46, " ");
        core["jc" /* ɵɵelementStart */](47, "div", 15);
        core["Qc" /* ɵɵtext */](48, " ");
        core["jc" /* ɵɵelementStart */](49, "div", 16);
        core["Qc" /* ɵɵtext */](50, " ");
        core["jc" /* ɵɵelementStart */](51, "label", 17);
        core["Qc" /* ɵɵtext */](52);
        core["vc" /* ɵɵpipe */](53, "i18n");
        core["Oc" /* ɵɵtemplate */](54, UpdateTempPasswordComponent_strong_54_Template, 2, 4, "strong", 18);
        core["Qc" /* ɵɵtext */](55, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](56, " ");
        core["jc" /* ɵɵelementStart */](57, "input", 19);
        core["qc" /* ɵɵlistener */]("ngModelChange", function UpdateTempPasswordComponent_Template_input_ngModelChange_57_listener($event) { return ctx.masterPassword = $event; })("input", function UpdateTempPasswordComponent_Template_input_input_57_listener() { return ctx.updatePasswordStrength(); });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](58, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](59, " ");
        core["jc" /* ɵɵelementStart */](60, "div", 20);
        core["Qc" /* ɵɵtext */](61, " ");
        core["jc" /* ɵɵelementStart */](62, "button", 21);
        core["qc" /* ɵɵlistener */]("click", function UpdateTempPasswordComponent_Template_button_click_62_listener() { return ctx.togglePassword(false); });
        core["vc" /* ɵɵpipe */](63, "i18n");
        core["Qc" /* ɵɵtext */](64, " ");
        core["ec" /* ɵɵelement */](65, "i", 22);
        core["Qc" /* ɵɵtext */](66, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](67, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](68, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](69, " ");
        core["jc" /* ɵɵelementStart */](70, "div", 23);
        core["Qc" /* ɵɵtext */](71, " ");
        core["ec" /* ɵɵelement */](72, "div", 24);
        core["Qc" /* ɵɵtext */](73, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](74, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](75, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](76, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](77, " ");
        core["jc" /* ɵɵelementStart */](78, "div", 12);
        core["Qc" /* ɵɵtext */](79, " ");
        core["jc" /* ɵɵelementStart */](80, "div", 13);
        core["Qc" /* ɵɵtext */](81, " ");
        core["jc" /* ɵɵelementStart */](82, "div", 25);
        core["Qc" /* ɵɵtext */](83, " ");
        core["jc" /* ɵɵelementStart */](84, "div", 16);
        core["Qc" /* ɵɵtext */](85, " ");
        core["jc" /* ɵɵelementStart */](86, "label", 26);
        core["Qc" /* ɵɵtext */](87);
        core["vc" /* ɵɵpipe */](88, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](89, " ");
        core["jc" /* ɵɵelementStart */](90, "input", 27);
        core["qc" /* ɵɵlistener */]("ngModelChange", function UpdateTempPasswordComponent_Template_input_ngModelChange_90_listener($event) { return ctx.masterPasswordRetype = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](91, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](92, " ");
        core["jc" /* ɵɵelementStart */](93, "div", 20);
        core["Qc" /* ɵɵtext */](94, " ");
        core["jc" /* ɵɵelementStart */](95, "button", 21);
        core["qc" /* ɵɵlistener */]("click", function UpdateTempPasswordComponent_Template_button_click_95_listener() { return ctx.togglePassword(true); });
        core["vc" /* ɵɵpipe */](96, "i18n");
        core["Qc" /* ɵɵtext */](97, " ");
        core["ec" /* ɵɵelement */](98, "i", 22);
        core["Qc" /* ɵɵtext */](99, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](100, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](101, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](102, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](103, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](104, " ");
        core["jc" /* ɵɵelementStart */](105, "div", 12);
        core["Qc" /* ɵɵtext */](106, " ");
        core["jc" /* ɵɵelementStart */](107, "div", 13);
        core["Qc" /* ɵɵtext */](108, " ");
        core["jc" /* ɵɵelementStart */](109, "div", 14);
        core["Qc" /* ɵɵtext */](110, " ");
        core["jc" /* ɵɵelementStart */](111, "label", 28);
        core["Qc" /* ɵɵtext */](112);
        core["vc" /* ɵɵpipe */](113, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](114, " ");
        core["jc" /* ɵɵelementStart */](115, "input", 29);
        core["qc" /* ɵɵlistener */]("ngModelChange", function UpdateTempPasswordComponent_Template_input_ngModelChange_115_listener($event) { return ctx.hint = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](116, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](117, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](118, " ");
        core["jc" /* ɵɵelementStart */](119, "div", 30);
        core["Qc" /* ɵɵtext */](120);
        core["vc" /* ɵɵpipe */](121, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](122, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](123, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](124, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](125, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 29, "logOut"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 31, "updateMasterPassword"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](25, 33, "submit"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](7);
        core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](35, 35, "updateMasterPassword"));
        core["Sb" /* ɵɵadvance */](2);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](37, 37, "updateMasterPasswordWarning"), " ");
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.enforcedPolicyOptions);
        core["Sb" /* ɵɵadvance */](13);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](53, 39, "masterPass"), " ");
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.masterPasswordScoreStyle.Text);
        core["Sb" /* ɵɵadvance */](3);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.showPassword ? "text" : "password");
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.masterPassword);
        core["Sb" /* ɵɵadvance */](5);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](63, 41, "toggleVisibility"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](51, update_temp_password_component_c0, !ctx.showPassword, ctx.showPassword));
        core["Sb" /* ɵɵadvance */](7);
        core["Ub" /* ɵɵclassMapInterpolate1 */]("progress-bar bg-", ctx.masterPasswordScoreStyle.Color, "");
        core["Bc" /* ɵɵproperty */]("ngStyle", core["Fc" /* ɵɵpureFunction1 */](54, update_temp_password_component_c1, ctx.masterPasswordScoreStyle.Width + "%"));
        core["Tb" /* ɵɵattribute */]("aria-valuenow", ctx.masterPasswordScoreStyle.Width);
        core["Sb" /* ɵɵadvance */](15);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](88, 43, "reTypeMasterPass"));
        core["Sb" /* ɵɵadvance */](3);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.showPassword ? "text" : "password");
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.masterPasswordRetype);
        core["Sb" /* ɵɵadvance */](5);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](96, 45, "toggleVisibility"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](56, update_temp_password_component_c0, !ctx.showPassword, ctx.showPassword));
        core["Sb" /* ɵɵadvance */](14);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](113, 47, "masterPassHint"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.hint);
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](121, 49, "masterPassHintDesc"), " ");
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, BlurClickDirective, CalloutComponent, common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], StopClickDirective, A11yTitleDirective, common["j" /* NgClass */], common["m" /* NgStyle */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](accounts_update_temp_password_component_UpdateTempPasswordComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-update-temp-password',
                templateUrl: 'update-temp-password.component.html',
            }]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: PasswordGenerationService }, { type: PolicyService }, { type: CryptoService }, { type: UserService }, { type: messaging_service["a" /* MessagingService */] }, { type: ApiService }, { type: SyncService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/password-generator-history.component.ts
var password_generator_history_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};








class password_generator_history_component_PasswordGeneratorHistoryComponent {
    constructor(passwordGenerationService, platformUtilsService, i18nService, win) {
        this.passwordGenerationService = passwordGenerationService;
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.win = win;
        this.history = [];
    }
    ngOnInit() {
        return password_generator_history_component_awaiter(this, void 0, void 0, function* () {
            this.history = yield this.passwordGenerationService.getHistory();
        });
    }
    clear() {
        this.history = [];
        this.passwordGenerationService.clear();
    }
    copy(password) {
        const copyOptions = this.win != null ? { window: this.win } : null;
        this.platformUtilsService.copyToClipboard(password, copyOptions);
        this.platformUtilsService.showToast('info', null, this.i18nService.t('valueCopied', this.i18nService.t('password')));
    }
}
password_generator_history_component_PasswordGeneratorHistoryComponent.ɵfac = function PasswordGeneratorHistoryComponent_Factory(t) { return new (t || password_generator_history_component_PasswordGeneratorHistoryComponent)(core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](Window)); };
password_generator_history_component_PasswordGeneratorHistoryComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: password_generator_history_component_PasswordGeneratorHistoryComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](password_generator_history_component_PasswordGeneratorHistoryComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: PasswordGenerationService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: Window }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/select-copy.directive.ts




class SelectCopyDirective {
    constructor(el, platformUtilsService) {
        this.el = el;
        this.platformUtilsService = platformUtilsService;
    }
    onCopy() {
        if (window == null) {
            return;
        }
        let copyText = '';
        const selection = window.getSelection();
        for (let i = 0; i < selection.rangeCount; i++) {
            const range = selection.getRangeAt(i);
            const text = range.toString();
            // The selection should only contain one line of text. In some cases however, the
            // selection contains newlines and space characters from the indentation of following
            // sibling nodes. To avoid copying passwords containing trailing newlines and spaces
            // that aren't part of the password, the selection has to be trimmed.
            let stringEndPos = text.length;
            const newLinePos = text.search(/(?:\r\n|\r|\n)/);
            if (newLinePos > -1) {
                const otherPart = text.substr(newLinePos).trim();
                if (otherPart === '') {
                    stringEndPos = newLinePos;
                }
            }
            copyText += text.substring(0, stringEndPos);
        }
        this.platformUtilsService.copyToClipboard(copyText, { window: window });
    }
}
SelectCopyDirective.ɵfac = function SelectCopyDirective_Factory(t) { return new (t || SelectCopyDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */]), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */])); };
SelectCopyDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: SelectCopyDirective, selectors: [["", "appSelectCopy", ""]], hostBindings: function SelectCopyDirective_HostBindings(rf, ctx) { if (rf & 1) {
        core["qc" /* ɵɵlistener */]("copy", function SelectCopyDirective_copy_HostBindingHandler() { return ctx.onCopy(); });
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](SelectCopyDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appSelectCopy]',
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }, { type: platformUtils_service["a" /* PlatformUtilsService */] }]; }, { onCopy: [{
            type: core["w" /* HostListener */],
            args: ['copy']
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/pipes/color-password.pipe.ts



/*
 An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)
 and handles Unicode / Emoji characters correctly.
*/
class color_password_pipe_ColorPasswordPipe {
    transform(password) {
        // Convert to an array to handle cases that stings have special characters, ie: emoji.
        const passwordArray = Array.from(password);
        let colorizedPassword = '';
        for (let i = 0; i < passwordArray.length; i++) {
            let character = passwordArray[i];
            let isSpecial = false;
            // Sanitize HTML first.
            switch (character) {
                case '&':
                    character = '&amp;';
                    isSpecial = true;
                    break;
                case '<':
                    character = '&lt;';
                    isSpecial = true;
                    break;
                case '>':
                    character = '&gt;';
                    isSpecial = true;
                    break;
                case ' ':
                    character = '&nbsp;';
                    isSpecial = true;
                    break;
                default:
                    break;
            }
            let type = 'letter';
            if (character.match(utils["a" /* Utils */].regexpEmojiPresentation)) {
                type = 'emoji';
            }
            else if (isSpecial || character.match(/[^\w ]/)) {
                type = 'special';
            }
            else if (character.match(/\d/)) {
                type = 'number';
            }
            colorizedPassword += '<span class="password-' + type + '">' + character + '</span>';
        }
        return colorizedPassword;
    }
}
color_password_pipe_ColorPasswordPipe.ɵfac = function ColorPasswordPipe_Factory(t) { return new (t || color_password_pipe_ColorPasswordPipe)(); };
color_password_pipe_ColorPasswordPipe.ɵpipe = core["cc" /* ɵɵdefinePipe */]({ name: "colorPassword", type: color_password_pipe_ColorPasswordPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](color_password_pipe_ColorPasswordPipe, [{
        type: core["R" /* Pipe */],
        args: [{ name: 'colorPassword' }]
    }], null, null); })();

// CONCATENATED MODULE: ./src/popup/generator/password-generator-history.component.ts

















function PasswordGeneratorHistoryComponent_div_32_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 12);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 13);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 14);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "div", 15);
    core["vc" /* ɵɵpipe */](7, "colorPassword");
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span", 16);
    core["Qc" /* ɵɵtext */](10);
    core["vc" /* ɵɵpipe */](11, "date");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 17);
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function PasswordGeneratorHistoryComponent_div_32_div_4_Template_button_click_17_listener() { core["Jc" /* ɵɵrestoreView */](_r5); const h_r3 = ctx.$implicit; const ctx_r4 = core["uc" /* ɵɵnextContext */](2); return ctx_r4.copy(h_r3.password); });
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["Qc" /* ɵɵtext */](19, " ");
    core["ec" /* ɵɵelement */](20, "i", 19);
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const h_r3 = ctx.$implicit;
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("innerHTML", core["wc" /* ɵɵpipeBind1 */](7, 3, h_r3.password), core["Kc" /* ɵɵsanitizeHtml */]);
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["xc" /* ɵɵpipeBind2 */](11, 5, h_r3.date, "medium"));
    core["Sb" /* ɵɵadvance */](7);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](18, 8, "copyPassword"));
} }
function PasswordGeneratorHistoryComponent_div_32_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 9);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 10);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, PasswordGeneratorHistoryComponent_div_32_div_4_Template, 24, 10, "div", 11);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r0.history);
} }
function PasswordGeneratorHistoryComponent_div_34_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 20);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 1, "noPasswordsInList"));
} }
class generator_password_generator_history_component_PasswordGeneratorHistoryComponent extends password_generator_history_component_PasswordGeneratorHistoryComponent {
    constructor(passwordGenerationService, platformUtilsService, i18nService, location) {
        super(passwordGenerationService, platformUtilsService, i18nService, window);
        this.location = location;
    }
    close() {
        this.location.back();
    }
}
generator_password_generator_history_component_PasswordGeneratorHistoryComponent.ɵfac = function PasswordGeneratorHistoryComponent_Factory(t) { return new (t || generator_password_generator_history_component_PasswordGeneratorHistoryComponent)(core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */])); };
generator_password_generator_history_component_PasswordGeneratorHistoryComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: generator_password_generator_history_component_PasswordGeneratorHistoryComponent, selectors: [["app-password-generator-history"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 37, vars: 11, consts: [[1, "left"], ["type", "button", "appBlurClick", "", "type", "button", 3, "click"], ["aria-hidden", "true", 1, "header-icon"], [1, "fa", "fa-chevron-left"], [1, "center"], [1, "title"], [1, "right"], ["class", "box list full-list", 4, "ngIf"], ["class", "no-items", 4, "ngIf"], [1, "box", "list", "full-list"], [1, "box-content"], ["class", "box-content-row box-content-row-flex", 4, "ngFor", "ngForOf"], [1, "box-content-row", "box-content-row-flex"], [1, "row-main"], [1, "row-main-content"], ["appSelectCopy", "", 1, "monospaced", "password-wrapper", 3, "innerHTML"], [1, "detail"], [1, "action-buttons"], ["type", "button", "appStopClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-clone"], [1, "no-items"]], template: function PasswordGeneratorHistoryComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "button", 1);
        core["qc" /* ɵɵlistener */]("click", function PasswordGeneratorHistoryComponent_Template_button_click_4_listener() { return ctx.close(); });
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "span", 2);
        core["ec" /* ɵɵelement */](7, "i", 3);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span");
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 4);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "span", 5);
        core["Qc" /* ɵɵtext */](18);
        core["vc" /* ɵɵpipe */](19, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](20, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "div", 6);
        core["Qc" /* ɵɵtext */](23, " ");
        core["jc" /* ɵɵelementStart */](24, "button", 1);
        core["qc" /* ɵɵlistener */]("click", function PasswordGeneratorHistoryComponent_Template_button_click_24_listener() { return ctx.clear(); });
        core["Qc" /* ɵɵtext */](25);
        core["vc" /* ɵɵpipe */](26, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](27, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["jc" /* ɵɵelementStart */](30, "content");
        core["Qc" /* ɵɵtext */](31, " ");
        core["Oc" /* ɵɵtemplate */](32, PasswordGeneratorHistoryComponent_div_32_Template, 7, 1, "div", 7);
        core["Qc" /* ɵɵtext */](33, " ");
        core["Oc" /* ɵɵtemplate */](34, PasswordGeneratorHistoryComponent_div_34_Template, 6, 3, "div", 8);
        core["Qc" /* ɵɵtext */](35, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](36, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 5, "back"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 7, "passwordHistory"));
        core["Sb" /* ɵɵadvance */](7);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](26, 9, "clear"), " ");
        core["Sb" /* ɵɵadvance */](7);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.history && ctx.history.length);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.history || !ctx.history.length);
    } }, directives: [BlurClickDirective, common["l" /* NgIf */], common["k" /* NgForOf */], SelectCopyDirective, StopClickDirective, A11yTitleDirective], pipes: [I18nPipe, color_password_pipe_ColorPasswordPipe, common["e" /* DatePipe */]], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](generator_password_generator_history_component_PasswordGeneratorHistoryComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-password-generator-history',
                templateUrl: 'password-generator-history.component.html',
            }]
    }], function () { return [{ type: PasswordGenerationService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: common["h" /* Location */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/password-generator.component.ts
var password_generator_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};








class password_generator_component_PasswordGeneratorComponent {
    constructor(passwordGenerationService, platformUtilsService, i18nService, win) {
        this.passwordGenerationService = passwordGenerationService;
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.win = win;
        this.showSelect = false;
        this.onSelected = new core["t" /* EventEmitter */]();
        this.options = {};
        this.password = '-';
        this.showOptions = false;
        this.avoidAmbiguous = false;
        this.passTypeOptions = [
            { name: i18nService.t('password'), value: 'password' },
            { name: i18nService.t('passphrase'), value: 'passphrase' },
        ];
    }
    ngOnInit() {
        return password_generator_component_awaiter(this, void 0, void 0, function* () {
            const optionsResponse = yield this.passwordGenerationService.getOptions();
            this.options = optionsResponse[0];
            this.enforcedPolicyOptions = optionsResponse[1];
            this.avoidAmbiguous = !this.options.ambiguous;
            this.options.type = this.options.type === 'passphrase' ? 'passphrase' : 'password';
            this.password = yield this.passwordGenerationService.generatePassword(this.options);
            yield this.passwordGenerationService.addHistory(this.password);
        });
    }
    sliderChanged() {
        return password_generator_component_awaiter(this, void 0, void 0, function* () {
            this.saveOptions(false);
            yield this.passwordGenerationService.addHistory(this.password);
        });
    }
    sliderInput() {
        return password_generator_component_awaiter(this, void 0, void 0, function* () {
            this.normalizeOptions();
            this.password = yield this.passwordGenerationService.generatePassword(this.options);
        });
    }
    saveOptions(regenerate = true) {
        return password_generator_component_awaiter(this, void 0, void 0, function* () {
            this.normalizeOptions();
            yield this.passwordGenerationService.saveOptions(this.options);
            if (regenerate) {
                yield this.regenerate();
            }
        });
    }
    regenerate() {
        return password_generator_component_awaiter(this, void 0, void 0, function* () {
            this.password = yield this.passwordGenerationService.generatePassword(this.options);
            yield this.passwordGenerationService.addHistory(this.password);
        });
    }
    copy() {
        const copyOptions = this.win != null ? { window: this.win } : null;
        this.platformUtilsService.copyToClipboard(this.password, copyOptions);
        this.platformUtilsService.showToast('info', null, this.i18nService.t('valueCopied', this.i18nService.t('password')));
    }
    select() {
        this.onSelected.emit(this.password);
    }
    toggleOptions() {
        this.showOptions = !this.showOptions;
    }
    normalizeOptions() {
        // Application level normalize options depedent on class variables
        this.options.ambiguous = !this.avoidAmbiguous;
        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {
            this.options.lowercase = true;
            if (this.win != null) {
                const lowercase = this.win.document.querySelector('#lowercase');
                if (lowercase) {
                    lowercase.checked = true;
                }
            }
        }
        this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);
    }
}
password_generator_component_PasswordGeneratorComponent.ɵfac = function PasswordGeneratorComponent_Factory(t) { return new (t || password_generator_component_PasswordGeneratorComponent)(core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](Window)); };
password_generator_component_PasswordGeneratorComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: password_generator_component_PasswordGeneratorComponent, inputs: { showSelect: "showSelect" }, outputs: { onSelected: "onSelected" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](password_generator_component_PasswordGeneratorComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: PasswordGenerationService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: Window }]; }, { showSelect: [{
            type: core["D" /* Input */]
        }], onSelected: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/components/pop-out.component.ts








class PopOutComponent {
    constructor(platformUtilsService, popupUtilsService) {
        this.platformUtilsService = platformUtilsService;
        this.popupUtilsService = popupUtilsService;
        this.show = true;
    }
    ngOnInit() {
        if (this.show) {
            if (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) {
                this.show = false;
            }
        }
    }
    expand() {
        this.popupUtilsService.popOut(window);
    }
}
PopOutComponent.ɵfac = function PopOutComponent_Factory(t) { return new (t || PopOutComponent)(core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */])); };
PopOutComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: PopOutComponent, selectors: [["app-pop-out"]], inputs: { show: "show" }, decls: 9, vars: 3, consts: [["type", "button", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-external-link", "fa-rotate-270", "fa-lg", "fa-fw"]], template: function PopOutComponent_Template(rf, ctx) { if (rf & 1) {
        core["hc" /* ɵɵelementContainerStart */](0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "button", 0);
        core["qc" /* ɵɵlistener */]("click", function PopOutComponent_Template_button_click_2_listener() { return ctx.expand(); });
        core["vc" /* ɵɵpipe */](3, "i18n");
        core["Qc" /* ɵɵtext */](4, " ");
        core["ec" /* ɵɵelement */](5, "i", 1);
        core["Qc" /* ɵɵtext */](6, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](7, " ");
        core["gc" /* ɵɵelementContainerEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](2);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 1, "popOutNewWindow"));
    } }, directives: [A11yTitleDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](PopOutComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-pop-out',
                templateUrl: 'pop-out.component.html',
            }]
    }], function () { return [{ type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: popup_utils_service["a" /* PopupUtilsService */] }]; }, { show: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/generator/password-generator.component.ts
var generator_password_generator_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};























function PasswordGeneratorComponent_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r7 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 23);
    core["qc" /* ɵɵlistener */]("click", function PasswordGeneratorComponent_button_6_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r6 = core["uc" /* ɵɵnextContext */](); return ctx_r6.close(); });
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "cancel"));
} }
function PasswordGeneratorComponent_button_18_Template(rf, ctx) { if (rf & 1) {
    const _r9 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 23);
    core["qc" /* ɵɵlistener */]("click", function PasswordGeneratorComponent_button_18_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r9); const ctx_r8 = core["uc" /* ɵɵnextContext */](); return ctx_r8.select(); });
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "select"));
} }
function PasswordGeneratorComponent_app_callout_24_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 24);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "passwordGeneratorPolicyInEffect"), " ");
} }
function PasswordGeneratorComponent_div_75_Template(rf, ctx) { if (rf & 1) {
    const _r12 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 25);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "input", 26);
    core["qc" /* ɵɵlistener */]("ngModelChange", function PasswordGeneratorComponent_div_75_Template_input_ngModelChange_2_listener($event) { core["Jc" /* ɵɵrestoreView */](_r12); const ctx_r11 = core["uc" /* ɵɵnextContext */](); return ctx_r11.options.type = $event; })("change", function PasswordGeneratorComponent_div_75_Template_input_change_2_listener() { core["Jc" /* ɵɵrestoreView */](_r12); const ctx_r13 = core["uc" /* ɵɵnextContext */](); return ctx_r13.saveOptions(); });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 27);
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r10 = ctx.$implicit;
    const ctx_r3 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Type_", o_r10.value, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "type_", o_r10.value, "");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r3.options.type)("value", o_r10.value)("checked", ctx_r3.options.type === o_r10.value);
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "type_", o_r10.value, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", o_r10.name, " ");
} }
function PasswordGeneratorComponent_div_80_Template(rf, ctx) { if (rf & 1) {
    const _r15 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 17);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 28);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "label", 29);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "input", 30);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_div_80_Template_input_change_10_listener() { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r14 = core["uc" /* ɵɵnextContext */](); return ctx_r14.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_div_80_Template_input_ngModelChange_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r16 = core["uc" /* ɵɵnextContext */](); return ctx_r16.options.numWords = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "div", 28);
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "label", 31);
    core["Qc" /* ɵɵtext */](16);
    core["vc" /* ɵɵpipe */](17, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "input", 32);
    core["qc" /* ɵɵlistener */]("input", function PasswordGeneratorComponent_div_80_Template_input_input_19_listener() { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r17 = core["uc" /* ɵɵnextContext */](); return ctx_r17.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_div_80_Template_input_ngModelChange_19_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r18 = core["uc" /* ɵɵnextContext */](); return ctx_r18.options.wordSeparator = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "div", 33);
    core["Qc" /* ɵɵtext */](23, " ");
    core["jc" /* ɵɵelementStart */](24, "label", 34);
    core["Qc" /* ɵɵtext */](25);
    core["vc" /* ɵɵpipe */](26, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](27, " ");
    core["jc" /* ɵɵelementStart */](28, "input", 35);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_div_80_Template_input_change_28_listener() { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r19 = core["uc" /* ɵɵnextContext */](); return ctx_r19.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_div_80_Template_input_ngModelChange_28_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r20 = core["uc" /* ɵɵnextContext */](); return ctx_r20.options.capitalize = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["jc" /* ɵɵelementStart */](31, "div", 33);
    core["Qc" /* ɵɵtext */](32, " ");
    core["jc" /* ɵɵelementStart */](33, "label", 36);
    core["Qc" /* ɵɵtext */](34);
    core["vc" /* ɵɵpipe */](35, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](36, " ");
    core["jc" /* ɵɵelementStart */](37, "input", 37);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_div_80_Template_input_change_37_listener() { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r21 = core["uc" /* ɵɵnextContext */](); return ctx_r21.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_div_80_Template_input_ngModelChange_37_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r22 = core["uc" /* ɵɵnextContext */](); return ctx_r22.options.includeNumber = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](38, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](39, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](40, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 10, "numWords"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.options.numWords);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](17, 12, "wordSeparator"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.options.wordSeparator);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](26, 14, "capitalize"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.options.capitalize)("disabled", ctx_r4.enforcedPolicyOptions == null ? null : ctx_r4.enforcedPolicyOptions.capitalize);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](35, 16, "includeNumber"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.options.includeNumber)("disabled", ctx_r4.enforcedPolicyOptions == null ? null : ctx_r4.enforcedPolicyOptions.includeNumber);
} }
function PasswordGeneratorComponent_ng_container_82_Template(rf, ctx) { if (rf & 1) {
    const _r24 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 15);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 17);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 38);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "label", 39);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "input", 40);
    core["qc" /* ɵɵlistener */]("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_12_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r23 = core["uc" /* ɵɵnextContext */](); return ctx_r23.options.length = $event; })("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_12_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r25 = core["uc" /* ɵɵnextContext */](); return ctx_r25.saveOptions(); });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "input", 41);
    core["qc" /* ɵɵlistener */]("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_14_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r26 = core["uc" /* ɵɵnextContext */](); return ctx_r26.options.length = $event; })("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_14_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r27 = core["uc" /* ɵɵnextContext */](); return ctx_r27.sliderChanged(); })("input", function PasswordGeneratorComponent_ng_container_82_Template_input_input_14_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r28 = core["uc" /* ɵɵnextContext */](); return ctx_r28.sliderInput(); });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "div", 33);
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "label", 42);
    core["Qc" /* ɵɵtext */](20, "A-Z");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "input", 43);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_22_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r29 = core["uc" /* ɵɵnextContext */](); return ctx_r29.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_22_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r30 = core["uc" /* ɵɵnextContext */](); return ctx_r30.options.uppercase = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](24, " ");
    core["jc" /* ɵɵelementStart */](25, "div", 33);
    core["Qc" /* ɵɵtext */](26, " ");
    core["jc" /* ɵɵelementStart */](27, "label", 44);
    core["Qc" /* ɵɵtext */](28, "a-z");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["jc" /* ɵɵelementStart */](30, "input", 45);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_30_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r31 = core["uc" /* ɵɵnextContext */](); return ctx_r31.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_30_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r32 = core["uc" /* ɵɵnextContext */](); return ctx_r32.options.lowercase = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](31, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](32, " ");
    core["jc" /* ɵɵelementStart */](33, "div", 33);
    core["Qc" /* ɵɵtext */](34, " ");
    core["jc" /* ɵɵelementStart */](35, "label", 46);
    core["Qc" /* ɵɵtext */](36, "0-9");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](37, " ");
    core["jc" /* ɵɵelementStart */](38, "input", 47);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_38_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r33 = core["uc" /* ɵɵnextContext */](); return ctx_r33.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_38_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r34 = core["uc" /* ɵɵnextContext */](); return ctx_r34.options.number = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](39, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](40, " ");
    core["jc" /* ɵɵelementStart */](41, "div", 33);
    core["Qc" /* ɵɵtext */](42, " ");
    core["jc" /* ɵɵelementStart */](43, "label", 48);
    core["Qc" /* ɵɵtext */](44, "!@#$%^&*");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](45, " ");
    core["jc" /* ɵɵelementStart */](46, "input", 49);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_46_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r35 = core["uc" /* ɵɵnextContext */](); return ctx_r35.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_46_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r36 = core["uc" /* ɵɵnextContext */](); return ctx_r36.options.special = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](47, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](48, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](49, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](50, " ");
    core["jc" /* ɵɵelementStart */](51, "div", 15);
    core["Qc" /* ɵɵtext */](52, " ");
    core["jc" /* ɵɵelementStart */](53, "div", 17);
    core["Qc" /* ɵɵtext */](54, " ");
    core["jc" /* ɵɵelementStart */](55, "div", 28);
    core["Qc" /* ɵɵtext */](56, " ");
    core["jc" /* ɵɵelementStart */](57, "label", 50);
    core["Qc" /* ɵɵtext */](58);
    core["vc" /* ɵɵpipe */](59, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](60, " ");
    core["jc" /* ɵɵelementStart */](61, "input", 51);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_61_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r37 = core["uc" /* ɵɵnextContext */](); return ctx_r37.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_61_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r38 = core["uc" /* ɵɵnextContext */](); return ctx_r38.options.minNumber = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](62, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](63, " ");
    core["jc" /* ɵɵelementStart */](64, "div", 28);
    core["Qc" /* ɵɵtext */](65, " ");
    core["jc" /* ɵɵelementStart */](66, "label", 52);
    core["Qc" /* ɵɵtext */](67);
    core["vc" /* ɵɵpipe */](68, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](69, " ");
    core["jc" /* ɵɵelementStart */](70, "input", 53);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_70_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r39 = core["uc" /* ɵɵnextContext */](); return ctx_r39.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_70_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r40 = core["uc" /* ɵɵnextContext */](); return ctx_r40.options.minSpecial = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](71, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](72, " ");
    core["jc" /* ɵɵelementStart */](73, "div", 33);
    core["Qc" /* ɵɵtext */](74, " ");
    core["jc" /* ɵɵelementStart */](75, "label", 54);
    core["Qc" /* ɵɵtext */](76);
    core["vc" /* ɵɵpipe */](77, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](78, " ");
    core["jc" /* ɵɵelementStart */](79, "input", 55);
    core["qc" /* ɵɵlistener */]("change", function PasswordGeneratorComponent_ng_container_82_Template_input_change_79_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r41 = core["uc" /* ɵɵnextContext */](); return ctx_r41.saveOptions(); })("ngModelChange", function PasswordGeneratorComponent_ng_container_82_Template_input_ngModelChange_79_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r42 = core["uc" /* ɵɵnextContext */](); return ctx_r42.avoidAmbiguous = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](80, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](81, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](82, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](83, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 17, "length"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.options.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.options.length);
    core["Sb" /* ɵɵadvance */](8);
    core["Bc" /* ɵɵproperty */]("disabled", ctx_r5.enforcedPolicyOptions.useUppercase)("ngModel", ctx_r5.options.uppercase);
    core["Sb" /* ɵɵadvance */](8);
    core["Bc" /* ɵɵproperty */]("disabled", ctx_r5.enforcedPolicyOptions.useLowercase)("ngModel", ctx_r5.options.lowercase);
    core["Sb" /* ɵɵadvance */](8);
    core["Bc" /* ɵɵproperty */]("disabled", ctx_r5.enforcedPolicyOptions.useNumbers)("ngModel", ctx_r5.options.number);
    core["Sb" /* ɵɵadvance */](8);
    core["Bc" /* ɵɵproperty */]("disabled", ctx_r5.enforcedPolicyOptions.useSpecial)("ngModel", ctx_r5.options.special);
    core["Sb" /* ɵɵadvance */](12);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](59, 19, "minNumbers"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.options.minNumber);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](68, 21, "minSpecial"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.options.minSpecial);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](77, 23, "avoidAmbChar"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.avoidAmbiguous);
} }
class generator_password_generator_component_PasswordGeneratorComponent extends password_generator_component_PasswordGeneratorComponent {
    constructor(passwordGenerationService, platformUtilsService, i18nService, stateService, location) {
        super(passwordGenerationService, platformUtilsService, i18nService, window);
        this.stateService = stateService;
        this.location = location;
    }
    ngOnInit() {
        const _super = Object.create(null, {
            ngOnInit: { get: () => super.ngOnInit }
        });
        return generator_password_generator_component_awaiter(this, void 0, void 0, function* () {
            yield _super.ngOnInit.call(this);
            const addEditCipherInfo = yield this.stateService.get('addEditCipherInfo');
            if (addEditCipherInfo != null) {
                this.cipherState = addEditCipherInfo.cipher;
            }
            this.showSelect = this.cipherState != null;
        });
    }
    select() {
        super.select();
        this.cipherState.login.password = this.password;
        this.close();
    }
    close() {
        this.location.back();
    }
}
generator_password_generator_component_PasswordGeneratorComponent.ɵfac = function PasswordGeneratorComponent_Factory(t) { return new (t || generator_password_generator_component_PasswordGeneratorComponent)(core["dc" /* ɵɵdirectiveInject */](PasswordGenerationService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */])); };
generator_password_generator_component_PasswordGeneratorComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: generator_password_generator_component_PasswordGeneratorComponent, selectors: [["app-password-generator"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 85, vars: 28, consts: [[1, "left"], [3, "show"], ["type", "button", "appBlurClick", "", 3, "click", 4, "ngIf"], [1, "center"], [1, "title"], [1, "right"], ["type", "info", 4, "ngIf"], [1, "password-block"], ["appSelectCopy", "", 1, "password-wrapper", 3, "innerHTML"], [1, "box", "list"], [1, "box-content", "single-line"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", "text-primary", 3, "click"], ["routerLink", "/generator-history", 1, "box-content-row", "box-content-row-flex"], [1, "row-main"], ["aria-hidden", "true", 1, "fa", "fa-chevron-right", "fa-lg", "row-sub-icon"], [1, "box"], [1, "box-header"], [1, "box-content"], [1, "box-content-row"], [1, "sr-only", "radio-header"], ["class", "radio-group text-default", "appBoxRow", "", 4, "ngFor", "ngForOf"], ["class", "box", 4, "ngIf"], [4, "ngIf"], ["type", "button", "appBlurClick", "", 3, "click"], ["type", "info"], ["appBoxRow", "", 1, "radio-group", "text-default"], ["type", "radio", 3, "ngModel", "name", "id", "value", "checked", "ngModelChange", "change"], [3, "for"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-input"], ["for", "num-words"], ["id", "num-words", "type", "number", "min", "3", "max", "20", 3, "ngModel", "change", "ngModelChange"], ["for", "word-separator"], ["id", "word-separator", "type", "text", "maxlength", "1", 3, "ngModel", "input", "ngModelChange"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox"], ["for", "capitalize"], ["id", "capitalize", "type", "checkbox", 3, "ngModel", "disabled", "change", "ngModelChange"], ["for", "include-number"], ["id", "include-number", "type", "checkbox", 3, "ngModel", "disabled", "change", "ngModelChange"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-slider"], ["for", "length"], ["id", "length", "type", "number", "min", "5", "max", "128", 3, "ngModel", "ngModelChange", "change"], ["id", "lengthRange", "type", "range", "min", "5", "max", "128", "step", "1", 3, "ngModel", "ngModelChange", "change", "input"], ["for", "uppercase"], ["id", "uppercase", "type", "checkbox", 3, "disabled", "ngModel", "change", "ngModelChange"], ["for", "lowercase"], ["id", "lowercase", "type", "checkbox", 3, "disabled", "ngModel", "change", "ngModelChange"], ["for", "numbers"], ["id", "numbers", "type", "checkbox", 3, "disabled", "ngModel", "change", "ngModelChange"], ["for", "special"], ["id", "special", "type", "checkbox", 3, "disabled", "ngModel", "change", "ngModelChange"], ["for", "min-number"], ["id", "min-number", "type", "number", "min", "0", "max", "9", 3, "ngModel", "change", "ngModelChange"], ["for", "min-special"], ["id", "min-special", "type", "number", "min", "0", "max", "9", 3, "ngModel", "change", "ngModelChange"], ["for", "ambiguous"], ["id", "ambiguous", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"]], template: function PasswordGeneratorComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["ec" /* ɵɵelement */](4, "app-pop-out", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["Oc" /* ɵɵtemplate */](6, PasswordGeneratorComponent_button_6_Template, 3, 3, "button", 2);
        core["Qc" /* ɵɵtext */](7, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "div", 3);
        core["Qc" /* ɵɵtext */](10, " ");
        core["jc" /* ɵɵelementStart */](11, "span", 4);
        core["Qc" /* ɵɵtext */](12);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](15, " ");
        core["jc" /* ɵɵelementStart */](16, "div", 5);
        core["Qc" /* ɵɵtext */](17, " ");
        core["Oc" /* ɵɵtemplate */](18, PasswordGeneratorComponent_button_18_Template, 3, 3, "button", 2);
        core["Qc" /* ɵɵtext */](19, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](20, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "content");
        core["Qc" /* ɵɵtext */](23, " ");
        core["Oc" /* ɵɵtemplate */](24, PasswordGeneratorComponent_app_callout_24_Template, 3, 3, "app-callout", 6);
        core["Qc" /* ɵɵtext */](25, " ");
        core["jc" /* ɵɵelementStart */](26, "div", 7);
        core["Qc" /* ɵɵtext */](27, " ");
        core["ec" /* ɵɵelement */](28, "div", 8);
        core["vc" /* ɵɵpipe */](29, "colorPassword");
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "div", 9);
        core["Qc" /* ɵɵtext */](33, " ");
        core["jc" /* ɵɵelementStart */](34, "div", 10);
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "button", 11);
        core["qc" /* ɵɵlistener */]("click", function PasswordGeneratorComponent_Template_button_click_36_listener() { return ctx.regenerate(); });
        core["Qc" /* ɵɵtext */](37);
        core["vc" /* ɵɵpipe */](38, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](39, " ");
        core["jc" /* ɵɵelementStart */](40, "button", 11);
        core["qc" /* ɵɵlistener */]("click", function PasswordGeneratorComponent_Template_button_click_40_listener() { return ctx.copy(); });
        core["Qc" /* ɵɵtext */](41);
        core["vc" /* ɵɵpipe */](42, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](43, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](44, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](45, " ");
        core["jc" /* ɵɵelementStart */](46, "div", 9);
        core["Qc" /* ɵɵtext */](47, " ");
        core["jc" /* ɵɵelementStart */](48, "div", 10);
        core["Qc" /* ɵɵtext */](49, " ");
        core["jc" /* ɵɵelementStart */](50, "a", 12);
        core["Qc" /* ɵɵtext */](51, " ");
        core["jc" /* ɵɵelementStart */](52, "div", 13);
        core["Qc" /* ɵɵtext */](53);
        core["vc" /* ɵɵpipe */](54, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](55, " ");
        core["ec" /* ɵɵelement */](56, "i", 14);
        core["Qc" /* ɵɵtext */](57, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](58, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](59, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](60, " ");
        core["jc" /* ɵɵelementStart */](61, "div", 15);
        core["Qc" /* ɵɵtext */](62, " ");
        core["jc" /* ɵɵelementStart */](63, "div", 16);
        core["Qc" /* ɵɵtext */](64);
        core["vc" /* ɵɵpipe */](65, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](66, " ");
        core["jc" /* ɵɵelementStart */](67, "div", 17);
        core["Qc" /* ɵɵtext */](68, " ");
        core["jc" /* ɵɵelementStart */](69, "div", 18);
        core["Qc" /* ɵɵtext */](70, " ");
        core["jc" /* ɵɵelementStart */](71, "label", 19);
        core["Qc" /* ɵɵtext */](72);
        core["vc" /* ɵɵpipe */](73, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](74, " ");
        core["Oc" /* ɵɵtemplate */](75, PasswordGeneratorComponent_div_75_Template, 7, 7, "div", 20);
        core["Qc" /* ɵɵtext */](76, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](77, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](78, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](79, " ");
        core["Oc" /* ɵɵtemplate */](80, PasswordGeneratorComponent_div_80_Template, 41, 18, "div", 21);
        core["Qc" /* ɵɵtext */](81, " ");
        core["Oc" /* ɵɵtemplate */](82, PasswordGeneratorComponent_ng_container_82_Template, 84, 25, "ng-container", 22);
        core["Qc" /* ɵɵtext */](83, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](84, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("show", !ctx.showSelect);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showSelect);
        core["Sb" /* ɵɵadvance */](6);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 14, "passGen"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showSelect);
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.enforcedPolicyOptions == null ? null : ctx.enforcedPolicyOptions.inEffect());
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("innerHTML", core["wc" /* ɵɵpipeBind1 */](29, 16, ctx.password), core["Kc" /* ɵɵsanitizeHtml */]);
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](38, 18, "regeneratePassword"));
        core["Sb" /* ɵɵadvance */](4);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](42, 20, "copyPassword"));
        core["Sb" /* ɵɵadvance */](12);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](54, 22, "passwordHistory"));
        core["Sb" /* ɵɵadvance */](11);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](65, 24, "options"), " ");
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](73, 26, "type"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngForOf", ctx.passTypeOptions);
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.options.type === "passphrase");
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.options.type === "password");
    } }, directives: [PopOutComponent, common["l" /* NgIf */], SelectCopyDirective, StopClickDirective, BlurClickDirective, fesm2015_router["g" /* RouterLinkWithHref */], common["k" /* NgForOf */], CalloutComponent, BoxRowDirective, fesm2015_forms["u" /* RadioControlValueAccessor */], fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], fesm2015_forms["t" /* NumberValueAccessor */], fesm2015_forms["l" /* MaxLengthValidator */], fesm2015_forms["a" /* CheckboxControlValueAccessor */], fesm2015_forms["v" /* RangeValueAccessor */]], pipes: [I18nPipe, color_password_pipe_ColorPasswordPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](generator_password_generator_component_PasswordGeneratorComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-password-generator',
                templateUrl: 'password-generator.component.html',
            }]
    }], function () { return [{ type: PasswordGenerationService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: StateService }, { type: common["h" /* Location */] }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/private-mode.component.ts



class private_mode_component_PrivateModeComponent {
    ngOnInit() {
        this.privateModeMessage = chrome.i18n.getMessage('privateModeMessage');
        this.learnMoreMessage = chrome.i18n.getMessage('learnMore');
    }
    learnMore() {
        browserApi["a" /* BrowserApi */].createNewTab('https://help.bitwarden.com/article/extension-wont-load-in-private-mode/');
    }
}
private_mode_component_PrivateModeComponent.ɵfac = function PrivateModeComponent_Factory(t) { return new (t || private_mode_component_PrivateModeComponent)(); };
private_mode_component_PrivateModeComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: private_mode_component_PrivateModeComponent, selectors: [["app-private-mode"]], decls: 12, vars: 2, consts: [[1, "content"], [1, "text-center"], ["type", "button", 1, "btn", "primary", "block", 3, "click"]], template: function PrivateModeComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "div", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "p", 1);
        core["Qc" /* ɵɵtext */](3);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "button", 2);
        core["qc" /* ɵɵlistener */]("click", function PrivateModeComponent_Template_button_click_5_listener() { return ctx.learnMore(); });
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "b");
        core["Qc" /* ɵɵtext */](8);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](9, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](3);
        core["Rc" /* ɵɵtextInterpolate */](ctx.privateModeMessage);
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](ctx.learnMoreMessage);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](private_mode_component_PrivateModeComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-private-mode',
                templateUrl: 'private-mode.component.html',
            }]
    }], null, null); })();

// CONCATENATED MODULE: ./src/popup/tabs.component.ts








function TabsComponent_li_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "li", 3);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "a", 12);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["ec" /* ɵɵelement */](5, "i", 13);
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 2, "currentTab"));
    core["Sb" /* ɵɵadvance */](4);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](7, 4, "tab"), " ");
} }
class TabsComponent {
    constructor(popupUtilsService) {
        this.popupUtilsService = popupUtilsService;
        this.showCurrentTab = true;
    }
    ngOnInit() {
        this.showCurrentTab = !this.popupUtilsService.inPopout(window);
    }
}
TabsComponent.ɵfac = function TabsComponent_Factory(t) { return new (t || TabsComponent)(core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */])); };
TabsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: TabsComponent, selectors: [["app-tabs"]], decls: 53, vars: 25, consts: [[1, "tab-page"], [1, "tabs"], ["routerLinkActive", "active", 4, "ngIf"], ["routerLinkActive", "active"], ["routerLink", "vault", 3, "appA11yTitle"], ["aria-hidden", "true", 1, "fa", "fa-lock", "fa-2x"], ["routerLink", "send", 3, "appA11yTitle"], ["aria-hidden", "true", 1, "fa", "fa-paper-plane", "fa-2x"], ["routerLink", "generator", 3, "appA11yTitle"], ["aria-hidden", "true", 1, "fa", "fa-refresh", "fa-2x"], ["routerLink", "settings", 3, "appA11yTitle"], ["aria-hidden", "true", 1, "fa", "fa-cogs", "fa-2x"], ["routerLink", "current", 3, "appA11yTitle"], ["aria-hidden", "true", 1, "fa", "fa-folder", "fa-2x"]], template: function TabsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "div", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["ec" /* ɵɵelement */](2, "router-outlet");
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "nav", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "ul");
        core["Qc" /* ɵɵtext */](7, " ");
        core["Oc" /* ɵɵtemplate */](8, TabsComponent_li_8_Template, 9, 6, "li", 2);
        core["Qc" /* ɵɵtext */](9, " ");
        core["jc" /* ɵɵelementStart */](10, "li", 3);
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "a", 4);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["Qc" /* ɵɵtext */](14, " ");
        core["ec" /* ɵɵelement */](15, "i", 5);
        core["Qc" /* ɵɵtext */](16);
        core["vc" /* ɵɵpipe */](17, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](19, " ");
        core["jc" /* ɵɵelementStart */](20, "li", 3);
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "a", 6);
        core["vc" /* ɵɵpipe */](23, "i18n");
        core["Qc" /* ɵɵtext */](24, " ");
        core["ec" /* ɵɵelement */](25, "i", 7);
        core["Qc" /* ɵɵtext */](26);
        core["vc" /* ɵɵpipe */](27, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["jc" /* ɵɵelementStart */](30, "li", 3);
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "a", 8);
        core["vc" /* ɵɵpipe */](33, "i18n");
        core["Qc" /* ɵɵtext */](34, " ");
        core["ec" /* ɵɵelement */](35, "i", 9);
        core["Qc" /* ɵɵtext */](36);
        core["vc" /* ɵɵpipe */](37, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](38, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](39, " ");
        core["jc" /* ɵɵelementStart */](40, "li", 3);
        core["Qc" /* ɵɵtext */](41, " ");
        core["jc" /* ɵɵelementStart */](42, "a", 10);
        core["vc" /* ɵɵpipe */](43, "i18n");
        core["Qc" /* ɵɵtext */](44, " ");
        core["ec" /* ɵɵelement */](45, "i", 11);
        core["Qc" /* ɵɵtext */](46);
        core["vc" /* ɵɵpipe */](47, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](48, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](49, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](50, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](51, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](52, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](8);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showCurrentTab);
        core["Sb" /* ɵɵadvance */](4);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](13, 9, "myVault"));
        core["Sb" /* ɵɵadvance */](4);
        core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](17, 11, "myVault"), " ");
        core["Sb" /* ɵɵadvance */](6);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](23, 13, "send"));
        core["Sb" /* ɵɵadvance */](4);
        core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](27, 15, "send"), " ");
        core["Sb" /* ɵɵadvance */](6);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](33, 17, "passGen"));
        core["Sb" /* ɵɵadvance */](4);
        core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](37, 19, "generator"), " ");
        core["Sb" /* ɵɵadvance */](6);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](43, 21, "settings"));
        core["Sb" /* ɵɵadvance */](4);
        core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](47, 23, "settings"), " ");
    } }, directives: [fesm2015_router["i" /* RouterOutlet */], common["l" /* NgIf */], fesm2015_router["f" /* RouterLinkActive */], fesm2015_router["g" /* RouterLinkWithHref */], A11yTitleDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](TabsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-tabs',
                templateUrl: 'tabs.component.html',
            }]
    }], function () { return [{ type: popup_utils_service["a" /* PopupUtilsService */] }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/settings/excluded-domains.component.ts
var excluded_domains_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};























function ExcludedDomainsComponent_ng_container_33_div_2_select_21_option_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 26);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const u_r8 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", u_r8);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](u_r8);
} }
function ExcludedDomainsComponent_ng_container_33_div_2_select_21_Template(rf, ctx) { if (rf & 1) {
    const _r11 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "select", 25);
    core["qc" /* ɵɵlistener */]("ngModelChange", function ExcludedDomainsComponent_ng_container_33_div_2_select_21_Template_select_ngModelChange_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r11); const domain_r3 = core["uc" /* ɵɵnextContext */]().$implicit; return domain_r3.uri = $event; });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "option", 26);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, ExcludedDomainsComponent_ng_container_33_div_2_select_21_option_6_Template, 2, 2, "option", 27);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r12 = core["uc" /* ɵɵnextContext */]();
    const i_r4 = ctx_r12.index;
    const domain_r3 = ctx_r12.$implicit;
    const ctx_r5 = core["uc" /* ɵɵnextContext */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "currentUris", i_r4, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "currentUris", i_r4, "");
    core["Bc" /* ɵɵproperty */]("ngModel", domain_r3.uri)("hidden", !domain_r3.showCurrentUris);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngValue", null);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */]("-- ", core["wc" /* ɵɵpipeBind1 */](4, 7, "select"), " --");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r5.currentUris);
} }
function ExcludedDomainsComponent_ng_container_33_div_2_button_26_Template(rf, ctx) { if (rf & 1) {
    const _r15 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 28);
    core["qc" /* ɵɵlistener */]("click", function ExcludedDomainsComponent_ng_container_33_div_2_button_26_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r15); const domain_r3 = core["uc" /* ɵɵnextContext */]().$implicit; const ctx_r13 = core["uc" /* ɵɵnextContext */](2); return ctx_r13.toggleUriInput(domain_r3); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 29);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 1, "toggleCurrentUris"));
} }
function ExcludedDomainsComponent_ng_container_33_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r17 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "button", 16);
    core["qc" /* ɵɵlistener */]("click", function ExcludedDomainsComponent_ng_container_33_div_2_Template_button_click_2_listener() { core["Jc" /* ɵɵrestoreView */](_r17); const i_r4 = ctx.index; const ctx_r16 = core["uc" /* ɵɵnextContext */](2); return ctx_r16.removeUri(i_r4); });
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["ec" /* ɵɵelement */](5, "i", 17);
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 18);
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "label", 19);
    core["Qc" /* ɵɵtext */](11);
    core["vc" /* ɵɵpipe */](12, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "input", 20);
    core["qc" /* ɵɵlistener */]("ngModelChange", function ExcludedDomainsComponent_ng_container_33_div_2_Template_input_ngModelChange_14_listener($event) { const domain_r3 = ctx.$implicit; return domain_r3.uri = $event; });
    core["vc" /* ɵɵpipe */](15, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "label", 21);
    core["Qc" /* ɵɵtext */](18);
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["Oc" /* ɵɵtemplate */](21, ExcludedDomainsComponent_ng_container_33_div_2_select_21_Template, 8, 9, "select", 22);
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["jc" /* ɵɵelementStart */](24, "div", 23);
    core["Qc" /* ɵɵtext */](25, " ");
    core["Oc" /* ɵɵtemplate */](26, ExcludedDomainsComponent_ng_container_33_div_2_button_26_Template, 5, 3, "button", 24);
    core["Qc" /* ɵɵtext */](27, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const domain_r3 = ctx.$implicit;
    const i_r4 = ctx.index;
    const ctx_r2 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 12, "remove"));
    core["Sb" /* ɵɵadvance */](8);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "excludedDomain", i_r4, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["xc" /* ɵɵpipeBind2 */](12, 14, "uriPosition", i_r4 + 1));
    core["Sb" /* ɵɵadvance */](3);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "excludedDomain", i_r4, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "excludedDomain", i_r4, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("placeholder", "", core["wc" /* ɵɵpipeBind1 */](15, 17, "ex"), " https://google.com");
    core["Bc" /* ɵɵproperty */]("ngModel", domain_r3.uri);
    core["Sb" /* ɵɵadvance */](3);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "currentUris", i_r4, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Tc" /* ɵɵtextInterpolate2 */](" ", core["wc" /* ɵɵpipeBind1 */](19, 19, "currentUri"), " ", i_r4 + 1, " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.currentUris && ctx_r2.currentUris.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.currentUris && ctx_r2.currentUris.length);
} }
function ExcludedDomainsComponent_ng_container_33_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, ExcludedDomainsComponent_ng_container_33_div_2_Template, 29, 21, "div", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r1.excludedDomains)("ngForTrackBy", ctx_r1.trackByFunction);
} }
const excluded_domains_component_BroadcasterSubscriptionId = 'excludedDomains';
class excluded_domains_component_ExcludedDomainsComponent {
    constructor(storageService, i18nService, router, broadcasterService, ngZone, platformUtilsService) {
        this.storageService = storageService;
        this.i18nService = i18nService;
        this.router = router;
        this.broadcasterService = broadcasterService;
        this.ngZone = ngZone;
        this.platformUtilsService = platformUtilsService;
        this.excludedDomains = [];
    }
    ngOnInit() {
        return excluded_domains_component_awaiter(this, void 0, void 0, function* () {
            const savedDomains = yield this.storageService.get(constants_service["a" /* ConstantsService */].neverDomainsKey);
            if (savedDomains) {
                for (const uri of Object.keys(savedDomains)) {
                    this.excludedDomains.push({ uri: uri, showCurrentUris: false });
                }
            }
            yield this.loadCurrentUris();
            this.broadcasterService.subscribe(excluded_domains_component_BroadcasterSubscriptionId, (message) => {
                this.ngZone.run(() => excluded_domains_component_awaiter(this, void 0, void 0, function* () {
                    switch (message.command) {
                        case 'tabChanged':
                        case 'windowChanged':
                            if (this.loadCurrentUrisTimeout != null) {
                                window.clearTimeout(this.loadCurrentUrisTimeout);
                            }
                            this.loadCurrentUrisTimeout = window.setTimeout(() => excluded_domains_component_awaiter(this, void 0, void 0, function* () { return yield this.loadCurrentUris(); }), 500);
                            break;
                        default:
                            break;
                    }
                }));
            });
        });
    }
    ngOnDestroy() {
        this.broadcasterService.unsubscribe(excluded_domains_component_BroadcasterSubscriptionId);
    }
    addUri() {
        return excluded_domains_component_awaiter(this, void 0, void 0, function* () {
            this.excludedDomains.push({ uri: '', showCurrentUris: false });
        });
    }
    removeUri(i) {
        return excluded_domains_component_awaiter(this, void 0, void 0, function* () {
            this.excludedDomains.splice(i, 1);
        });
    }
    submit() {
        return excluded_domains_component_awaiter(this, void 0, void 0, function* () {
            const savedDomains = {};
            for (const domain of this.excludedDomains) {
                if (domain.uri && domain.uri !== '') {
                    const validDomain = utils["a" /* Utils */].getHostname(domain.uri);
                    if (!validDomain) {
                        this.platformUtilsService.showToast('error', null, this.i18nService.t('excludedDomainsInvalidDomain', domain.uri));
                        return;
                    }
                    savedDomains[validDomain] = null;
                }
            }
            yield this.storageService.save(constants_service["a" /* ConstantsService */].neverDomainsKey, savedDomains);
            this.router.navigate(['/tabs/settings']);
        });
    }
    trackByFunction(index, item) {
        return index;
    }
    toggleUriInput(domain) {
        domain.showCurrentUris = !domain.showCurrentUris;
    }
    loadCurrentUris() {
        return excluded_domains_component_awaiter(this, void 0, void 0, function* () {
            const tabs = yield browserApi["a" /* BrowserApi */].tabsQuery({ windowType: 'normal' });
            if (tabs) {
                const uriSet = new Set(tabs.map(tab => utils["a" /* Utils */].getHostname(tab.url)));
                uriSet.delete(null);
                this.currentUris = Array.from(uriSet);
            }
        });
    }
}
excluded_domains_component_ExcludedDomainsComponent.ɵfac = function ExcludedDomainsComponent_Factory(t) { return new (t || excluded_domains_component_ExcludedDomainsComponent)(core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */])); };
excluded_domains_component_ExcludedDomainsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: excluded_domains_component_ExcludedDomainsComponent, selectors: [["app-excluded-domains"]], decls: 48, vars: 16, consts: [[3, "ngSubmit"], ["form", ""], [1, "left"], ["routerLink", "/tabs/settings"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", ""], [1, "box"], [1, "box-content"], [4, "ngIf"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", "box-content-row-newmulti", 3, "click"], ["aria-hidden", "true", 1, "fa", "fa-plus-circle", "fa-fw", "fa-lg"], [1, "box-footer"], ["class", "box-content-row box-content-row-multi", "appBoxRow", "", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-multi"], ["type", "button", "appStopClick", "", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-minus-circle", "fa-lg"], [1, "row-main"], [3, "for"], ["type", "text", "inputmode", "url", "appInputVerbatim", "", 3, "id", "name", "ngModel", "placeholder", "ngModelChange"], [1, "sr-only", 3, "for"], [3, "id", "name", "ngModel", "hidden", "ngModelChange", 4, "ngIf"], [1, "action-buttons"], ["type", "button", "class", "row-btn", "appStopClick", "", "appBlurClick", "", 3, "appA11yTitle", "click", 4, "ngIf"], [3, "id", "name", "ngModel", "hidden", "ngModelChange"], [3, "ngValue"], [3, "ngValue", 4, "ngFor", "ngForOf"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-list"]], template: function ExcludedDomainsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function ExcludedDomainsComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "button", 7);
        core["Qc" /* ɵɵtext */](22);
        core["vc" /* ɵɵpipe */](23, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](25, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "content");
        core["Qc" /* ɵɵtext */](28, " ");
        core["jc" /* ɵɵelementStart */](29, "div", 8);
        core["Qc" /* ɵɵtext */](30, " ");
        core["jc" /* ɵɵelementStart */](31, "div", 9);
        core["Qc" /* ɵɵtext */](32, " ");
        core["Oc" /* ɵɵtemplate */](33, ExcludedDomainsComponent_ng_container_33_Template, 4, 2, "ng-container", 10);
        core["Qc" /* ɵɵtext */](34, " ");
        core["jc" /* ɵɵelementStart */](35, "button", 11);
        core["qc" /* ɵɵlistener */]("click", function ExcludedDomainsComponent_Template_button_click_35_listener() { return ctx.addUri(); });
        core["Qc" /* ɵɵtext */](36, " ");
        core["ec" /* ɵɵelement */](37, "i", 12);
        core["Qc" /* ɵɵtext */](38);
        core["vc" /* ɵɵpipe */](39, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](40, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](41, " ");
        core["jc" /* ɵɵelementStart */](42, "div", 13);
        core["Qc" /* ɵɵtext */](43);
        core["vc" /* ɵɵpipe */](44, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](45, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](46, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](47, " ");
        core["ic" /* ɵɵelementEnd */]();
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 6, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 8, "excludedDomains"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](23, 10, "save"));
        core["Sb" /* ɵɵadvance */](11);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.excludedDomains);
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](39, 12, "newUri"), " ");
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](44, 14, "excludedDomainsDesc"), " ");
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, common["l" /* NgIf */], StopClickDirective, common["k" /* NgForOf */], BoxRowDirective, A11yTitleDirective, fesm2015_forms["c" /* DefaultValueAccessor */], InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], fesm2015_forms["y" /* SelectControlValueAccessor */], fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](excluded_domains_component_ExcludedDomainsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-excluded-domains',
                templateUrl: 'excluded-domains.component.html',
            }]
    }], function () { return [{ type: StorageService }, { type: I18nService }, { type: fesm2015_router["e" /* Router */] }, { type: services_broadcaster_service_BroadcasterService }, { type: core["M" /* NgZone */] }, { type: platformUtils_service["a" /* PlatformUtilsService */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/event.service.ts
class EventService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/export.service.ts
class ExportService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/userVerification.service.ts
class UserVerificationService {
}

// EXTERNAL MODULE: ./jslib/common/src/enums/eventType.ts
var eventType = __webpack_require__(49);

// EXTERNAL MODULE: ./jslib/common/src/enums/policyType.ts
var policyType = __webpack_require__(56);

// CONCATENATED MODULE: ./jslib/angular/src/components/export.component.ts
var export_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






















class export_component_ExportComponent {
    constructor(cryptoService, i18nService, platformUtilsService, exportService, eventService, policyService, win, logService, userVerificationService, fb) {
        this.cryptoService = cryptoService;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.exportService = exportService;
        this.eventService = eventService;
        this.policyService = policyService;
        this.win = win;
        this.logService = logService;
        this.userVerificationService = userVerificationService;
        this.fb = fb;
        this.onSaved = new core["t" /* EventEmitter */]();
        this.disabledByPolicy = false;
        this.exportForm = this.fb.group({
            format: ['json'],
            secret: [''],
        });
        this.formatOptions = [
            { name: '.json', value: 'json' },
            { name: '.csv', value: 'csv' },
            { name: '.json (Encrypted)', value: 'encrypted_json' },
        ];
    }
    ngOnInit() {
        return export_component_awaiter(this, void 0, void 0, function* () {
            yield this.checkExportDisabled();
        });
    }
    checkExportDisabled() {
        return export_component_awaiter(this, void 0, void 0, function* () {
            this.disabledByPolicy = yield this.policyService.policyAppliesToUser(policyType["a" /* PolicyType */].DisablePersonalVaultExport);
            if (this.disabledByPolicy) {
                this.exportForm.disable();
            }
        });
    }
    get encryptedFormat() {
        return this.format === 'encrypted_json';
    }
    submit() {
        return export_component_awaiter(this, void 0, void 0, function* () {
            if (this.disabledByPolicy) {
                this.platformUtilsService.showToast('error', null, this.i18nService.t('personalVaultExportPolicyInEffect'));
                return;
            }
            const acceptedWarning = yield this.warningDialog();
            if (!acceptedWarning) {
                return;
            }
            const secret = this.exportForm.get('secret').value;
            try {
                yield this.userVerificationService.verifyUser(secret);
            }
            catch (e) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), e.message);
                return;
            }
            try {
                this.formPromise = this.getExportData();
                const data = yield this.formPromise;
                this.downloadFile(data);
                this.saved();
                yield this.collectEvent();
                this.exportForm.get('secret').setValue('');
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
    warningDialog() {
        return export_component_awaiter(this, void 0, void 0, function* () {
            if (this.encryptedFormat) {
                return yield this.platformUtilsService.showDialog('<p>' + this.i18nService.t('encExportKeyWarningDesc') +
                    '<p>' + this.i18nService.t('encExportAccountWarningDesc'), this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'), this.i18nService.t('cancel'), 'warning', true);
            }
            else {
                return yield this.platformUtilsService.showDialog(this.i18nService.t('exportWarningDesc'), this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'), this.i18nService.t('cancel'), 'warning');
            }
        });
    }
    saved() {
        this.onSaved.emit();
    }
    getExportData() {
        return this.exportService.getExport(this.format);
    }
    getFileName(prefix) {
        let extension = this.format;
        if (this.format === 'encrypted_json') {
            if (prefix == null) {
                prefix = 'encrypted';
            }
            else {
                prefix = 'encrypted_' + prefix;
            }
            extension = 'json';
        }
        return this.exportService.getFileName(prefix, extension);
    }
    collectEvent() {
        return export_component_awaiter(this, void 0, void 0, function* () {
            yield this.eventService.collect(eventType["a" /* EventType */].User_ClientExportedVault);
        });
    }
    get format() {
        return this.exportForm.get('format').value;
    }
    downloadFile(csv) {
        const fileName = this.getFileName();
        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);
    }
}
export_component_ExportComponent.ɵfac = function ExportComponent_Factory(t) { return new (t || export_component_ExportComponent)(core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ExportService), core["dc" /* ɵɵdirectiveInject */](EventService), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](Window), core["dc" /* ɵɵdirectiveInject */](LogService), core["dc" /* ɵɵdirectiveInject */](UserVerificationService), core["dc" /* ɵɵdirectiveInject */](fesm2015_forms["d" /* FormBuilder */])); };
export_component_ExportComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: export_component_ExportComponent, outputs: { onSaved: "onSaved" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](export_component_ExportComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: CryptoService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: ExportService }, { type: EventService }, { type: PolicyService }, { type: Window }, { type: LogService }, { type: UserVerificationService }, { type: fesm2015_forms["d" /* FormBuilder */] }]; }, { onSaved: [{
            type: core["O" /* Output */]
        }] }); })();

// EXTERNAL MODULE: ./node_modules/@angular/animations/__ivy_ngcc__/fesm2015/animations.js
var animations = __webpack_require__(5);

// EXTERNAL MODULE: ./jslib/common/src/enums/verificationType.ts
var verificationType = __webpack_require__(154);

// CONCATENATED MODULE: ./jslib/angular/src/components/verify-master-password.component.ts
var verify_master_password_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};









function VerifyMasterPasswordComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 1);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "input", 2);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "small", 3);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "masterPass"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("formControl", ctx_r0.secret);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 5, "confirmIdentity"));
} }
function VerifyMasterPasswordComponent_ng_container_2_span_12_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "span", 10);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 11);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Bc" /* ɵɵproperty */]("@sent", undefined);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 2, "codeSent"), " ");
} }
function VerifyMasterPasswordComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r4 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 4);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 5);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "button", 6);
    core["qc" /* ɵɵlistener */]("click", function VerifyMasterPasswordComponent_ng_container_2_Template_button_click_8_listener() { core["Jc" /* ɵɵrestoreView */](_r4); const ctx_r3 = core["uc" /* ɵɵnextContext */](); return ctx_r3.requestOTP(); });
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["Oc" /* ɵɵtemplate */](12, VerifyMasterPasswordComponent_ng_container_2_span_12_Template, 5, 4, "span", 7);
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 4);
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "label", 8);
    core["Qc" /* ɵɵtext */](18);
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ec" /* ɵɵelement */](21, "input", 9);
    core["Qc" /* ɵɵtext */](22, " ");
    core["jc" /* ɵɵelementStart */](23, "small", 3);
    core["Qc" /* ɵɵtext */](24);
    core["vc" /* ɵɵpipe */](25, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](26, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](27, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 7, "sendVerificationCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("disabled", ctx_r1.disableRequestOTP);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](10, 9, "sendCode"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.sentCode);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 11, "verificationCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("formControl", ctx_r1.secret);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](25, 13, "confirmIdentity"));
} }
class verify_master_password_component_VerifyMasterPasswordComponent {
    constructor(keyConnectorService, userVerificationService) {
        this.keyConnectorService = keyConnectorService;
        this.userVerificationService = userVerificationService;
        this.usesKeyConnector = false;
        this.disableRequestOTP = false;
        this.sentCode = false;
        this.secret = new fesm2015_forms["e" /* FormControl */]('');
    }
    ngOnInit() {
        return verify_master_password_component_awaiter(this, void 0, void 0, function* () {
            this.usesKeyConnector = yield this.keyConnectorService.getUsesKeyConnector();
            this.processChanges(this.secret.value);
            this.secret.valueChanges.subscribe(secret => this.processChanges(secret));
        });
    }
    requestOTP() {
        return verify_master_password_component_awaiter(this, void 0, void 0, function* () {
            if (this.usesKeyConnector) {
                this.disableRequestOTP = true;
                try {
                    yield this.userVerificationService.requestOTP();
                    this.sentCode = true;
                }
                finally {
                    this.disableRequestOTP = false;
                }
            }
        });
    }
    writeValue(obj) {
        this.secret.setValue(obj);
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        // Not implemented
    }
    setDisabledState(isDisabled) {
        this.disableRequestOTP = isDisabled;
        if (isDisabled) {
            this.secret.disable();
        }
        else {
            this.secret.enable();
        }
    }
    processChanges(secret) {
        if (this.onChange == null) {
            return;
        }
        this.onChange({
            type: this.usesKeyConnector ? verificationType["a" /* VerificationType */].OTP : verificationType["a" /* VerificationType */].MasterPassword,
            secret: secret,
        });
    }
}
verify_master_password_component_VerifyMasterPasswordComponent.ɵfac = function VerifyMasterPasswordComponent_Factory(t) { return new (t || verify_master_password_component_VerifyMasterPasswordComponent)(core["dc" /* ɵɵdirectiveInject */](KeyConnectorService), core["dc" /* ɵɵdirectiveInject */](UserVerificationService)); };
verify_master_password_component_VerifyMasterPasswordComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: verify_master_password_component_VerifyMasterPasswordComponent, selectors: [["app-verify-master-password"]], features: [core["Rb" /* ɵɵProvidersFeature */]([
            {
                provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                multi: true,
                useExisting: verify_master_password_component_VerifyMasterPasswordComponent,
            },
        ])], decls: 4, vars: 2, consts: [[4, "ngIf"], ["for", "masterPassword"], ["id", "masterPassword", "type", "password", "name", "MasterPasswordHash", "required", "", "appAutofocus", "", "appInputVerbatim", "", 1, "form-control", 3, "formControl"], [1, "form-text", "text-muted"], [1, "form-group"], [1, "d-block"], ["type", "button", 1, "btn", "btn-outline-secondary", 3, "disabled", "click"], ["class", "ml-2 text-success", "role", "alert", 4, "ngIf"], ["for", "verificationCode"], ["id", "verificationCode", "type", "input", "name", "verificationCode", "required", "", "appAutofocus", "", "appInputVerbatim", "", 1, "form-control", 3, "formControl"], ["role", "alert", 1, "ml-2", "text-success"], ["aria-hidden", "true", 1, "fa", "fa-check-circle-o"]], template: function VerifyMasterPasswordComponent_Template(rf, ctx) { if (rf & 1) {
        core["Oc" /* ɵɵtemplate */](0, VerifyMasterPasswordComponent_ng_container_0_Template, 12, 7, "ng-container", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["Oc" /* ɵɵtemplate */](2, VerifyMasterPasswordComponent_ng_container_2_Template, 28, 15, "ng-container", 0);
        core["Qc" /* ɵɵtext */](3, " ");
    } if (rf & 2) {
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.usesKeyConnector);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.usesKeyConnector);
    } }, encapsulation: 2, data: { animation: [
            Object(animations["l" /* trigger */])('sent', [
                Object(animations["k" /* transition */])(':enter', [
                    Object(animations["j" /* style */])({ opacity: 0 }),
                    Object(animations["e" /* animate */])('100ms', Object(animations["j" /* style */])({ opacity: 1 })),
                ]),
            ]),
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](verify_master_password_component_VerifyMasterPasswordComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-verify-master-password',
                templateUrl: 'verify-master-password.component.html',
                providers: [
                    {
                        provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                        multi: true,
                        useExisting: verify_master_password_component_VerifyMasterPasswordComponent,
                    },
                ],
                animations: [
                    Object(animations["l" /* trigger */])('sent', [
                        Object(animations["k" /* transition */])(':enter', [
                            Object(animations["j" /* style */])({ opacity: 0 }),
                            Object(animations["e" /* animate */])('100ms', Object(animations["j" /* style */])({ opacity: 1 })),
                        ]),
                    ]),
                ],
            }]
    }], function () { return [{ type: KeyConnectorService }, { type: UserVerificationService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/components/verify-master-password.component.ts











function verify_master_password_component_VerifyMasterPasswordComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 1);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 2);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ec" /* ɵɵelement */](8, "input", 3);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 2, "masterPass"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("formControl", ctx_r0.secret);
} }
function verify_master_password_component_VerifyMasterPasswordComponent_ng_container_2_span_12_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "span", 9);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 10);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Bc" /* ɵɵproperty */]("@sent", undefined);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 2, "codeSent"), " ");
} }
function verify_master_password_component_VerifyMasterPasswordComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r4 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 1);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 4);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "button", 5);
    core["qc" /* ɵɵlistener */]("click", function VerifyMasterPasswordComponent_ng_container_2_Template_button_click_8_listener() { core["Jc" /* ɵɵrestoreView */](_r4); const ctx_r3 = core["uc" /* ɵɵnextContext */](); return ctx_r3.requestOTP(); });
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["Oc" /* ɵɵtemplate */](12, verify_master_password_component_VerifyMasterPasswordComponent_ng_container_2_span_12_Template, 5, 4, "span", 6);
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 1);
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "label", 7);
    core["Qc" /* ɵɵtext */](18);
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ec" /* ɵɵelement */](21, "input", 8);
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 6, "sendVerificationCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("disabled", ctx_r1.disableRequestOTP);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](10, 8, "sendCode"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.sentCode);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 10, "verificationCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("formControl", ctx_r1.secret);
} }
class components_verify_master_password_component_VerifyMasterPasswordComponent extends verify_master_password_component_VerifyMasterPasswordComponent {
}
components_verify_master_password_component_VerifyMasterPasswordComponent.ɵfac = function VerifyMasterPasswordComponent_Factory(t) { return ɵVerifyMasterPasswordComponent_BaseFactory(t || components_verify_master_password_component_VerifyMasterPasswordComponent); };
components_verify_master_password_component_VerifyMasterPasswordComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: components_verify_master_password_component_VerifyMasterPasswordComponent, selectors: [["app-verify-master-password"]], features: [core["Rb" /* ɵɵProvidersFeature */]([
            {
                provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                multi: true,
                useExisting: components_verify_master_password_component_VerifyMasterPasswordComponent,
            },
        ]), core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 4, vars: 2, consts: [[4, "ngIf"], ["appBoxRow", "", 1, "box-content-row"], ["for", "masterPassword"], ["id", "masterPassword", "type", "password", "name", "MasterPasswordHash", "required", "", "appAutofocus", "", "appInputVerbatim", "", 1, "form-control", 3, "formControl"], [1, "d-block"], ["type", "button", 1, "btn", "btn-outline-secondary", 3, "disabled", "click"], ["class", "ml-2 text-success", "role", "alert", 4, "ngIf"], ["for", "verificationCode"], ["id", "verificationCode", "type", "input", "name", "verificationCode", "required", "", "appAutofocus", "", "appInputVerbatim", "", 1, "form-control", 3, "formControl"], ["role", "alert", 1, "ml-2", "text-success"], ["aria-hidden", "true", 1, "fa", "fa-check-circle-o"]], template: function VerifyMasterPasswordComponent_Template(rf, ctx) { if (rf & 1) {
        core["Oc" /* ɵɵtemplate */](0, verify_master_password_component_VerifyMasterPasswordComponent_ng_container_0_Template, 11, 4, "ng-container", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["Oc" /* ɵɵtemplate */](2, verify_master_password_component_VerifyMasterPasswordComponent_ng_container_2_Template, 24, 12, "ng-container", 0);
        core["Qc" /* ɵɵtext */](3, " ");
    } if (rf & 2) {
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.usesKeyConnector);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.usesKeyConnector);
    } }, directives: [common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], autofocus_directive_AutofocusDirective, InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["f" /* FormControlDirective */]], pipes: [I18nPipe], encapsulation: 2, data: { animation: [
            Object(animations["l" /* trigger */])('sent', [
                Object(animations["k" /* transition */])(':enter', [
                    Object(animations["j" /* style */])({ opacity: 0 }),
                    Object(animations["e" /* animate */])('100ms', Object(animations["j" /* style */])({ opacity: 1 })),
                ]),
            ]),
        ] } });
const ɵVerifyMasterPasswordComponent_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](components_verify_master_password_component_VerifyMasterPasswordComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](components_verify_master_password_component_VerifyMasterPasswordComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-verify-master-password',
                templateUrl: 'verify-master-password.component.html',
                providers: [
                    {
                        provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                        multi: true,
                        useExisting: components_verify_master_password_component_VerifyMasterPasswordComponent,
                    },
                ],
                animations: [
                    Object(animations["l" /* trigger */])('sent', [
                        Object(animations["k" /* transition */])(':enter', [
                            Object(animations["j" /* style */])({ opacity: 0 }),
                            Object(animations["e" /* animate */])('100ms', Object(animations["j" /* style */])({ opacity: 1 })),
                        ]),
                    ]),
                ],
            }]
    }], null, null); })();

// CONCATENATED MODULE: ./src/popup/settings/export.component.ts





























function ExportComponent_app_callout_34_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 18);
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "vaultExportDisabled"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](3, 4, "personalVaultExportPolicyInEffect"), " ");
} }
function ExportComponent_option_48_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 19);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const f_r2 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("value", f_r2.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](f_r2.name);
} }
class settings_export_component_ExportComponent extends export_component_ExportComponent {
    constructor(cryptoService, i18nService, platformUtilsService, exportService, eventService, policyService, router, logService, userVerificationService, fb) {
        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, policyService, window, logService, userVerificationService, fb);
        this.router = router;
    }
    saved() {
        super.saved();
        this.router.navigate(['/tabs/settings']);
    }
}
settings_export_component_ExportComponent.ɵfac = function ExportComponent_Factory(t) { return new (t || settings_export_component_ExportComponent)(core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ExportService), core["dc" /* ɵɵdirectiveInject */](EventService), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](LogService), core["dc" /* ɵɵdirectiveInject */](UserVerificationService), core["dc" /* ɵɵdirectiveInject */](fesm2015_forms["d" /* FormBuilder */])); };
settings_export_component_ExportComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: settings_export_component_ExportComponent, selectors: [["app-export"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 66, vars: 19, consts: [[3, "formGroup", "ngSubmit"], [1, "left"], ["routerLink", "/tabs/settings"], ["aria-hidden", "true", 1, "header-icon"], [1, "fa", "fa-chevron-left"], [1, "center"], [1, "title"], [1, "right"], ["appBlurClick", "", "type", "submit", 3, "disabled"], ["type", "warning", 3, "title", 4, "ngIf"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "format"], ["id", "format", "name", "Format", "formControlName", "format"], [3, "value", 4, "ngFor", "ngForOf"], ["ngDefaultControl", "", "formControlName", "secret", "name", "Secret"], [1, "box-footer"], ["type", "warning", 3, "title"], [3, "value"]], template: function ExportComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0);
        core["qc" /* ɵɵlistener */]("ngSubmit", function ExportComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "header");
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "div", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "a", 2);
        core["Qc" /* ɵɵtext */](7, " ");
        core["jc" /* ɵɵelementStart */](8, "span", 3);
        core["ec" /* ɵɵelement */](9, "i", 4);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["jc" /* ɵɵelementStart */](11, "span");
        core["Qc" /* ɵɵtext */](12);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](15, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "div", 5);
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "span", 6);
        core["Qc" /* ɵɵtext */](20);
        core["vc" /* ɵɵpipe */](21, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](22, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](23, " ");
        core["jc" /* ɵɵelementStart */](24, "div", 7);
        core["Qc" /* ɵɵtext */](25, " ");
        core["jc" /* ɵɵelementStart */](26, "button", 8);
        core["Qc" /* ɵɵtext */](27);
        core["vc" /* ɵɵpipe */](28, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["Oc" /* ɵɵtemplate */](34, ExportComponent_app_callout_34_Template, 4, 6, "app-callout", 9);
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "div", 10);
        core["Qc" /* ɵɵtext */](37, " ");
        core["jc" /* ɵɵelementStart */](38, "div", 11);
        core["Qc" /* ɵɵtext */](39, " ");
        core["jc" /* ɵɵelementStart */](40, "div", 12);
        core["Qc" /* ɵɵtext */](41, " ");
        core["jc" /* ɵɵelementStart */](42, "label", 13);
        core["Qc" /* ɵɵtext */](43);
        core["vc" /* ɵɵpipe */](44, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](45, " ");
        core["jc" /* ɵɵelementStart */](46, "select", 14);
        core["Qc" /* ɵɵtext */](47, " ");
        core["Oc" /* ɵɵtemplate */](48, ExportComponent_option_48_Template, 2, 2, "option", 15);
        core["Qc" /* ɵɵtext */](49, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](50, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](51, " ");
        core["jc" /* ɵɵelementStart */](52, "app-verify-master-password", 16);
        core["Qc" /* ɵɵtext */](53, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](54, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](55, " ");
        core["jc" /* ɵɵelementStart */](56, "div", 17);
        core["Qc" /* ɵɵtext */](57, " ");
        core["jc" /* ɵɵelementStart */](58, "p");
        core["Qc" /* ɵɵtext */](59);
        core["vc" /* ɵɵpipe */](60, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](61, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](62, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](63, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](64, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](65, " ");
    } if (rf & 2) {
        core["Bc" /* ɵɵproperty */]("formGroup", ctx.exportForm);
        core["Sb" /* ɵɵadvance */](12);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 9, "back"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](21, 11, "exportVault"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", !ctx.exportForm.enabled);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](28, 13, "submit"));
        core["Sb" /* ɵɵadvance */](7);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.disabledByPolicy);
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](44, 15, "fileFormat"));
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngForOf", ctx.formatOptions);
        core["Sb" /* ɵɵadvance */](11);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](60, 17, "confirmIdentity"));
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["i" /* FormGroupDirective */], fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["y" /* SelectControlValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["g" /* FormControlName */], common["k" /* NgForOf */], components_verify_master_password_component_VerifyMasterPasswordComponent, fesm2015_forms["c" /* DefaultValueAccessor */], CalloutComponent, fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](settings_export_component_ExportComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-export',
                templateUrl: 'export.component.html',
            }]
    }], function () { return [{ type: CryptoService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: ExportService }, { type: EventService }, { type: PolicyService }, { type: fesm2015_router["e" /* Router */] }, { type: LogService }, { type: UserVerificationService }, { type: fesm2015_forms["d" /* FormBuilder */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/folder.service.ts
class FolderService {
}

// EXTERNAL MODULE: ./jslib/common/src/models/view/folderView.ts
var folderView = __webpack_require__(117);

// CONCATENATED MODULE: ./jslib/angular/src/components/folder-add-edit.component.ts
var folder_add_edit_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};











class folder_add_edit_component_FolderAddEditComponent {
    constructor(folderService, i18nService, platformUtilsService, logService) {
        this.folderService = folderService;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.logService = logService;
        this.onSavedFolder = new core["t" /* EventEmitter */]();
        this.onDeletedFolder = new core["t" /* EventEmitter */]();
        this.editMode = false;
        this.folder = new folderView["a" /* FolderView */]();
    }
    ngOnInit() {
        return folder_add_edit_component_awaiter(this, void 0, void 0, function* () {
            yield this.init();
        });
    }
    submit() {
        return folder_add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (this.folder.name == null || this.folder.name === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('nameRequired'));
                return false;
            }
            try {
                const folder = yield this.folderService.encrypt(this.folder);
                this.formPromise = this.folderService.saveWithServer(folder);
                yield this.formPromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));
                this.onSavedFolder.emit(this.folder);
                return true;
            }
            catch (e) {
                this.logService.error(e);
            }
            return false;
        });
    }
    delete() {
        return folder_add_edit_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                this.deletePromise = this.folderService.deleteWithServer(this.folder.id);
                yield this.deletePromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedFolder'));
                this.onDeletedFolder.emit(this.folder);
            }
            catch (e) {
                this.logService.error(e);
            }
            return true;
        });
    }
    init() {
        return folder_add_edit_component_awaiter(this, void 0, void 0, function* () {
            this.editMode = this.folderId != null;
            if (this.editMode) {
                this.editMode = true;
                this.title = this.i18nService.t('editFolder');
                const folder = yield this.folderService.get(this.folderId);
                this.folder = yield folder.decrypt();
            }
            else {
                this.title = this.i18nService.t('addFolder');
            }
        });
    }
}
folder_add_edit_component_FolderAddEditComponent.ɵfac = function FolderAddEditComponent_Factory(t) { return new (t || folder_add_edit_component_FolderAddEditComponent)(core["dc" /* ɵɵdirectiveInject */](FolderService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
folder_add_edit_component_FolderAddEditComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: folder_add_edit_component_FolderAddEditComponent, inputs: { folderId: "folderId" }, outputs: { onSavedFolder: "onSavedFolder", onDeletedFolder: "onDeletedFolder" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](folder_add_edit_component_FolderAddEditComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: FolderService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: LogService }]; }, { folderId: [{
            type: core["D" /* Input */]
        }], onSavedFolder: [{
            type: core["O" /* Output */]
        }], onDeletedFolder: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/settings/folder-add-edit.component.ts
var settings_folder_add_edit_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






















function FolderAddEditComponent_content_31_div_17_Template(rf, ctx) { if (rf & 1) {
    const _r5 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 17);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 18);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "button", 19, 20);
    core["qc" /* ɵɵlistener */]("click", function FolderAddEditComponent_content_31_div_17_Template_button_click_4_listener() { core["Jc" /* ɵɵrestoreView */](_r5); const ctx_r4 = core["uc" /* ɵɵnextContext */](2); return ctx_r4.delete(); });
    core["Qc" /* ɵɵtext */](6, " ");
    core["jc" /* ɵɵelementStart */](7, "div", 21);
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 22);
    core["Qc" /* ɵɵtext */](10, " ");
    core["ec" /* ɵɵelement */](11, "i", 23);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ec" /* ɵɵelement */](13, "i", 24);
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "span");
    core["Qc" /* ɵɵtext */](17);
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const _r3 = core["Ic" /* ɵɵreference */](5);
    const ctx_r2 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("appApiAction", ctx_r2.deletePromise);
    core["Sb" /* ɵɵadvance */](7);
    core["Bc" /* ɵɵproperty */]("hidden", _r3.loading);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !_r3.loading);
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](18, 4, "deleteFolder"));
} }
function FolderAddEditComponent_content_31_Template(rf, ctx) { if (rf & 1) {
    const _r7 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "content");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 11);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 12);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 13);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "label", 14);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "input", 15);
    core["qc" /* ɵɵlistener */]("ngModelChange", function FolderAddEditComponent_content_31_Template_input_ngModelChange_12_listener($event) { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r6 = core["uc" /* ɵɵnextContext */](); return ctx_r6.folder.name = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["Oc" /* ɵɵtemplate */](17, FolderAddEditComponent_content_31_div_17_Template, 23, 6, "div", 16);
    core["Qc" /* ɵɵtext */](18, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 4, "name"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.folder.name)("appAutofocus", !ctx_r1.editMode);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.editMode);
} }
class settings_folder_add_edit_component_FolderAddEditComponent extends folder_add_edit_component_FolderAddEditComponent {
    constructor(folderService, i18nService, platformUtilsService, router, route, logService) {
        super(folderService, i18nService, platformUtilsService, logService);
        this.router = router;
        this.route = route;
    }
    ngOnInit() {
        return settings_folder_add_edit_component_awaiter(this, void 0, void 0, function* () {
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => settings_folder_add_edit_component_awaiter(this, void 0, void 0, function* () {
                if (params.folderId) {
                    this.folderId = params.folderId;
                }
                yield this.init();
            }));
        });
    }
    submit() {
        const _super = Object.create(null, {
            submit: { get: () => super.submit }
        });
        return settings_folder_add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (yield _super.submit.call(this)) {
                this.router.navigate(['/folders']);
                return true;
            }
            return false;
        });
    }
    delete() {
        const _super = Object.create(null, {
            delete: { get: () => super.delete }
        });
        return settings_folder_add_edit_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield _super.delete.call(this);
            if (confirmed) {
                this.router.navigate(['/folders']);
            }
            return confirmed;
        });
    }
}
settings_folder_add_edit_component_FolderAddEditComponent.ɵfac = function FolderAddEditComponent_Factory(t) { return new (t || settings_folder_add_edit_component_FolderAddEditComponent)(core["dc" /* ɵɵdirectiveInject */](FolderService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
settings_folder_add_edit_component_FolderAddEditComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: settings_folder_add_edit_component_FolderAddEditComponent, selectors: [["app-folder-add-edit"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 34, vars: 12, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["routerLink", "/folders"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [4, "ngIf"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "name"], ["id", "name", "type", "text", "name", "Name", 3, "ngModel", "appAutofocus", "ngModelChange"], ["class", "box list", 4, "ngIf"], [1, "box", "list"], [1, "box-content", "single-line"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", 3, "appApiAction", "click"], ["deleteBtn", ""], [1, "row-main", "text-danger"], ["aria-hidden", "true", 1, "icon", "text-danger"], [1, "fa", "fa-trash-o", "fa-lg", "fa-fw", 3, "hidden"], [1, "fa", "fa-spinner", "fa-spin", "fa-lg", "fa-fw", 3, "hidden"]], template: function FolderAddEditComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function FolderAddEditComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "a", 3);
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["jc" /* ɵɵelementStart */](18, "div", 6);
        core["Qc" /* ɵɵtext */](19, " ");
        core["jc" /* ɵɵelementStart */](20, "button", 7);
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "span", 8);
        core["Qc" /* ɵɵtext */](23);
        core["vc" /* ɵɵpipe */](24, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](25, " ");
        core["ec" /* ɵɵelement */](26, "i", 9);
        core["Qc" /* ɵɵtext */](27, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["Oc" /* ɵɵtemplate */](31, FolderAddEditComponent_content_31_Template, 19, 6, "content", 10);
        core["Qc" /* ɵɵtext */](32, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 8, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](ctx.title);
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](24, 10, "save"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.folder);
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], autofocus_directive_AutofocusDirective, StopClickDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](settings_folder_add_edit_component_FolderAddEditComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-folder-add-edit',
                templateUrl: 'folder-add-edit.component.html',
            }]
    }], function () { return [{ type: FolderService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: fesm2015_router["e" /* Router */] }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/settings/folders.component.ts
var folders_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};











function FoldersComponent_div_34_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 14);
    core["qc" /* ɵɵlistener */]("click", function FoldersComponent_div_34_button_4_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r5); const f_r3 = ctx.$implicit; const ctx_r4 = core["uc" /* ɵɵnextContext */](2); return ctx_r4.folderSelected(f_r3); });
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const f_r3 = ctx.$implicit;
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](f_r3.name);
} }
function FoldersComponent_div_34_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 12);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, FoldersComponent_div_34_button_4_Template, 2, 1, "button", 13);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r0.folders);
} }
function FoldersComponent_div_36_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 1, "noFolders"));
} }
class FoldersComponent {
    constructor(folderService, router) {
        this.folderService = folderService;
        this.router = router;
    }
    ngOnInit() {
        return folders_component_awaiter(this, void 0, void 0, function* () {
            this.folders = yield this.folderService.getAllDecrypted();
            // Remove "No Folder"
            if (this.folders.length > 0) {
                this.folders = this.folders.slice(0, this.folders.length - 1);
            }
        });
    }
    folderSelected(folder) {
        this.router.navigate(['/edit-folder'], { queryParams: { folderId: folder.id } });
    }
    addFolder() {
        this.router.navigate(['/add-folder']);
    }
}
FoldersComponent.ɵfac = function FoldersComponent_Factory(t) { return new (t || FoldersComponent)(core["dc" /* ɵɵdirectiveInject */](FolderService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */])); };
FoldersComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: FoldersComponent, selectors: [["app-folders"]], decls: 39, vars: 11, consts: [[1, "left"], ["routerLink", "/tabs/settings"], [1, "header-icon"], ["aria-hidden", "true", 1, "fa", "fa-chevron-left"], [1, "center"], [1, "title"], [1, "right"], ["type", "button", "appBlurClick", "", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-plus", "fa-lg", "fa-fw"], ["class", "box list full-list", 4, "ngIf"], ["class", "no-items", 4, "ngIf"], [1, "box", "list", "full-list"], [1, "box-content"], ["type", "button", "appStopClick", "", "class", "box-content-row padded", 3, "click", 4, "ngFor", "ngForOf"], ["type", "button", "appStopClick", "", 1, "box-content-row", "padded", 3, "click"], [1, "no-items"]], template: function FoldersComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "a", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "span", 2);
        core["ec" /* ɵɵelement */](7, "i", 3);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span");
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 4);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "span", 5);
        core["Qc" /* ɵɵtext */](18);
        core["vc" /* ɵɵpipe */](19, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](20, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "div", 6);
        core["Qc" /* ɵɵtext */](23, " ");
        core["jc" /* ɵɵelementStart */](24, "button", 7);
        core["qc" /* ɵɵlistener */]("click", function FoldersComponent_Template_button_click_24_listener() { return ctx.addFolder(); });
        core["vc" /* ɵɵpipe */](25, "i18n");
        core["Qc" /* ɵɵtext */](26, " ");
        core["ec" /* ɵɵelement */](27, "i", 8);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["Oc" /* ɵɵtemplate */](34, FoldersComponent_div_34_Template, 7, 1, "div", 9);
        core["Qc" /* ɵɵtext */](35, " ");
        core["Oc" /* ɵɵtemplate */](36, FoldersComponent_div_36_Template, 6, 3, "div", 10);
        core["Qc" /* ɵɵtext */](37, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](38, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 5, "back"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 7, "folders"));
        core["Sb" /* ɵɵadvance */](6);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](25, 9, "addFolder"));
        core["Sb" /* ɵɵadvance */](10);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.folders && ctx.folders.length);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.folders || !ctx.folders.length);
    } }, directives: [fesm2015_router["g" /* RouterLinkWithHref */], BlurClickDirective, A11yTitleDirective, common["l" /* NgIf */], common["k" /* NgForOf */], StopClickDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](FoldersComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-folders',
                templateUrl: 'folders.component.html',
            }]
    }], function () { return [{ type: FolderService }, { type: fesm2015_router["e" /* Router */] }]; }, null); })();

// EXTERNAL MODULE: ./jslib/common/src/enums/themeType.ts
var themeType = __webpack_require__(82);

// EXTERNAL MODULE: ./jslib/common/src/enums/uriMatchType.ts
var uriMatchType = __webpack_require__(33);

// CONCATENATED MODULE: ./jslib/common/src/abstractions/totp.service.ts
class TotpService {
}

// CONCATENATED MODULE: ./src/popup/settings/options.component.ts
var options_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




















function OptionsComponent_i_31_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 13);
} }
function OptionsComponent_i_33_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 14);
} }
function OptionsComponent_ng_container_37_option_14_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 31);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r11 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r11.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r11.name);
} }
function OptionsComponent_ng_container_37_div_24_option_12_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 31);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r13 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r13.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r13.name);
} }
function OptionsComponent_ng_container_37_div_24_Template(rf, ctx) { if (rf & 1) {
    const _r15 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 7);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 15);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 16);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "label", 32);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "select", 33);
    core["qc" /* ɵɵlistener */]("ngModelChange", function OptionsComponent_ng_container_37_div_24_Template_select_ngModelChange_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r14 = core["uc" /* ɵɵnextContext */](2); return ctx_r14.clearClipboard = $event; })("change", function OptionsComponent_ng_container_37_div_24_Template_select_change_10_listener() { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r16 = core["uc" /* ɵɵnextContext */](2); return ctx_r16.saveClearClipboard(); });
    core["Qc" /* ɵɵtext */](11, " ");
    core["Oc" /* ɵɵtemplate */](12, OptionsComponent_ng_container_37_div_24_option_12_Template, 2, 2, "option", 19);
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "div", 20);
    core["Qc" /* ɵɵtext */](18);
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r10 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 4, "clearClipboard"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r10.clearClipboard);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r10.clearClipboardOptions);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 6, "clearClipboardDesc"));
} }
function OptionsComponent_ng_container_37_Template(rf, ctx) { if (rf & 1) {
    const _r18 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 7);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 15);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 16);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "label", 17);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "select", 18);
    core["qc" /* ɵɵlistener */]("ngModelChange", function OptionsComponent_ng_container_37_Template_select_ngModelChange_12_listener($event) { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r17 = core["uc" /* ɵɵnextContext */](); return ctx_r17.defaultUriMatch = $event; })("change", function OptionsComponent_ng_container_37_Template_select_change_12_listener() { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r19 = core["uc" /* ɵɵnextContext */](); return ctx_r19.saveDefaultUriMatch(); });
    core["Qc" /* ɵɵtext */](13, " ");
    core["Oc" /* ɵɵtemplate */](14, OptionsComponent_ng_container_37_option_14_Template, 2, 2, "option", 19);
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](17, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "div", 20);
    core["Qc" /* ɵɵtext */](20);
    core["vc" /* ɵɵpipe */](21, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["Oc" /* ɵɵtemplate */](24, OptionsComponent_ng_container_37_div_24_Template, 21, 8, "div", 21);
    core["Qc" /* ɵɵtext */](25, " ");
    core["jc" /* ɵɵelementStart */](26, "div", 7);
    core["Qc" /* ɵɵtext */](27, " ");
    core["jc" /* ɵɵelementStart */](28, "div", 15);
    core["Qc" /* ɵɵtext */](29, " ");
    core["jc" /* ɵɵelementStart */](30, "div", 22);
    core["Qc" /* ɵɵtext */](31, " ");
    core["jc" /* ɵɵelementStart */](32, "label", 23);
    core["Qc" /* ɵɵtext */](33);
    core["vc" /* ɵɵpipe */](34, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](35, " ");
    core["jc" /* ɵɵelementStart */](36, "input", 24);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_37_Template_input_change_36_listener() { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r20 = core["uc" /* ɵɵnextContext */](); return ctx_r20.updateAutoTotpCopy(); })("ngModelChange", function OptionsComponent_ng_container_37_Template_input_ngModelChange_36_listener($event) { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r21 = core["uc" /* ɵɵnextContext */](); return ctx_r21.disableAutoTotpCopy = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](37, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](38, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](39, " ");
    core["jc" /* ɵɵelementStart */](40, "div", 20);
    core["Qc" /* ɵɵtext */](41);
    core["vc" /* ɵɵpipe */](42, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](43, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](44, " ");
    core["jc" /* ɵɵelementStart */](45, "div", 7);
    core["Qc" /* ɵɵtext */](46, " ");
    core["jc" /* ɵɵelementStart */](47, "div", 15);
    core["Qc" /* ɵɵtext */](48, " ");
    core["jc" /* ɵɵelementStart */](49, "div", 22);
    core["Qc" /* ɵɵtext */](50, " ");
    core["jc" /* ɵɵelementStart */](51, "label", 25);
    core["Qc" /* ɵɵtext */](52);
    core["vc" /* ɵɵpipe */](53, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](54, " ");
    core["jc" /* ɵɵelementStart */](55, "input", 26);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_37_Template_input_change_55_listener() { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r22 = core["uc" /* ɵɵnextContext */](); return ctx_r22.updateAddLoginNotification(); })("ngModelChange", function OptionsComponent_ng_container_37_Template_input_ngModelChange_55_listener($event) { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r23 = core["uc" /* ɵɵnextContext */](); return ctx_r23.disableAddLoginNotification = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](56, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](57, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](58, " ");
    core["jc" /* ɵɵelementStart */](59, "div", 20);
    core["Qc" /* ɵɵtext */](60);
    core["vc" /* ɵɵpipe */](61, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](62, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](63, " ");
    core["jc" /* ɵɵelementStart */](64, "div", 7);
    core["Qc" /* ɵɵtext */](65, " ");
    core["jc" /* ɵɵelementStart */](66, "div", 15);
    core["Qc" /* ɵɵtext */](67, " ");
    core["jc" /* ɵɵelementStart */](68, "div", 22);
    core["Qc" /* ɵɵtext */](69, " ");
    core["jc" /* ɵɵelementStart */](70, "label", 27);
    core["Qc" /* ɵɵtext */](71);
    core["vc" /* ɵɵpipe */](72, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](73, " ");
    core["jc" /* ɵɵelementStart */](74, "input", 28);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_37_Template_input_change_74_listener() { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r24 = core["uc" /* ɵɵnextContext */](); return ctx_r24.updateChangedPasswordNotification(); })("ngModelChange", function OptionsComponent_ng_container_37_Template_input_ngModelChange_74_listener($event) { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r25 = core["uc" /* ɵɵnextContext */](); return ctx_r25.disableChangedPasswordNotification = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](75, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](76, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](77, " ");
    core["jc" /* ɵɵelementStart */](78, "div", 20);
    core["Qc" /* ɵɵtext */](79);
    core["vc" /* ɵɵpipe */](80, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](81, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](82, " ");
    core["jc" /* ɵɵelementStart */](83, "div", 7);
    core["Qc" /* ɵɵtext */](84, " ");
    core["jc" /* ɵɵelementStart */](85, "div", 15);
    core["Qc" /* ɵɵtext */](86, " ");
    core["jc" /* ɵɵelementStart */](87, "div", 22);
    core["Qc" /* ɵɵtext */](88, " ");
    core["jc" /* ɵɵelementStart */](89, "label", 29);
    core["Qc" /* ɵɵtext */](90);
    core["vc" /* ɵɵpipe */](91, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](92, " ");
    core["jc" /* ɵɵelementStart */](93, "input", 30);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_37_Template_input_change_93_listener() { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r26 = core["uc" /* ɵɵnextContext */](); return ctx_r26.updateDisableContextMenuItem(); })("ngModelChange", function OptionsComponent_ng_container_37_Template_input_ngModelChange_93_listener($event) { core["Jc" /* ɵɵrestoreView */](_r18); const ctx_r27 = core["uc" /* ɵɵnextContext */](); return ctx_r27.disableContextMenuItem = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](94, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](95, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](96, " ");
    core["jc" /* ɵɵelementStart */](97, "div", 20);
    core["Qc" /* ɵɵtext */](98);
    core["vc" /* ɵɵpipe */](99, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](100, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](101, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 17, "defaultUriMatchDetection"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.defaultUriMatch);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r2.uriMatchOptions);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](21, 19, "defaultUriMatchDetectionDesc"));
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.showClearClipboard);
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](34, 21, "disableAutoTotpCopy"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.disableAutoTotpCopy);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](42, 23, "disableAutoTotpCopyDesc"));
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](53, 25, "disableAddLoginNotification"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.disableAddLoginNotification);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](61, 27, "addLoginNotificationDesc"));
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](72, 29, "disableChangedPasswordNotification"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.disableChangedPasswordNotification);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](80, 31, "disableChangedPasswordNotificationDesc"));
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](91, 33, "disableContextMenuItem"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.disableContextMenuItem);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](99, 35, "disableContextMenuItemDesc"));
} }
function OptionsComponent_i_43_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 13);
} }
function OptionsComponent_i_45_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 14);
} }
function OptionsComponent_ng_container_49_option_90_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 31);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r29 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r29.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r29.name);
} }
function OptionsComponent_ng_container_49_Template(rf, ctx) { if (rf & 1) {
    const _r31 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 7);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 15);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 22);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "label", 34);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "input", 35);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_49_Template_input_change_12_listener() { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r30 = core["uc" /* ɵɵnextContext */](); return ctx_r30.updateShowCards(); })("ngModelChange", function OptionsComponent_ng_container_49_Template_input_ngModelChange_12_listener($event) { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r32 = core["uc" /* ɵɵnextContext */](); return ctx_r32.dontShowCards = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "div", 20);
    core["Qc" /* ɵɵtext */](17);
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["jc" /* ɵɵelementStart */](21, "div", 7);
    core["Qc" /* ɵɵtext */](22, " ");
    core["jc" /* ɵɵelementStart */](23, "div", 15);
    core["Qc" /* ɵɵtext */](24, " ");
    core["jc" /* ɵɵelementStart */](25, "div", 22);
    core["Qc" /* ɵɵtext */](26, " ");
    core["jc" /* ɵɵelementStart */](27, "label", 36);
    core["Qc" /* ɵɵtext */](28);
    core["vc" /* ɵɵpipe */](29, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["jc" /* ɵɵelementStart */](31, "input", 37);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_49_Template_input_change_31_listener() { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r33 = core["uc" /* ɵɵnextContext */](); return ctx_r33.updateShowIdentities(); })("ngModelChange", function OptionsComponent_ng_container_49_Template_input_ngModelChange_31_listener($event) { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r34 = core["uc" /* ɵɵnextContext */](); return ctx_r34.dontShowIdentities = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](32, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](33, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](34, " ");
    core["jc" /* ɵɵelementStart */](35, "div", 20);
    core["Qc" /* ɵɵtext */](36);
    core["vc" /* ɵɵpipe */](37, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](38, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](39, " ");
    core["jc" /* ɵɵelementStart */](40, "div", 7);
    core["Qc" /* ɵɵtext */](41, " ");
    core["jc" /* ɵɵelementStart */](42, "div", 15);
    core["Qc" /* ɵɵtext */](43, " ");
    core["jc" /* ɵɵelementStart */](44, "div", 22);
    core["Qc" /* ɵɵtext */](45, " ");
    core["jc" /* ɵɵelementStart */](46, "label", 38);
    core["Qc" /* ɵɵtext */](47);
    core["vc" /* ɵɵpipe */](48, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](49, " ");
    core["jc" /* ɵɵelementStart */](50, "input", 39);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_49_Template_input_change_50_listener() { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r35 = core["uc" /* ɵɵnextContext */](); return ctx_r35.updateDisableFavicon(); })("ngModelChange", function OptionsComponent_ng_container_49_Template_input_ngModelChange_50_listener($event) { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r36 = core["uc" /* ɵɵnextContext */](); return ctx_r36.disableFavicon = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](51, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](52, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](53, " ");
    core["jc" /* ɵɵelementStart */](54, "div", 20);
    core["Qc" /* ɵɵtext */](55);
    core["vc" /* ɵɵpipe */](56, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](57, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](58, " ");
    core["jc" /* ɵɵelementStart */](59, "div", 7);
    core["Qc" /* ɵɵtext */](60, " ");
    core["jc" /* ɵɵelementStart */](61, "div", 15);
    core["Qc" /* ɵɵtext */](62, " ");
    core["jc" /* ɵɵelementStart */](63, "div", 22);
    core["Qc" /* ɵɵtext */](64, " ");
    core["jc" /* ɵɵelementStart */](65, "label", 40);
    core["Qc" /* ɵɵtext */](66);
    core["vc" /* ɵɵpipe */](67, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](68, " ");
    core["jc" /* ɵɵelementStart */](69, "input", 41);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_49_Template_input_change_69_listener() { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r37 = core["uc" /* ɵɵnextContext */](); return ctx_r37.updateDisableBadgeCounter(); })("ngModelChange", function OptionsComponent_ng_container_49_Template_input_ngModelChange_69_listener($event) { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r38 = core["uc" /* ɵɵnextContext */](); return ctx_r38.disableBadgeCounter = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](70, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](71, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](72, " ");
    core["jc" /* ɵɵelementStart */](73, "div", 20);
    core["Qc" /* ɵɵtext */](74);
    core["vc" /* ɵɵpipe */](75, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](76, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](77, " ");
    core["jc" /* ɵɵelementStart */](78, "div", 7);
    core["Qc" /* ɵɵtext */](79, " ");
    core["jc" /* ɵɵelementStart */](80, "div", 15);
    core["Qc" /* ɵɵtext */](81, " ");
    core["jc" /* ɵɵelementStart */](82, "div", 16);
    core["Qc" /* ɵɵtext */](83, " ");
    core["jc" /* ɵɵelementStart */](84, "label", 42);
    core["Qc" /* ɵɵtext */](85);
    core["vc" /* ɵɵpipe */](86, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](87, " ");
    core["jc" /* ɵɵelementStart */](88, "select", 43);
    core["qc" /* ɵɵlistener */]("ngModelChange", function OptionsComponent_ng_container_49_Template_select_ngModelChange_88_listener($event) { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r39 = core["uc" /* ɵɵnextContext */](); return ctx_r39.theme = $event; })("change", function OptionsComponent_ng_container_49_Template_select_change_88_listener() { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r40 = core["uc" /* ɵɵnextContext */](); return ctx_r40.saveTheme(); });
    core["Qc" /* ɵɵtext */](89, " ");
    core["Oc" /* ɵɵtemplate */](90, OptionsComponent_ng_container_49_option_90_Template, 2, 2, "option", 19);
    core["Qc" /* ɵɵtext */](91, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](92, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](93, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](94, " ");
    core["jc" /* ɵɵelementStart */](95, "div", 20);
    core["Qc" /* ɵɵtext */](96);
    core["vc" /* ɵɵpipe */](97, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](98, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](99, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 16, "dontShowCardsCurrentTab"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.dontShowCards);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](18, 18, "dontShowCardsCurrentTabDesc"));
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](29, 20, "dontShowIdentitiesCurrentTab"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.dontShowIdentities);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](37, 22, "dontShowIdentitiesCurrentTabDesc"));
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](48, 24, "disableFavicon"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.disableFavicon);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](56, 26, "disableFaviconDesc"));
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](67, 28, "disableBadgeCounter"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.disableBadgeCounter);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](75, 30, "disableBadgeCounterDesc"));
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](86, 32, "theme"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.theme);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r5.themeOptions);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](97, 34, "themeDesc"));
} }
function OptionsComponent_i_55_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 13);
} }
function OptionsComponent_i_57_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 14);
} }
function OptionsComponent_ng_container_61_option_38_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 31);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r42 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r42.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r42.name);
} }
function OptionsComponent_ng_container_61_Template(rf, ctx) { if (rf & 1) {
    const _r44 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 7);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 15);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 22);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "label", 44);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "input", 45);
    core["qc" /* ɵɵlistener */]("change", function OptionsComponent_ng_container_61_Template_input_change_12_listener() { core["Jc" /* ɵɵrestoreView */](_r44); const ctx_r43 = core["uc" /* ɵɵnextContext */](); return ctx_r43.updateAutoFillOnPageLoad(); })("ngModelChange", function OptionsComponent_ng_container_61_Template_input_ngModelChange_12_listener($event) { core["Jc" /* ɵɵrestoreView */](_r44); const ctx_r45 = core["uc" /* ɵɵnextContext */](); return ctx_r45.enableAutoFillOnPageLoad = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "div", 20);
    core["Qc" /* ɵɵtext */](17);
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["jc" /* ɵɵelementStart */](19, "b");
    core["Qc" /* ɵɵtext */](20);
    core["vc" /* ɵɵpipe */](21, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22);
    core["vc" /* ɵɵpipe */](23, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](24, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](25, " ");
    core["jc" /* ɵɵelementStart */](26, "div", 7);
    core["Qc" /* ɵɵtext */](27, " ");
    core["jc" /* ɵɵelementStart */](28, "div", 15);
    core["Qc" /* ɵɵtext */](29, " ");
    core["jc" /* ɵɵelementStart */](30, "div", 16);
    core["Qc" /* ɵɵtext */](31, " ");
    core["jc" /* ɵɵelementStart */](32, "label", 46);
    core["Qc" /* ɵɵtext */](33);
    core["vc" /* ɵɵpipe */](34, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](35, " ");
    core["jc" /* ɵɵelementStart */](36, "select", 47);
    core["qc" /* ɵɵlistener */]("ngModelChange", function OptionsComponent_ng_container_61_Template_select_ngModelChange_36_listener($event) { core["Jc" /* ɵɵrestoreView */](_r44); const ctx_r46 = core["uc" /* ɵɵnextContext */](); return ctx_r46.autoFillOnPageLoadDefault = $event; })("change", function OptionsComponent_ng_container_61_Template_select_change_36_listener() { core["Jc" /* ɵɵrestoreView */](_r44); const ctx_r47 = core["uc" /* ɵɵnextContext */](); return ctx_r47.updateAutoFillOnPageLoadDefault(); });
    core["Qc" /* ɵɵtext */](37, " ");
    core["Oc" /* ɵɵtemplate */](38, OptionsComponent_ng_container_61_option_38_Template, 2, 2, "option", 19);
    core["Qc" /* ɵɵtext */](39, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](40, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](41, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](42, " ");
    core["jc" /* ɵɵelementStart */](43, "div", 20);
    core["Qc" /* ɵɵtext */](44);
    core["vc" /* ɵɵpipe */](45, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](46, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](47, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r8 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 10, "enableAutoFillOnPageLoad"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r8.enableAutoFillOnPageLoad);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](18, 12, "enableAutoFillOnPageLoadDesc"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](21, 14, "warning"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](": ", core["wc" /* ɵɵpipeBind1 */](23, 16, "experimentalFeature"), " ");
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](34, 18, "defaultAutoFillOnPageLoad"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r8.autoFillOnPageLoadDefault)("disabled", !ctx_r8.enableAutoFillOnPageLoad);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r8.autoFillOnPageLoadOptions);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](45, 20, "defaultAutoFillOnPageLoadDesc"));
} }
class options_component_OptionsComponent {
    constructor(messagingService, storageService, stateService, totpService, i18nService) {
        this.messagingService = messagingService;
        this.storageService = storageService;
        this.stateService = stateService;
        this.totpService = totpService;
        this.disableFavicon = false;
        this.disableBadgeCounter = false;
        this.enableAutoFillOnPageLoad = false;
        this.autoFillOnPageLoadDefault = false;
        this.disableAutoTotpCopy = false;
        this.disableContextMenuItem = false;
        this.disableAddLoginNotification = false;
        this.disableChangedPasswordNotification = false;
        this.dontShowCards = false;
        this.dontShowIdentities = false;
        this.showClearClipboard = true;
        this.defaultUriMatch = uriMatchType["a" /* UriMatchType */].Domain;
        this.showGeneral = true;
        this.showAutofill = true;
        this.showDisplay = true;
        this.themeOptions = [
            { name: i18nService.t('default'), value: null },
            { name: i18nService.t('light'), value: themeType["a" /* ThemeType */].Light },
            { name: i18nService.t('dark'), value: themeType["a" /* ThemeType */].Dark },
            { name: 'Nord', value: themeType["a" /* ThemeType */].Nord },
            { name: i18nService.t('solarizedDark'), value: themeType["a" /* ThemeType */].SolarizedDark },
        ];
        this.uriMatchOptions = [
            { name: i18nService.t('baseDomain'), value: uriMatchType["a" /* UriMatchType */].Domain },
            { name: i18nService.t('host'), value: uriMatchType["a" /* UriMatchType */].Host },
            { name: i18nService.t('startsWith'), value: uriMatchType["a" /* UriMatchType */].StartsWith },
            { name: i18nService.t('regEx'), value: uriMatchType["a" /* UriMatchType */].RegularExpression },
            { name: i18nService.t('exact'), value: uriMatchType["a" /* UriMatchType */].Exact },
            { name: i18nService.t('never'), value: uriMatchType["a" /* UriMatchType */].Never },
        ];
        this.clearClipboardOptions = [
            { name: i18nService.t('never'), value: null },
            { name: i18nService.t('tenSeconds'), value: 10 },
            { name: i18nService.t('twentySeconds'), value: 20 },
            { name: i18nService.t('thirtySeconds'), value: 30 },
            { name: i18nService.t('oneMinute'), value: 60 },
            { name: i18nService.t('twoMinutes'), value: 120 },
            { name: i18nService.t('fiveMinutes'), value: 300 },
        ];
        this.autoFillOnPageLoadOptions = [
            { name: i18nService.t('autoFillOnPageLoadYes'), value: true },
            { name: i18nService.t('autoFillOnPageLoadNo'), value: false },
        ];
    }
    ngOnInit() {
        var _a;
        return options_component_awaiter(this, void 0, void 0, function* () {
            this.enableAutoFillOnPageLoad = yield this.storageService.get(constants_service["a" /* ConstantsService */].enableAutoFillOnPageLoadKey);
            this.autoFillOnPageLoadDefault = (_a = yield this.storageService.get(constants_service["a" /* ConstantsService */].autoFillOnPageLoadDefaultKey)) !== null && _a !== void 0 ? _a : true;
            this.disableAddLoginNotification = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableAddLoginNotificationKey);
            this.disableChangedPasswordNotification = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableChangedPasswordNotificationKey);
            this.disableContextMenuItem = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableContextMenuItemKey);
            this.dontShowCards = yield this.storageService.get(constants_service["a" /* ConstantsService */].dontShowCardsCurrentTab);
            this.dontShowIdentities = yield this.storageService.get(constants_service["a" /* ConstantsService */].dontShowIdentitiesCurrentTab);
            this.disableAutoTotpCopy = !(yield this.totpService.isAutoCopyEnabled());
            this.disableFavicon = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableFaviconKey);
            this.disableBadgeCounter = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableBadgeCounterKey);
            this.theme = yield this.storageService.get(constants_service["a" /* ConstantsService */].themeKey);
            const defaultUriMatch = yield this.storageService.get(constants_service["a" /* ConstantsService */].defaultUriMatch);
            this.defaultUriMatch = defaultUriMatch == null ? uriMatchType["a" /* UriMatchType */].Domain : defaultUriMatch;
            this.clearClipboard = yield this.storageService.get(constants_service["a" /* ConstantsService */].clearClipboardKey);
        });
    }
    updateAddLoginNotification() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].disableAddLoginNotificationKey, this.disableAddLoginNotification);
        });
    }
    updateChangedPasswordNotification() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].disableChangedPasswordNotificationKey, this.disableChangedPasswordNotification);
        });
    }
    updateDisableContextMenuItem() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].disableContextMenuItemKey, this.disableContextMenuItem);
            this.messagingService.send('bgUpdateContextMenu');
        });
    }
    updateAutoTotpCopy() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].disableAutoTotpCopyKey, this.disableAutoTotpCopy);
        });
    }
    updateAutoFillOnPageLoad() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].enableAutoFillOnPageLoadKey, this.enableAutoFillOnPageLoad);
        });
    }
    updateAutoFillOnPageLoadDefault() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].autoFillOnPageLoadDefaultKey, this.autoFillOnPageLoadDefault);
        });
    }
    updateDisableFavicon() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].disableFaviconKey, this.disableFavicon);
            yield this.stateService.save(constants_service["a" /* ConstantsService */].disableFaviconKey, this.disableFavicon);
        });
    }
    updateDisableBadgeCounter() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].disableBadgeCounterKey, this.disableBadgeCounter);
            yield this.stateService.save(constants_service["a" /* ConstantsService */].disableBadgeCounterKey, this.disableBadgeCounter);
            this.messagingService.send('bgUpdateContextMenu');
        });
    }
    updateShowCards() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].dontShowCardsCurrentTab, this.dontShowCards);
            yield this.stateService.save(constants_service["a" /* ConstantsService */].dontShowCardsCurrentTab, this.dontShowCards);
        });
    }
    updateShowIdentities() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].dontShowIdentitiesCurrentTab, this.dontShowIdentities);
            yield this.stateService.save(constants_service["a" /* ConstantsService */].dontShowIdentitiesCurrentTab, this.dontShowIdentities);
        });
    }
    saveTheme() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].themeKey, this.theme);
            window.setTimeout(() => window.location.reload(), 200);
        });
    }
    saveDefaultUriMatch() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].defaultUriMatch, this.defaultUriMatch);
        });
    }
    saveClearClipboard() {
        return options_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].clearClipboardKey, this.clearClipboard);
        });
    }
}
options_component_OptionsComponent.ɵfac = function OptionsComponent_Factory(t) { return new (t || options_component_OptionsComponent)(core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](TotpService), core["dc" /* ɵɵdirectiveInject */](I18nService)); };
options_component_OptionsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: options_component_OptionsComponent, selectors: [["app-options"]], decls: 64, vars: 15, consts: [[1, "left"], ["routerLink", "/tabs/settings"], [1, "header-icon"], ["aria-hidden", "true", 1, "fa", "fa-chevron-left"], [1, "center"], [1, "title"], [1, "right"], [1, "box"], [1, "box-header-expandable", 3, "click"], ["class", "fa fa-chevron-down fa-sm icon", 4, "ngIf"], ["class", "fa fa-chevron-up fa-sm icon", 4, "ngIf"], [4, "ngIf"], [1, "box", "box-section-divider"], [1, "fa", "fa-chevron-down", "fa-sm", "icon"], [1, "fa", "fa-chevron-up", "fa-sm", "icon"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "defaultUriMatch"], ["id", "defaultUriMatch", "name", "DefaultUriMatch", 3, "ngModel", "ngModelChange", "change"], [3, "ngValue", 4, "ngFor", "ngForOf"], [1, "box-footer"], ["class", "box", 4, "ngIf"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox"], ["for", "totp"], ["id", "totp", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "addlogin-notification-bar"], ["id", "addlogin-notification-bar", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "changedpass-notification-bar"], ["id", "changedpass-notification-bar", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "context-menu"], ["id", "context-menu", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], [3, "ngValue"], ["for", "clearClipboard"], ["id", "clearClipboard", "name", "ClearClipboard", 3, "ngModel", "ngModelChange", "change"], ["for", "dontShowCards"], ["id", "dontShowCards", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "dontShowIdentities"], ["id", "dontShowIdentities", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "favicon"], ["id", "favicon", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "badge"], ["id", "badge", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "theme"], ["id", "theme", "name", "Theme", 3, "ngModel", "ngModelChange", "change"], ["for", "autofill"], ["id", "autofill", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "defaultAutofill"], ["id", "defaultAutofill", "name", "DefaultAutofill", 3, "ngModel", "disabled", "ngModelChange", "change"]], template: function OptionsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "a", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "span", 2);
        core["ec" /* ɵɵelement */](7, "i", 3);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span");
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 4);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "span", 5);
        core["Qc" /* ɵɵtext */](18);
        core["vc" /* ɵɵpipe */](19, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](20, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](21, " ");
        core["ec" /* ɵɵelement */](22, "div", 6);
        core["Qc" /* ɵɵtext */](23, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "content");
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "div", 7);
        core["Qc" /* ɵɵtext */](28, " ");
        core["jc" /* ɵɵelementStart */](29, "div", 8);
        core["qc" /* ɵɵlistener */]("click", function OptionsComponent_Template_div_click_29_listener() { return ctx.showGeneral = !ctx.showGeneral; });
        core["Qc" /* ɵɵtext */](30, " General ");
        core["Oc" /* ɵɵtemplate */](31, OptionsComponent_i_31_Template, 1, 0, "i", 9);
        core["Qc" /* ɵɵtext */](32, " ");
        core["Oc" /* ɵɵtemplate */](33, OptionsComponent_i_33_Template, 1, 0, "i", 10);
        core["Qc" /* ɵɵtext */](34, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](35, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](36, " ");
        core["Oc" /* ɵɵtemplate */](37, OptionsComponent_ng_container_37_Template, 102, 37, "ng-container", 11);
        core["Qc" /* ɵɵtext */](38, " ");
        core["jc" /* ɵɵelementStart */](39, "div", 12);
        core["Qc" /* ɵɵtext */](40, " ");
        core["jc" /* ɵɵelementStart */](41, "div", 8);
        core["qc" /* ɵɵlistener */]("click", function OptionsComponent_Template_div_click_41_listener() { return ctx.showDisplay = !ctx.showDisplay; });
        core["Qc" /* ɵɵtext */](42, " Display ");
        core["Oc" /* ɵɵtemplate */](43, OptionsComponent_i_43_Template, 1, 0, "i", 9);
        core["Qc" /* ɵɵtext */](44, " ");
        core["Oc" /* ɵɵtemplate */](45, OptionsComponent_i_45_Template, 1, 0, "i", 10);
        core["Qc" /* ɵɵtext */](46, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](47, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](48, " ");
        core["Oc" /* ɵɵtemplate */](49, OptionsComponent_ng_container_49_Template, 100, 36, "ng-container", 11);
        core["Qc" /* ɵɵtext */](50, " ");
        core["jc" /* ɵɵelementStart */](51, "div", 12);
        core["Qc" /* ɵɵtext */](52, " ");
        core["jc" /* ɵɵelementStart */](53, "div", 8);
        core["qc" /* ɵɵlistener */]("click", function OptionsComponent_Template_div_click_53_listener() { return ctx.showAutofill = !ctx.showAutofill; });
        core["Qc" /* ɵɵtext */](54, " Autofill ");
        core["Oc" /* ɵɵtemplate */](55, OptionsComponent_i_55_Template, 1, 0, "i", 9);
        core["Qc" /* ɵɵtext */](56, " ");
        core["Oc" /* ɵɵtemplate */](57, OptionsComponent_i_57_Template, 1, 0, "i", 10);
        core["Qc" /* ɵɵtext */](58, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](59, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](60, " ");
        core["Oc" /* ɵɵtemplate */](61, OptionsComponent_ng_container_61_Template, 48, 22, "ng-container", 11);
        core["Qc" /* ɵɵtext */](62, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](63, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 11, "back"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 13, "options"));
        core["Sb" /* ɵɵadvance */](13);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.showGeneral);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showGeneral);
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showGeneral);
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.showDisplay);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showDisplay);
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showDisplay);
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.showAutofill);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showAutofill);
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showAutofill);
    } }, directives: [fesm2015_router["g" /* RouterLinkWithHref */], common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["y" /* SelectControlValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], common["k" /* NgForOf */], fesm2015_forms["a" /* CheckboxControlValueAccessor */], fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](options_component_OptionsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-options',
                templateUrl: 'options.component.html',
            }]
    }], function () { return [{ type: messaging_service["a" /* MessagingService */] }, { type: StorageService }, { type: StateService }, { type: TotpService }, { type: I18nService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/premium.component.ts
var premium_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};












class premium_component_PremiumComponent {
    constructor(i18nService, platformUtilsService, apiService, userService, logService) {
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.apiService = apiService;
        this.userService = userService;
        this.logService = logService;
        this.isPremium = false;
        this.price = 10;
    }
    ngOnInit() {
        return premium_component_awaiter(this, void 0, void 0, function* () {
            this.isPremium = yield this.userService.canAccessPremium();
        });
    }
    refresh() {
        return premium_component_awaiter(this, void 0, void 0, function* () {
            try {
                this.refreshPromise = this.apiService.refreshIdentityToken();
                yield this.refreshPromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t('refreshComplete'));
                this.isPremium = yield this.userService.canAccessPremium();
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
    purchase() {
        return premium_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('premiumPurchaseAlert'), this.i18nService.t('premiumPurchase'), this.i18nService.t('yes'), this.i18nService.t('cancel'));
            if (confirmed) {
                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');
            }
        });
    }
    manage() {
        return premium_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('premiumManageAlert'), this.i18nService.t('premiumManage'), this.i18nService.t('yes'), this.i18nService.t('cancel'));
            if (confirmed) {
                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=manage');
            }
        });
    }
}
premium_component_PremiumComponent.ɵfac = function PremiumComponent_Factory(t) { return new (t || premium_component_PremiumComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
premium_component_PremiumComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: premium_component_PremiumComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](premium_component_PremiumComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: ApiService }, { type: UserService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/settings/premium.component.ts



















function PremiumComponent_ng_container_29_Template(rf, ctx) { if (rf & 1) {
    const _r4 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p", 9);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "p");
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "ul", 10);
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "li");
    core["Qc" /* ɵɵtext */](13, " ");
    core["ec" /* ɵɵelement */](14, "i", 11);
    core["Qc" /* ɵɵtext */](15);
    core["vc" /* ɵɵpipe */](16, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](17, " ");
    core["jc" /* ɵɵelementStart */](18, "li");
    core["Qc" /* ɵɵtext */](19, " ");
    core["ec" /* ɵɵelement */](20, "i", 11);
    core["Qc" /* ɵɵtext */](21);
    core["vc" /* ɵɵpipe */](22, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["jc" /* ɵɵelementStart */](24, "li");
    core["Qc" /* ɵɵtext */](25, " ");
    core["ec" /* ɵɵelement */](26, "i", 11);
    core["Qc" /* ɵɵtext */](27);
    core["vc" /* ɵɵpipe */](28, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["jc" /* ɵɵelementStart */](30, "li");
    core["Qc" /* ɵɵtext */](31, " ");
    core["ec" /* ɵɵelement */](32, "i", 11);
    core["Qc" /* ɵɵtext */](33);
    core["vc" /* ɵɵpipe */](34, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](35, " ");
    core["jc" /* ɵɵelementStart */](36, "li");
    core["Qc" /* ɵɵtext */](37, " ");
    core["ec" /* ɵɵelement */](38, "i", 11);
    core["Qc" /* ɵɵtext */](39);
    core["vc" /* ɵɵpipe */](40, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](41, " ");
    core["jc" /* ɵɵelementStart */](42, "li");
    core["Qc" /* ɵɵtext */](43, " ");
    core["ec" /* ɵɵelement */](44, "i", 11);
    core["Qc" /* ɵɵtext */](45);
    core["vc" /* ɵɵpipe */](46, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](47, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](48, " ");
    core["jc" /* ɵɵelementStart */](49, "p", 9);
    core["Qc" /* ɵɵtext */](50);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](51, " ");
    core["jc" /* ɵɵelementStart */](52, "button", 12);
    core["qc" /* ɵɵlistener */]("click", function PremiumComponent_ng_container_29_Template_button_click_52_listener() { core["Jc" /* ɵɵrestoreView */](_r4); const ctx_r3 = core["uc" /* ɵɵnextContext */](); return ctx_r3.purchase(); });
    core["Qc" /* ɵɵtext */](53, " ");
    core["jc" /* ɵɵelementStart */](54, "b");
    core["Qc" /* ɵɵtext */](55);
    core["vc" /* ɵɵpipe */](56, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](57, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](58, " ");
    core["jc" /* ɵɵelementStart */](59, "button", 13, 14);
    core["qc" /* ɵɵlistener */]("click", function PremiumComponent_ng_container_29_Template_button_click_59_listener() { core["Jc" /* ɵɵrestoreView */](_r4); const ctx_r5 = core["uc" /* ɵɵnextContext */](); return ctx_r5.refresh(); });
    core["Qc" /* ɵɵtext */](61, " ");
    core["jc" /* ɵɵelementStart */](62, "span", 15);
    core["Qc" /* ɵɵtext */](63);
    core["vc" /* ɵɵpipe */](64, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](65, " ");
    core["ec" /* ɵɵelement */](66, "i", 16);
    core["Qc" /* ɵɵtext */](67, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](68, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const _r2 = core["Ic" /* ɵɵreference */](60);
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 15, "premiumNotCurrentMember"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 17, "premiumSignUpAndGet"));
    core["Sb" /* ɵɵadvance */](8);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](16, 19, "ppremiumSignUpStorage"), " ");
    core["Sb" /* ɵɵadvance */](6);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](22, 21, "ppremiumSignUpTwoStep"), " ");
    core["Sb" /* ɵɵadvance */](6);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](28, 23, "ppremiumSignUpReports"), " ");
    core["Sb" /* ɵɵadvance */](6);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](34, 25, "ppremiumSignUpTotp"), " ");
    core["Sb" /* ɵɵadvance */](6);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](40, 27, "ppremiumSignUpSupport"), " ");
    core["Sb" /* ɵɵadvance */](6);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](46, 29, "ppremiumSignUpFuture"), " ");
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r0.priceString);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](56, 31, "premiumPurchase"));
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("disabled", _r2.loading)("appApiAction", ctx_r0.refreshPromise);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("hidden", _r2.loading);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](64, 33, "premiumRefresh"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("hidden", !_r2.loading);
} }
function PremiumComponent_ng_container_31_Template(rf, ctx) { if (rf & 1) {
    const _r7 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p", 9);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "p", 17);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function PremiumComponent_ng_container_31_Template_button_click_10_listener() { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r6 = core["uc" /* ɵɵnextContext */](); return ctx_r6.manage(); });
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "b");
    core["Qc" /* ɵɵtext */](13);
    core["vc" /* ɵɵpipe */](14, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "premiumCurrentMember"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 5, "premiumCurrentMemberThanks"));
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](14, 7, "premiumManage"));
} }
class settings_premium_component_PremiumComponent extends premium_component_PremiumComponent {
    constructor(i18nService, platformUtilsService, apiService, userService, currencyPipe, logService) {
        super(i18nService, platformUtilsService, apiService, userService, logService);
        this.currencyPipe = currencyPipe;
        // Support old price string. Can be removed in future once all translations are properly updated.
        const thePrice = this.currencyPipe.transform(this.price, '$');
        this.priceString = i18nService.t('premiumPrice', thePrice);
        if (this.priceString.indexOf('%price%') > -1) {
            this.priceString = this.priceString.replace('%price%', thePrice);
        }
    }
}
settings_premium_component_PremiumComponent.ɵfac = function PremiumComponent_Factory(t) { return new (t || settings_premium_component_PremiumComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](common["c" /* CurrencyPipe */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
settings_premium_component_PremiumComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: settings_premium_component_PremiumComponent, selectors: [["app-premium"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 35, vars: 8, consts: [[1, "left"], ["routerLink", "/tabs/settings"], [1, "header-icon"], ["aria-hidden", "true", 1, "fa", "fa-chevron-left"], [1, "center"], [1, "title"], [1, "right"], [1, "content"], [4, "ngIf"], [1, "text-center", "lead"], [1, "fa-ul"], ["aria-hidden", "true", 1, "fa-li", "fa", "fa-check", "text-success"], ["type", "button", "appBlurClick", "", 1, "btn", "primary", "block", 3, "click"], ["type", "button", "appBlurClick", "", 1, "btn", "link", "block", 3, "disabled", "appApiAction", "click"], ["refreshBtn", ""], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-spin", "fa-lg", "fa-fw", 3, "hidden"], [1, "text-center"], ["type", "button", "appBlurClick", "", 1, "btn", "block", "primary", 3, "click"]], template: function PremiumComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "a", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "span", 2);
        core["ec" /* ɵɵelement */](7, "i", 3);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span");
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 4);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "span", 5);
        core["Qc" /* ɵɵtext */](18);
        core["vc" /* ɵɵpipe */](19, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](20, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](21, " ");
        core["ec" /* ɵɵelement */](22, "div", 6);
        core["Qc" /* ɵɵtext */](23, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "content");
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "div", 7);
        core["Qc" /* ɵɵtext */](28, " ");
        core["Oc" /* ɵɵtemplate */](29, PremiumComponent_ng_container_29_Template, 69, 35, "ng-container", 8);
        core["Qc" /* ɵɵtext */](30, " ");
        core["Oc" /* ɵɵtemplate */](31, PremiumComponent_ng_container_31_Template, 17, 9, "ng-container", 8);
        core["Qc" /* ɵɵtext */](32, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](34, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 4, "back"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 6, "premiumMembership"));
        core["Sb" /* ɵɵadvance */](11);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.isPremium);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.isPremium);
    } }, directives: [fesm2015_router["g" /* RouterLinkWithHref */], common["l" /* NgIf */], BlurClickDirective, api_action_directive_ApiActionDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](settings_premium_component_PremiumComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-premium',
                templateUrl: 'premium.component.html',
            }]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: ApiService }, { type: UserService }, { type: common["c" /* CurrencyPipe */] }, { type: LogService }]; }, null); })();

// EXTERNAL MODULE: ./node_modules/sweetalert2/src/sweetalert2.js + 62 modules
var sweetalert2 = __webpack_require__(158);

// EXTERNAL MODULE: ./jslib/common/src/enums/deviceType.ts
var enums_deviceType = __webpack_require__(38);

// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/Subject.js
var Subject = __webpack_require__(30);

// CONCATENATED MODULE: ./jslib/angular/src/components/modal/modal.ref.ts


class modal_ref_ModalRef {
    constructor() {
        this._onCreated = new Subject["a" /* Subject */]();
        this._onClose = new Subject["a" /* Subject */]();
        this._onClosed = new Subject["a" /* Subject */]();
        this._onShow = new Subject["a" /* Subject */]();
        this._onShown = new Subject["a" /* Subject */]();
        this.onCreated = this._onCreated.asObservable();
        this.onClose = this._onClose.asObservable();
        this.onClosed = this._onClosed.asObservable();
        this.onShow = this._onShow.asObservable();
        this.onShown = this._onShow.asObservable();
    }
    show() {
        this._onShow.next();
    }
    shown() {
        this._onShown.next();
    }
    close(result) {
        this.lastResult = result;
        this._onClose.next(result);
    }
    closed() {
        this._onClosed.next(this.lastResult);
    }
    created(el) {
        this._onCreated.next(el);
    }
    onClosedPromise() {
        return this.onClosed.pipe(Object(first["a" /* first */])()).toPromise();
    }
}

// CONCATENATED MODULE: ./jslib/angular/src/components/modal/dynamic-modal.component.ts








const dynamic_modal_component_c0 = ["modalContent"];
function DynamicModalComponent_ng_template_0_Template(rf, ctx) { }
class DynamicModalComponent {
    constructor(modalService, cd, el, focusTrapFactory, modalRef) {
        this.modalService = modalService;
        this.cd = cd;
        this.el = el;
        this.focusTrapFactory = focusTrapFactory;
        this.modalRef = modalRef;
    }
    ngAfterViewInit() {
        this.loadChildComponent(this.childComponentType);
        if (this.setComponentParameters != null) {
            this.setComponentParameters(this.componentRef.instance);
        }
        this.cd.detectChanges();
        this.modalRef.created(this.el.nativeElement);
        this.focusTrap = this.focusTrapFactory.create(this.el.nativeElement.querySelector('.modal-dialog'));
        if (this.el.nativeElement.querySelector('[appAutoFocus]') == null) {
            this.focusTrap.focusFirstTabbableElementWhenReady();
        }
    }
    loadChildComponent(componentType) {
        const componentFactory = this.modalService.resolveComponentFactory(componentType);
        this.modalContentRef.clear();
        this.componentRef = this.modalContentRef.createComponent(componentFactory);
    }
    ngOnDestroy() {
        if (this.componentRef) {
            this.componentRef.destroy();
        }
        this.focusTrap.destroy();
    }
    close() {
        this.modalRef.close();
    }
    getFocus() {
        const autoFocusEl = this.el.nativeElement.querySelector('[appAutoFocus]');
        autoFocusEl === null || autoFocusEl === void 0 ? void 0 : autoFocusEl.focus();
    }
}
DynamicModalComponent.ɵfac = function DynamicModalComponent_Factory(t) { return new (t || DynamicModalComponent)(core["dc" /* ɵɵdirectiveInject */](modal_service_ModalService), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */]), core["dc" /* ɵɵdirectiveInject */](a11y["b" /* ConfigurableFocusTrapFactory */]), core["dc" /* ɵɵdirectiveInject */](modal_ref_ModalRef)); };
DynamicModalComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: DynamicModalComponent, selectors: [["app-modal"]], viewQuery: function DynamicModalComponent_Query(rf, ctx) { if (rf & 1) {
        core["Uc" /* ɵɵviewQuery */](dynamic_modal_component_c0, 3, core["gb" /* ViewContainerRef */]);
    } if (rf & 2) {
        let _t;
        core["Hc" /* ɵɵqueryRefresh */](_t = core["rc" /* ɵɵloadQuery */]()) && (ctx.modalContentRef = _t.first);
    } }, decls: 2, vars: 0, consts: [["modalContent", ""]], template: function DynamicModalComponent_Template(rf, ctx) { if (rf & 1) {
        core["Oc" /* ɵɵtemplate */](0, DynamicModalComponent_ng_template_0_Template, 0, 0, "ng-template", null, 0, core["Pc" /* ɵɵtemplateRefExtractor */]);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](DynamicModalComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-modal',
                template: '<ng-template #modalContent></ng-template>',
            }]
    }], function () { return [{ type: modal_service_ModalService }, { type: core["j" /* ChangeDetectorRef */] }, { type: core["r" /* ElementRef */] }, { type: a11y["b" /* ConfigurableFocusTrapFactory */] }, { type: modal_ref_ModalRef }]; }, { modalContentRef: [{
            type: core["fb" /* ViewChild */],
            args: ['modalContent', { read: core["gb" /* ViewContainerRef */], static: true }]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/modal/modal-injector.ts
class ModalInjector {
    constructor(_parentInjector, _additionalTokens) {
        this._parentInjector = _parentInjector;
        this._additionalTokens = _additionalTokens;
    }
    get(token, notFoundValue, flags) {
        var _a;
        return (_a = this._additionalTokens.get(token)) !== null && _a !== void 0 ? _a : this._parentInjector.get(token, notFoundValue);
    }
}

// CONCATENATED MODULE: ./jslib/angular/src/services/modal.service.ts
var modal_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






class ModalConfig {
    constructor() {
        this.allowMultipleModals = false;
    }
}
class modal_service_ModalService {
    constructor(componentFactoryResolver, applicationRef, injector) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.applicationRef = applicationRef;
        this.injector = injector;
        this.modalList = [];
        // Lazy loaded modules are not available in componentFactoryResolver,
        // therefore modules needs to manually initialize their resolvers.
        this.factoryResolvers = new Map();
        document.addEventListener('keyup', event => {
            if (event.key === 'Escape' && this.modalCount > 0) {
                this.topModal.instance.close();
            }
        });
    }
    get modalCount() {
        return this.modalList.length;
    }
    get topModal() {
        return this.modalList[this.modalCount - 1];
    }
    openViewRef(componentType, viewContainerRef, setComponentParameters = null) {
        return modal_service_awaiter(this, void 0, void 0, function* () {
            const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);
            modalComponentRef.instance.setComponentParameters = setComponentParameters;
            viewContainerRef.insert(modalComponentRef.hostView);
            yield modalRef.onCreated.pipe(Object(first["a" /* first */])()).toPromise();
            return [modalRef, modalComponentRef.instance.componentRef.instance];
        });
    }
    open(componentType, config) {
        var _a;
        if (!((_a = config === null || config === void 0 ? void 0 : config.allowMultipleModals) !== null && _a !== void 0 ? _a : false) && this.modalCount > 0) {
            return;
        }
        const [modalRef, _] = this.openInternal(componentType, config, true);
        return modalRef;
    }
    registerComponentFactoryResolver(componentType, componentFactoryResolver) {
        this.factoryResolvers.set(componentType, componentFactoryResolver);
    }
    resolveComponentFactory(componentType) {
        if (this.factoryResolvers.has(componentType)) {
            return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);
        }
        return this.componentFactoryResolver.resolveComponentFactory(componentType);
    }
    openInternal(componentType, config, attachToDom) {
        const [modalRef, componentRef] = this.createModalComponent(config);
        componentRef.instance.childComponentType = componentType;
        if (attachToDom) {
            this.applicationRef.attachView(componentRef.hostView);
            const domElem = componentRef.hostView.rootNodes[0];
            document.body.appendChild(domElem);
        }
        modalRef.onClosed.pipe(Object(first["a" /* first */])()).subscribe(() => {
            if (attachToDom) {
                this.applicationRef.detachView(componentRef.hostView);
            }
            componentRef.destroy();
            this.modalList.pop();
            if (this.modalCount > 0) {
                this.topModal.instance.getFocus();
            }
        });
        this.setupHandlers(modalRef);
        this.modalList.push(componentRef);
        return [modalRef, componentRef];
    }
    setupHandlers(modalRef) {
        let backdrop = null;
        // Add backdrop, setup [data-dismiss] handler.
        modalRef.onCreated.pipe(Object(first["a" /* first */])()).subscribe(el => {
            document.body.classList.add('modal-open');
            const modalEl = el.querySelector('.modal');
            const dialogEl = modalEl.querySelector('.modal-dialog');
            backdrop = document.createElement('div');
            backdrop.className = 'modal-backdrop fade';
            backdrop.style.zIndex = `${this.modalCount}040`;
            modalEl.prepend(backdrop);
            dialogEl.addEventListener('click', (e) => {
                e.stopPropagation();
            });
            dialogEl.style.zIndex = `${this.modalCount}050`;
            const modals = Array.from(el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss="modal"]'));
            for (const closeElement of modals) {
                closeElement.addEventListener('click', event => {
                    modalRef.close();
                });
            }
        });
        // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.
        modalRef.onClose.pipe(Object(first["a" /* first */])()).subscribe(() => {
            modalRef.closed();
            if (this.modalCount === 0) {
                document.body.classList.remove('modal-open');
            }
        });
    }
    createModalComponent(config) {
        const modalRef = new modal_ref_ModalRef();
        const map = new WeakMap();
        map.set(ModalConfig, config);
        map.set(modal_ref_ModalRef, modalRef);
        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);
        const componentRef = componentFactory.create(new ModalInjector(this.injector, map));
        return [modalRef, componentRef];
    }
}
modal_service_ModalService.ɵfac = function ModalService_Factory(t) { return new (t || modal_service_ModalService)(core["nc" /* ɵɵinject */](core["m" /* ComponentFactoryResolver */]), core["nc" /* ɵɵinject */](core["g" /* ApplicationRef */]), core["nc" /* ɵɵinject */](core["C" /* Injector */])); };
modal_service_ModalService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: modal_service_ModalService, factory: modal_service_ModalService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](modal_service_ModalService, [{
        type: core["A" /* Injectable */]
    }], function () { return [{ type: core["m" /* ComponentFactoryResolver */] }, { type: core["g" /* ApplicationRef */] }, { type: core["C" /* Injector */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/set-pin.component.ts
var set_pin_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
















class set_pin_component_SetPinComponent {
    constructor(modalRef, cryptoService, userService, storageService, vaultTimeoutService, keyConnectorService) {
        this.modalRef = modalRef;
        this.cryptoService = cryptoService;
        this.userService = userService;
        this.storageService = storageService;
        this.vaultTimeoutService = vaultTimeoutService;
        this.keyConnectorService = keyConnectorService;
        this.pin = '';
        this.showPin = false;
        this.masterPassOnRestart = true;
        this.showMasterPassOnRestart = true;
    }
    ngOnInit() {
        return set_pin_component_awaiter(this, void 0, void 0, function* () {
            this.showMasterPassOnRestart = this.masterPassOnRestart = !(yield this.keyConnectorService.getUsesKeyConnector());
        });
    }
    toggleVisibility() {
        this.showPin = !this.showPin;
    }
    submit() {
        return set_pin_component_awaiter(this, void 0, void 0, function* () {
            if (utils["a" /* Utils */].isNullOrWhitespace(this.pin)) {
                this.modalRef.close(false);
            }
            const kdf = yield this.userService.getKdf();
            const kdfIterations = yield this.userService.getKdfIterations();
            const email = yield this.userService.getEmail();
            const pinKey = yield this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);
            const key = yield this.cryptoService.getKey();
            const pinProtectedKey = yield this.cryptoService.encrypt(key.key, pinKey);
            if (this.masterPassOnRestart) {
                const encPin = yield this.cryptoService.encrypt(this.pin);
                yield this.storageService.save(constants_service["a" /* ConstantsService */].protectedPin, encPin.encryptedString);
                this.vaultTimeoutService.pinProtectedKey = pinProtectedKey;
            }
            else {
                yield this.storageService.save(constants_service["a" /* ConstantsService */].pinProtectedKey, pinProtectedKey.encryptedString);
            }
            this.modalRef.close(true);
        });
    }
}
set_pin_component_SetPinComponent.ɵfac = function SetPinComponent_Factory(t) { return new (t || set_pin_component_SetPinComponent)(core["dc" /* ɵɵdirectiveInject */](modal_ref_ModalRef), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](VaultTimeoutService), core["dc" /* ɵɵdirectiveInject */](KeyConnectorService)); };
set_pin_component_SetPinComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: set_pin_component_SetPinComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](set_pin_component_SetPinComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: modal_ref_ModalRef }, { type: CryptoService }, { type: UserService }, { type: StorageService }, { type: VaultTimeoutService }, { type: KeyConnectorService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/components/set-pin.component.ts











function SetPinComponent_div_40_Template(rf, ctx) { if (rf & 1) {
    const _r3 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 18);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 19);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "input", 20);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SetPinComponent_div_40_Template_input_ngModelChange_4_listener($event) { core["Jc" /* ɵɵrestoreView */](_r3); const ctx_r2 = core["uc" /* ɵɵnextContext */](); return ctx_r2.masterPassOnRestart = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "span");
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.masterPassOnRestart);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 2, "lockWithMasterPassOnRestart"));
} }
const set_pin_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
class components_set_pin_component_SetPinComponent extends set_pin_component_SetPinComponent {
}
components_set_pin_component_SetPinComponent.ɵfac = function SetPinComponent_Factory(t) { return ɵSetPinComponent_BaseFactory(t || components_set_pin_component_SetPinComponent); };
components_set_pin_component_SetPinComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: components_set_pin_component_SetPinComponent, selectors: [["ng-component"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 60, vars: 22, consts: [["role", "dialog", "aria-modal", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog", "modal-dialog-scrollable"], [1, "modal-content", 3, "ngSubmit"], ["form", ""], [1, "modal-body"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-flex"], [1, "row-main"], ["for", "pin"], ["id", "pin", "name", "Pin", "required", "", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], ["class", "checkbox", 4, "ngIf"], [1, "modal-footer"], ["type", "submit", "appBlurClick", "", 1, "btn", "btn-primary", "btn-submit"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-outline-secondary"], [1, "checkbox"], ["for", "masterPasswordOnRestart"], ["type", "checkbox", "id", "masterPasswordOnRestart", "name", "MasterPasswordOnRestart", 3, "ngModel", "ngModelChange"]], template: function SetPinComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "div", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 1);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "form", 2, 3);
        core["qc" /* ɵɵlistener */]("ngSubmit", function SetPinComponent_Template_form_ngSubmit_4_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "div", 4);
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "div");
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["jc" /* ɵɵelementStart */](13, "div", 5);
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 6);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "div", 7);
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 8);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "label", 9);
        core["Qc" /* ɵɵtext */](22);
        core["vc" /* ɵɵpipe */](23, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "input", 10);
        core["qc" /* ɵɵlistener */]("ngModelChange", function SetPinComponent_Template_input_ngModelChange_25_listener($event) { return ctx.pin = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](27, " ");
        core["jc" /* ɵɵelementStart */](28, "div", 11);
        core["Qc" /* ɵɵtext */](29, " ");
        core["jc" /* ɵɵelementStart */](30, "button", 12);
        core["qc" /* ɵɵlistener */]("click", function SetPinComponent_Template_button_click_30_listener() { return ctx.toggleVisibility(); });
        core["vc" /* ɵɵpipe */](31, "i18n");
        core["Qc" /* ɵɵtext */](32, " ");
        core["ec" /* ɵɵelement */](33, "i", 13);
        core["Qc" /* ɵɵtext */](34, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](35, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](36, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](37, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](38, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](39, " ");
        core["Oc" /* ɵɵtemplate */](40, SetPinComponent_div_40_Template, 11, 4, "div", 14);
        core["Qc" /* ɵɵtext */](41, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](42, " ");
        core["jc" /* ɵɵelementStart */](43, "div", 15);
        core["Qc" /* ɵɵtext */](44, " ");
        core["jc" /* ɵɵelementStart */](45, "button", 16);
        core["Qc" /* ɵɵtext */](46, " ");
        core["jc" /* ɵɵelementStart */](47, "span");
        core["Qc" /* ɵɵtext */](48);
        core["vc" /* ɵɵpipe */](49, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](50, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](51, " ");
        core["jc" /* ɵɵelementStart */](52, "button", 17);
        core["Qc" /* ɵɵtext */](53);
        core["vc" /* ɵɵpipe */](54, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](55, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](56, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](57, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](58, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](59, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](10);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](11, 9, "setYourPinCode"), " ");
        core["Sb" /* ɵɵadvance */](12);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](23, 11, "pin"));
        core["Sb" /* ɵɵadvance */](3);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.showPin ? "text" : "password");
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.pin);
        core["Sb" /* ɵɵadvance */](5);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](31, 13, "toggleVisibility"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](19, set_pin_component_c0, !ctx.showPin, ctx.showPin));
        core["Sb" /* ɵɵadvance */](7);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showMasterPassOnRestart);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](49, 15, "ok"));
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](54, 17, "cancel"), " ");
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], InputVerbatimDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], StopClickDirective, BlurClickDirective, A11yTitleDirective, common["j" /* NgClass */], common["l" /* NgIf */], fesm2015_forms["a" /* CheckboxControlValueAccessor */]], pipes: [I18nPipe], encapsulation: 2 });
const ɵSetPinComponent_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](components_set_pin_component_SetPinComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](components_set_pin_component_SetPinComponent, [{
        type: core["l" /* Component */],
        args: [{
                templateUrl: 'set-pin.component.html',
            }]
    }], null, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/settings/vault-timeout-input.component.ts
var vault_timeout_input_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};









class vault_timeout_input_component_VaultTimeoutInputComponent {
    constructor(fb, policyService, i18nService) {
        this.fb = fb;
        this.policyService = policyService;
        this.i18nService = i18nService;
        this.form = this.fb.group({
            vaultTimeout: [null],
            custom: this.fb.group({
                hours: [null],
                minutes: [null],
            }),
        });
    }
    get showCustom() {
        return this.form.get('vaultTimeout').value === vault_timeout_input_component_VaultTimeoutInputComponent.CUSTOM_VALUE;
    }
    ngOnInit() {
        return vault_timeout_input_component_awaiter(this, void 0, void 0, function* () {
            if (yield this.policyService.policyAppliesToUser(policyType["a" /* PolicyType */].MaximumVaultTimeout)) {
                const vaultTimeoutPolicy = yield this.policyService.getAll(policyType["a" /* PolicyType */].MaximumVaultTimeout);
                this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];
                this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);
                this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;
                this.vaultTimeouts = this.vaultTimeouts.filter(t => t.value <= this.vaultTimeoutPolicy.data.minutes &&
                    (t.value > 0 || t.value === vault_timeout_input_component_VaultTimeoutInputComponent.CUSTOM_VALUE) &&
                    t.value != null);
                this.validatorChange();
            }
            this.form.valueChanges.subscribe((value) => vault_timeout_input_component_awaiter(this, void 0, void 0, function* () {
                this.onChange(this.getVaultTimeout(value));
            }));
            // Assign the previous value to the custom fields
            this.form.get('vaultTimeout').valueChanges.subscribe(value => {
                if (value !== vault_timeout_input_component_VaultTimeoutInputComponent.CUSTOM_VALUE) {
                    return;
                }
                const current = Math.max(this.form.value.vaultTimeout, 0);
                this.form.patchValue({
                    custom: {
                        hours: Math.floor(current / 60),
                        minutes: current % 60,
                    },
                });
            });
        });
    }
    ngOnChanges() {
        this.vaultTimeouts.push({ name: this.i18nService.t('custom'), value: vault_timeout_input_component_VaultTimeoutInputComponent.CUSTOM_VALUE });
    }
    getVaultTimeout(value) {
        if (value.vaultTimeout !== vault_timeout_input_component_VaultTimeoutInputComponent.CUSTOM_VALUE) {
            return value.vaultTimeout;
        }
        return value.custom.hours * 60 + value.custom.minutes;
    }
    writeValue(value) {
        if (value == null) {
            return;
        }
        if (this.vaultTimeouts.every(p => p.value !== value)) {
            this.form.setValue({
                vaultTimeout: vault_timeout_input_component_VaultTimeoutInputComponent.CUSTOM_VALUE,
                custom: {
                    hours: Math.floor(value / 60),
                    minutes: value % 60,
                },
            });
            return;
        }
        this.form.patchValue({
            vaultTimeout: value,
        });
    }
    registerOnChange(onChange) {
        this.onChange = onChange;
    }
    // tslint:disable-next-line
    registerOnTouched(onTouched) { }
    // tslint:disable-next-line
    setDisabledState(isDisabled) { }
    validate(control) {
        var _a, _b;
        if (this.vaultTimeoutPolicy && ((_b = (_a = this.vaultTimeoutPolicy) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.minutes) < control.value) {
            return { policyError: true };
        }
        return null;
    }
    registerOnValidatorChange(fn) {
        this.validatorChange = fn;
    }
}
vault_timeout_input_component_VaultTimeoutInputComponent.CUSTOM_VALUE = -100;
vault_timeout_input_component_VaultTimeoutInputComponent.ɵfac = function VaultTimeoutInputComponent_Factory(t) { return new (t || vault_timeout_input_component_VaultTimeoutInputComponent)(core["dc" /* ɵɵdirectiveInject */](fesm2015_forms["d" /* FormBuilder */]), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](I18nService)); };
vault_timeout_input_component_VaultTimeoutInputComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: vault_timeout_input_component_VaultTimeoutInputComponent, inputs: { vaultTimeouts: "vaultTimeouts" }, features: [core["Qb" /* ɵɵNgOnChangesFeature */]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_timeout_input_component_VaultTimeoutInputComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: fesm2015_forms["d" /* FormBuilder */] }, { type: PolicyService }, { type: I18nService }]; }, { vaultTimeouts: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/settings/vault-timeout-input.component.ts









function VaultTimeoutInputComponent_app_callout_0_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 7);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["yc" /* ɵɵpipeBind3 */](2, 1, "vaultTimeoutPolicyInEffect", ctx_r0.vaultTimeoutPolicyHours, ctx_r0.vaultTimeoutPolicyMinutes), " ");
} }
function VaultTimeoutInputComponent_option_12_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 8);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r3 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r3.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r3.name);
} }
function VaultTimeoutInputComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 9);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 10);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 11);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 12);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "label", 13);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["ec" /* ɵɵelement */](12, "input", 14);
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "div", 11);
    core["Qc" /* ɵɵtext */](17, " ");
    core["jc" /* ɵɵelementStart */](18, "div", 12);
    core["Qc" /* ɵɵtext */](19, " ");
    core["jc" /* ɵɵelementStart */](20, "label", 13);
    core["Qc" /* ɵɵtext */](21);
    core["vc" /* ɵɵpipe */](22, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["ec" /* ɵɵelement */](24, "input", 15);
    core["Qc" /* ɵɵtext */](25, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](26, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](27, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 2, "hours"));
    core["Sb" /* ɵɵadvance */](12);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](22, 4, "minutes"));
} }
class settings_vault_timeout_input_component_VaultTimeoutInputComponent extends vault_timeout_input_component_VaultTimeoutInputComponent {
}
settings_vault_timeout_input_component_VaultTimeoutInputComponent.ɵfac = function VaultTimeoutInputComponent_Factory(t) { return ɵVaultTimeoutInputComponent_BaseFactory(t || settings_vault_timeout_input_component_VaultTimeoutInputComponent); };
settings_vault_timeout_input_component_VaultTimeoutInputComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: settings_vault_timeout_input_component_VaultTimeoutInputComponent, selectors: [["app-vault-timeout-input"]], features: [core["Rb" /* ɵɵProvidersFeature */]([
            {
                provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                multi: true,
                useExisting: settings_vault_timeout_input_component_VaultTimeoutInputComponent,
            },
            {
                provide: fesm2015_forms["m" /* NG_VALIDATORS */],
                multi: true,
                useExisting: settings_vault_timeout_input_component_VaultTimeoutInputComponent,
            },
        ]), core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 19, vars: 7, consts: [["type", "info", 4, "ngIf"], [3, "formGroup"], ["appBoxRow", "", 1, "box-content-row", "last", "display-block"], ["for", "vaultTimeout"], ["id", "vaultTimeout", "name", "VaultTimeout", "formControlName", "vaultTimeout", 1, "form-control"], [3, "ngValue", 4, "ngFor", "ngForOf"], ["class", "box-content-row last", 4, "ngIf"], ["type", "info"], [3, "ngValue"], [1, "box-content-row", "last"], ["formGroupName", "custom", 1, "row"], [1, "col"], ["appBoxRow", "", 1, "display-block"], ["for", "customVaultTimeout"], ["id", "hours", "type", "number", "min", "0", "name", "hours", "formControlName", "hours", 1, "form-control"], ["id", "minutes", "type", "number", "min", "0", "max", "59", "name", "minutes", "formControlName", "minutes", 1, "form-control"]], template: function VaultTimeoutInputComponent_Template(rf, ctx) { if (rf & 1) {
        core["Oc" /* ɵɵtemplate */](0, VaultTimeoutInputComponent_app_callout_0_Template, 3, 5, "app-callout", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 1);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "div", 2);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "label", 3);
        core["Qc" /* ɵɵtext */](7);
        core["vc" /* ɵɵpipe */](8, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](9, " ");
        core["jc" /* ɵɵelementStart */](10, "select", 4);
        core["Qc" /* ɵɵtext */](11, " ");
        core["Oc" /* ɵɵtemplate */](12, VaultTimeoutInputComponent_option_12_Template, 2, 2, "option", 5);
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](15, " ");
        core["Oc" /* ɵɵtemplate */](16, VaultTimeoutInputComponent_div_16_Template, 29, 6, "div", 6);
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
    } if (rf & 2) {
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.vaultTimeoutPolicy);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("formGroup", ctx.form);
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 5, "vaultTimeout"));
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngForOf", ctx.vaultTimeouts);
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showCustom);
    } }, directives: [common["l" /* NgIf */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["i" /* FormGroupDirective */], BoxRowDirective, fesm2015_forms["y" /* SelectControlValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["g" /* FormControlName */], common["k" /* NgForOf */], CalloutComponent, fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */], fesm2015_forms["j" /* FormGroupName */], fesm2015_forms["t" /* NumberValueAccessor */], fesm2015_forms["c" /* DefaultValueAccessor */]], pipes: [I18nPipe], encapsulation: 2 });
const ɵVaultTimeoutInputComponent_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](settings_vault_timeout_input_component_VaultTimeoutInputComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](settings_vault_timeout_input_component_VaultTimeoutInputComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-timeout-input',
                templateUrl: 'vault-timeout-input.component.html',
                providers: [
                    {
                        provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                        multi: true,
                        useExisting: settings_vault_timeout_input_component_VaultTimeoutInputComponent,
                    },
                    {
                        provide: fesm2015_forms["m" /* NG_VALIDATORS */],
                        multi: true,
                        useExisting: settings_vault_timeout_input_component_VaultTimeoutInputComponent,
                    },
                ],
            }]
    }], null, null); })();

// CONCATENATED MODULE: ./src/popup/settings/settings.component.ts
var settings_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










































const settings_component_c0 = ["vaultTimeoutActionSelect"];
function SettingsComponent_option_75_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 30);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r5 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r5.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r5.name);
} }
function SettingsComponent_div_88_Template(rf, ctx) { if (rf & 1) {
    const _r7 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 18);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 31);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "input", 32);
    core["qc" /* ɵɵlistener */]("change", function SettingsComponent_div_88_Template_input_change_6_listener() { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r6 = core["uc" /* ɵɵnextContext */](); return ctx_r6.updateBiometric(); })("ngModelChange", function SettingsComponent_div_88_Template_input_ngModelChange_6_listener($event) { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r8 = core["uc" /* ɵɵnextContext */](); return ctx_r8.biometric = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "unlockWithBiometrics"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r2.biometric);
} }
function SettingsComponent_div_90_Template(rf, ctx) { if (rf & 1) {
    const _r10 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 18);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 33);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "input", 34);
    core["qc" /* ɵɵlistener */]("change", function SettingsComponent_div_90_Template_input_change_6_listener() { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r9 = core["uc" /* ɵɵnextContext */](); return ctx_r9.updateAutoBiometricsPrompt(); })("ngModelChange", function SettingsComponent_div_90_Template_input_ngModelChange_6_listener($event) { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r11 = core["uc" /* ɵɵnextContext */](); return ctx_r11.disableAutoBiometricsPrompt = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "disableAutoBiometricsPrompt"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("disabled", !ctx_r3.biometric)("ngModel", ctx_r3.disableAutoBiometricsPrompt);
} }
function SettingsComponent_button_137_Template(rf, ctx) { if (rf & 1) {
    const _r13 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 22);
    core["qc" /* ɵɵlistener */]("click", function SettingsComponent_button_137_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r13); const ctx_r12 = core["uc" /* ɵɵnextContext */](); return ctx_r12.changePassword(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 8);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 9);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 1, "changeMasterPassword"));
} }
const RateUrls = {
    [enums_deviceType["a" /* DeviceType */].ChromeExtension]: 'https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews',
    [enums_deviceType["a" /* DeviceType */].FirefoxExtension]: 'https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews',
    [enums_deviceType["a" /* DeviceType */].OperaExtension]: 'https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container',
    [enums_deviceType["a" /* DeviceType */].EdgeExtension]: 'https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh',
    [enums_deviceType["a" /* DeviceType */].VivaldiExtension]: 'https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews',
    [enums_deviceType["a" /* DeviceType */].SafariExtension]: 'https://apps.apple.com/app/bitwarden/id1352778147',
};
class settings_component_SettingsComponent {
    constructor(platformUtilsService, i18nService, vaultTimeoutService, storageService, messagingService, router, environmentService, cryptoService, userService, popupUtilsService, modalService, toasterService, keyConnectorService) {
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.vaultTimeoutService = vaultTimeoutService;
        this.storageService = storageService;
        this.messagingService = messagingService;
        this.router = router;
        this.environmentService = environmentService;
        this.cryptoService = cryptoService;
        this.userService = userService;
        this.popupUtilsService = popupUtilsService;
        this.modalService = modalService;
        this.toasterService = toasterService;
        this.keyConnectorService = keyConnectorService;
        this.pin = null;
        this.biometric = false;
        this.disableAutoBiometricsPrompt = true;
        this.previousVaultTimeout = null;
        this.showChangeMasterPass = true;
        this.vaultTimeout = new fesm2015_forms["e" /* FormControl */](null);
    }
    ngOnInit() {
        var _a;
        return settings_component_awaiter(this, void 0, void 0, function* () {
            const showOnLocked = !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();
            this.vaultTimeouts = [
                { name: this.i18nService.t('immediately'), value: 0 },
                { name: this.i18nService.t('oneMinute'), value: 1 },
                { name: this.i18nService.t('fiveMinutes'), value: 5 },
                { name: this.i18nService.t('fifteenMinutes'), value: 15 },
                { name: this.i18nService.t('thirtyMinutes'), value: 30 },
                { name: this.i18nService.t('oneHour'), value: 60 },
                { name: this.i18nService.t('fourHours'), value: 240 },
            ];
            if (showOnLocked) {
                this.vaultTimeouts.push({ name: this.i18nService.t('onLocked'), value: -2 });
            }
            this.vaultTimeouts.push({ name: this.i18nService.t('onRestart'), value: -1 });
            this.vaultTimeouts.push({ name: this.i18nService.t('never'), value: null });
            this.vaultTimeoutActions = [
                { name: this.i18nService.t('lock'), value: 'lock' },
                { name: this.i18nService.t('logOut'), value: 'logOut' },
            ];
            let timeout = yield this.vaultTimeoutService.getVaultTimeout();
            if (timeout != null) {
                if (timeout === -2 && !showOnLocked) {
                    timeout = -1;
                }
                this.vaultTimeout.setValue(timeout);
            }
            this.previousVaultTimeout = this.vaultTimeout.value;
            this.vaultTimeout.valueChanges.subscribe(value => {
                this.saveVaultTimeout(value);
            });
            const action = yield this.storageService.get(constants_service["a" /* ConstantsService */].vaultTimeoutActionKey);
            this.vaultTimeoutAction = action == null ? 'lock' : action;
            const pinSet = yield this.vaultTimeoutService.isPinLockSet();
            this.pin = pinSet[0] || pinSet[1];
            this.supportsBiometric = yield this.platformUtilsService.supportsBiometric();
            this.biometric = yield this.vaultTimeoutService.isBiometricLockSet();
            this.disableAutoBiometricsPrompt = (_a = yield this.storageService.get(constants_service["a" /* ConstantsService */].disableAutoBiometricsPromptKey)) !== null && _a !== void 0 ? _a : true;
            this.showChangeMasterPass = !(yield this.keyConnectorService.getUsesKeyConnector());
        });
    }
    saveVaultTimeout(newValue) {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            if (newValue == null) {
                const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('neverLockWarning'), null, this.i18nService.t('yes'), this.i18nService.t('cancel'), 'warning');
                if (!confirmed) {
                    this.vaultTimeout.setValue(this.previousVaultTimeout);
                    return;
                }
            }
            if (!this.vaultTimeout.valid) {
                this.toasterService.popAsync('error', null, this.i18nService.t('vaultTimeoutToLarge'));
                return;
            }
            this.previousVaultTimeout = this.vaultTimeout.value;
            yield this.vaultTimeoutService.setVaultTimeoutOptions(this.vaultTimeout.value, this.vaultTimeoutAction);
            if (this.previousVaultTimeout == null) {
                this.messagingService.send('bgReseedStorage');
            }
        });
    }
    saveVaultTimeoutAction(newValue) {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            if (newValue === 'logOut') {
                const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('vaultTimeoutLogOutConfirmation'), this.i18nService.t('vaultTimeoutLogOutConfirmationTitle'), this.i18nService.t('yes'), this.i18nService.t('cancel'), 'warning');
                if (!confirmed) {
                    this.vaultTimeoutActions.forEach((option, i) => {
                        if (option.value === this.vaultTimeoutAction) {
                            this.vaultTimeoutActionSelectRef.nativeElement.value = i + ': ' + this.vaultTimeoutAction;
                        }
                    });
                    return;
                }
            }
            if (!this.vaultTimeout.valid) {
                this.toasterService.popAsync('error', null, this.i18nService.t('vaultTimeoutToLarge'));
                return;
            }
            this.vaultTimeoutAction = newValue;
            yield this.vaultTimeoutService.setVaultTimeoutOptions(this.vaultTimeout.value, this.vaultTimeoutAction);
        });
    }
    updatePin() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            if (this.pin) {
                const ref = this.modalService.open(components_set_pin_component_SetPinComponent, { allowMultipleModals: true });
                if (ref == null) {
                    this.pin = false;
                    return;
                }
                this.pin = yield ref.onClosedPromise();
            }
            else {
                yield this.cryptoService.clearPinProtectedKey();
                yield this.vaultTimeoutService.clear();
            }
        });
    }
    updateBiometric() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            if (this.biometric && this.supportsBiometric) {
                let granted;
                try {
                    granted = yield browserApi["a" /* BrowserApi */].requestPermission({ permissions: ['nativeMessaging'] });
                }
                catch (e) {
                    // tslint:disable-next-line
                    console.error(e);
                    if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {
                        yield this.platformUtilsService.showDialog(this.i18nService.t('nativeMessaginPermissionSidebarDesc'), this.i18nService.t('nativeMessaginPermissionSidebarTitle'), this.i18nService.t('ok'), null);
                        this.biometric = false;
                        return;
                    }
                }
                if (!granted) {
                    yield this.platformUtilsService.showDialog(this.i18nService.t('nativeMessaginPermissionErrorDesc'), this.i18nService.t('nativeMessaginPermissionErrorTitle'), this.i18nService.t('ok'), null);
                    this.biometric = false;
                    return;
                }
                const submitted = sweetalert2["a" /* default */].fire({
                    heightAuto: false,
                    buttonsStyling: false,
                    titleText: this.i18nService.t('awaitDesktop'),
                    text: this.i18nService.t('awaitDesktopDesc'),
                    icon: 'info',
                    iconHtml: '<i class="swal-custom-icon fa fa-info-circle text-info"></i>',
                    showCancelButton: true,
                    cancelButtonText: this.i18nService.t('cancel'),
                    showConfirmButton: false,
                    allowOutsideClick: false,
                });
                yield this.storageService.save(constants_service["a" /* ConstantsService */].biometricAwaitingAcceptance, true);
                yield this.cryptoService.toggleKey();
                yield Promise.race([
                    submitted.then(result => {
                        if (result.dismiss === sweetalert2["a" /* default */].DismissReason.cancel) {
                            this.biometric = false;
                            this.storageService.remove(constants_service["a" /* ConstantsService */].biometricAwaitingAcceptance);
                        }
                    }),
                    this.platformUtilsService.authenticateBiometric().then(result => {
                        this.biometric = result;
                        sweetalert2["a" /* default */].close();
                        if (this.biometric === false) {
                            this.platformUtilsService.showToast('error', this.i18nService.t('errorEnableBiometricTitle'), this.i18nService.t('errorEnableBiometricDesc'));
                        }
                    }).catch(e => {
                        // Handle connection errors
                        this.biometric = false;
                    }),
                ]);
            }
            else {
                yield this.storageService.remove(constants_service["a" /* ConstantsService */].biometricUnlockKey);
                this.vaultTimeoutService.biometricLocked = false;
            }
        });
    }
    updateAutoBiometricsPrompt() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            yield this.storageService.save(constants_service["a" /* ConstantsService */].disableAutoBiometricsPromptKey, this.disableAutoBiometricsPrompt);
        });
    }
    lock() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            yield this.vaultTimeoutService.lock(true);
        });
    }
    logOut() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'), this.i18nService.t('logOut'), this.i18nService.t('yes'), this.i18nService.t('cancel'));
            if (confirmed) {
                this.messagingService.send('logout');
            }
        });
    }
    changePassword() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('changeMasterPasswordConfirmation'), this.i18nService.t('changeMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('cancel'));
            if (confirmed) {
                browserApi["a" /* BrowserApi */].createNewTab('https://help.bitwarden.com/article/change-your-master-password/');
            }
        });
    }
    twoStep() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('twoStepLoginConfirmation'), this.i18nService.t('twoStepLogin'), this.i18nService.t('yes'), this.i18nService.t('cancel'));
            if (confirmed) {
                browserApi["a" /* BrowserApi */].createNewTab('https://help.bitwarden.com/article/setup-two-step-login/');
            }
        });
    }
    share() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('learnOrgConfirmation'), this.i18nService.t('learnOrg'), this.i18nService.t('yes'), this.i18nService.t('cancel'));
            if (confirmed) {
                browserApi["a" /* BrowserApi */].createNewTab('https://help.bitwarden.com/article/what-is-an-organization/');
            }
        });
    }
    webVault() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            const url = this.environmentService.getWebVaultUrl();
            browserApi["a" /* BrowserApi */].createNewTab(url);
        });
    }
    import() {
        browserApi["a" /* BrowserApi */].createNewTab('https://help.bitwarden.com/article/import-data/');
    }
    export() {
        this.router.navigate(['/export']);
    }
    help() {
        browserApi["a" /* BrowserApi */].createNewTab('https://help.bitwarden.com/');
    }
    about() {
        const year = (new Date()).getFullYear();
        const versionText = document.createTextNode(this.i18nService.t('version') + ': ' + browserApi["a" /* BrowserApi */].getApplicationVersion());
        const div = document.createElement('div');
        div.innerHTML = `<p class="text-center"><i class="fa fa-shield fa-3x" aria-hidden="true"></i></p>
            <p class="text-center"><b>Bitwarden</b><br>&copy; Bitwarden Inc. 2015-` + year + `</p>`;
        div.appendChild(versionText);
        sweetalert2["a" /* default */].fire({
            heightAuto: false,
            buttonsStyling: false,
            html: div,
            showConfirmButton: false,
            showCancelButton: true,
            cancelButtonText: this.i18nService.t('close'),
        });
    }
    fingerprint() {
        return settings_component_awaiter(this, void 0, void 0, function* () {
            const fingerprint = yield this.cryptoService.getFingerprint(yield this.userService.getUserId());
            const p = document.createElement('p');
            p.innerText = this.i18nService.t('yourAccountsFingerprint') + ':';
            const p2 = document.createElement('p');
            p2.innerText = fingerprint.join('-');
            const div = document.createElement('div');
            div.appendChild(p);
            div.appendChild(p2);
            const result = yield sweetalert2["a" /* default */].fire({
                heightAuto: false,
                buttonsStyling: false,
                html: div,
                showCancelButton: true,
                cancelButtonText: this.i18nService.t('close'),
                showConfirmButton: true,
                confirmButtonText: this.i18nService.t('learnMore'),
            });
            if (result.value) {
                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/fingerprint-phrase/');
            }
        });
    }
    rate() {
        const deviceType = this.platformUtilsService.getDevice();
        browserApi["a" /* BrowserApi */].createNewTab(RateUrls[deviceType]);
    }
}
settings_component_SettingsComponent.ɵfac = function SettingsComponent_Factory(t) { return new (t || settings_component_SettingsComponent)(core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](VaultTimeoutService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](modal_service_ModalService), core["dc" /* ɵɵdirectiveInject */](angular2_toaster["e" /* ToasterService */]), core["dc" /* ɵɵdirectiveInject */](KeyConnectorService)); };
settings_component_SettingsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: settings_component_SettingsComponent, selectors: [["app-settings"]], viewQuery: function SettingsComponent_Query(rf, ctx) { if (rf & 1) {
        core["Uc" /* ɵɵviewQuery */](settings_component_c0, 3, core["r" /* ElementRef */]);
    } if (rf & 2) {
        let _t;
        core["Hc" /* ɵɵqueryRefresh */](_t = core["rc" /* ɵɵloadQuery */]()) && (ctx.vaultTimeoutActionSelectRef = _t.first);
    } }, decls: 256, vars: 83, consts: [[1, "left"], [1, "center"], [1, "title"], [1, "right"], [1, "box", "list"], [1, "box-header"], [1, "box-content", "single-line"], ["routerLink", "/folders", 1, "box-content-row", "box-content-row-flex", "text-default"], [1, "row-main"], ["aria-hidden", "true", 1, "fa", "fa-chevron-right", "fa-lg", "row-sub-icon"], ["routerLink", "/sync", 1, "box-content-row", "box-content-row-flex", "text-default"], ["routerLink", "/excluded-domains", 1, "box-content-row", "box-content-row-flex", "text-default"], ["ngDefaultControl", "", 3, "vaultTimeouts", "formControl"], ["appBoxRow", "", 1, "box-content-row", "display-block"], ["for", "vaultTimeoutAction"], ["id", "vaultTimeoutAction", "name", "VaultTimeoutActions", 3, "ngModel", "ngModelChange"], ["vaultTimeoutActionSelect", ""], [3, "ngValue", 4, "ngFor", "ngForOf"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox"], ["for", "pin"], ["id", "pin", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["class", "box-content-row box-content-row-checkbox", "appBoxRow", "", 4, "ngIf"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", "box-content-row-flex", "text-default", 3, "click"], ["routerLink", "/premium", 1, "box-content-row"], [1, "icon", "text-primary"], ["aria-hidden", "true", 1, "fa", "fa-fw", "fa-lg", "fa-star"], [1, "text", "text-primary"], ["type", "button", "class", "box-content-row box-content-row-flex text-default", "appStopClick", "", "appBlurClick", "", 3, "click", 4, "ngIf"], ["routerLink", "/options", 1, "box-content-row", "box-content-row-flex", "text-default"], [1, "box-footer"], [3, "ngValue"], ["for", "biometric"], ["id", "biometric", "type", "checkbox", 3, "ngModel", "change", "ngModelChange"], ["for", "autoBiometricsPrompt"], ["id", "autoBiometricsPrompt", "type", "checkbox", 3, "disabled", "ngModel", "change", "ngModelChange"]], template: function SettingsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["ec" /* ɵɵelement */](4, "app-pop-out");
        core["Qc" /* ɵɵtext */](5, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "div", 1);
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span", 2);
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ec" /* ɵɵelement */](14, "div", 3);
        core["Qc" /* ɵɵtext */](15, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "content");
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 4);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "div", 5);
        core["Qc" /* ɵɵtext */](22);
        core["vc" /* ɵɵpipe */](23, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "div", 6);
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "a", 7);
        core["Qc" /* ɵɵtext */](28, " ");
        core["jc" /* ɵɵelementStart */](29, "div", 8);
        core["Qc" /* ɵɵtext */](30);
        core["vc" /* ɵɵpipe */](31, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](32, " ");
        core["ec" /* ɵɵelement */](33, "i", 9);
        core["Qc" /* ɵɵtext */](34, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "a", 10);
        core["Qc" /* ɵɵtext */](37, " ");
        core["jc" /* ɵɵelementStart */](38, "div", 8);
        core["Qc" /* ɵɵtext */](39);
        core["vc" /* ɵɵpipe */](40, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](41, " ");
        core["ec" /* ɵɵelement */](42, "i", 9);
        core["Qc" /* ɵɵtext */](43, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](44, " ");
        core["jc" /* ɵɵelementStart */](45, "a", 11);
        core["Qc" /* ɵɵtext */](46, " ");
        core["jc" /* ɵɵelementStart */](47, "div", 8);
        core["Qc" /* ɵɵtext */](48);
        core["vc" /* ɵɵpipe */](49, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](50, " ");
        core["ec" /* ɵɵelement */](51, "i", 9);
        core["Qc" /* ɵɵtext */](52, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](53, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](54, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](55, " ");
        core["jc" /* ɵɵelementStart */](56, "div", 4);
        core["Qc" /* ɵɵtext */](57, " ");
        core["jc" /* ɵɵelementStart */](58, "div", 5);
        core["Qc" /* ɵɵtext */](59);
        core["vc" /* ɵɵpipe */](60, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](61, " ");
        core["jc" /* ɵɵelementStart */](62, "div", 6);
        core["Qc" /* ɵɵtext */](63, " ");
        core["ec" /* ɵɵelement */](64, "app-vault-timeout-input", 12);
        core["Qc" /* ɵɵtext */](65, " ");
        core["jc" /* ɵɵelementStart */](66, "div", 13);
        core["Qc" /* ɵɵtext */](67, " ");
        core["jc" /* ɵɵelementStart */](68, "label", 14);
        core["Qc" /* ɵɵtext */](69);
        core["vc" /* ɵɵpipe */](70, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](71, " ");
        core["jc" /* ɵɵelementStart */](72, "select", 15, 16);
        core["qc" /* ɵɵlistener */]("ngModelChange", function SettingsComponent_Template_select_ngModelChange_72_listener($event) { return ctx.saveVaultTimeoutAction($event); });
        core["Qc" /* ɵɵtext */](74, " ");
        core["Oc" /* ɵɵtemplate */](75, SettingsComponent_option_75_Template, 2, 2, "option", 17);
        core["Qc" /* ɵɵtext */](76, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](77, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](78, " ");
        core["jc" /* ɵɵelementStart */](79, "div", 18);
        core["Qc" /* ɵɵtext */](80, " ");
        core["jc" /* ɵɵelementStart */](81, "label", 19);
        core["Qc" /* ɵɵtext */](82);
        core["vc" /* ɵɵpipe */](83, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](84, " ");
        core["jc" /* ɵɵelementStart */](85, "input", 20);
        core["qc" /* ɵɵlistener */]("change", function SettingsComponent_Template_input_change_85_listener() { return ctx.updatePin(); })("ngModelChange", function SettingsComponent_Template_input_ngModelChange_85_listener($event) { return ctx.pin = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](86, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](87, " ");
        core["Oc" /* ɵɵtemplate */](88, SettingsComponent_div_88_Template, 8, 4, "div", 21);
        core["Qc" /* ɵɵtext */](89, " ");
        core["Oc" /* ɵɵtemplate */](90, SettingsComponent_div_90_Template, 8, 5, "div", 21);
        core["Qc" /* ɵɵtext */](91, " ");
        core["jc" /* ɵɵelementStart */](92, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_92_listener() { return ctx.lock(); });
        core["Qc" /* ɵɵtext */](93, " ");
        core["jc" /* ɵɵelementStart */](94, "div", 8);
        core["Qc" /* ɵɵtext */](95);
        core["vc" /* ɵɵpipe */](96, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](97, " ");
        core["ec" /* ɵɵelement */](98, "i", 9);
        core["Qc" /* ɵɵtext */](99, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](100, " ");
        core["jc" /* ɵɵelementStart */](101, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_101_listener() { return ctx.twoStep(); });
        core["Qc" /* ɵɵtext */](102, " ");
        core["jc" /* ɵɵelementStart */](103, "div", 8);
        core["Qc" /* ɵɵtext */](104);
        core["vc" /* ɵɵpipe */](105, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](106, " ");
        core["ec" /* ɵɵelement */](107, "i", 9);
        core["Qc" /* ɵɵtext */](108, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](109, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](110, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](111, " ");
        core["jc" /* ɵɵelementStart */](112, "div", 4);
        core["Qc" /* ɵɵtext */](113, " ");
        core["jc" /* ɵɵelementStart */](114, "div", 5);
        core["Qc" /* ɵɵtext */](115);
        core["vc" /* ɵɵpipe */](116, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](117, " ");
        core["jc" /* ɵɵelementStart */](118, "div", 6);
        core["Qc" /* ɵɵtext */](119, " ");
        core["jc" /* ɵɵelementStart */](120, "a", 23);
        core["Qc" /* ɵɵtext */](121, " ");
        core["jc" /* ɵɵelementStart */](122, "div", 8);
        core["Qc" /* ɵɵtext */](123, " ");
        core["jc" /* ɵɵelementStart */](124, "div", 24);
        core["ec" /* ɵɵelement */](125, "i", 25);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](126, " ");
        core["jc" /* ɵɵelementStart */](127, "span", 26);
        core["jc" /* ɵɵelementStart */](128, "b");
        core["Qc" /* ɵɵtext */](129);
        core["vc" /* ɵɵpipe */](130, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](131, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](132, " ");
        core["jc" /* ɵɵelementStart */](133, "span");
        core["ec" /* ɵɵelement */](134, "i", 9);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](135, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](136, " ");
        core["Oc" /* ɵɵtemplate */](137, SettingsComponent_button_137_Template, 8, 3, "button", 27);
        core["Qc" /* ɵɵtext */](138, " ");
        core["jc" /* ɵɵelementStart */](139, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_139_listener() { return ctx.fingerprint(); });
        core["Qc" /* ɵɵtext */](140, " ");
        core["jc" /* ɵɵelementStart */](141, "div", 8);
        core["Qc" /* ɵɵtext */](142);
        core["vc" /* ɵɵpipe */](143, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](144, " ");
        core["ec" /* ɵɵelement */](145, "i", 9);
        core["Qc" /* ɵɵtext */](146, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](147, " ");
        core["jc" /* ɵɵelementStart */](148, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_148_listener() { return ctx.logOut(); });
        core["Qc" /* ɵɵtext */](149, " ");
        core["jc" /* ɵɵelementStart */](150, "div", 8);
        core["Qc" /* ɵɵtext */](151);
        core["vc" /* ɵɵpipe */](152, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](153, " ");
        core["ec" /* ɵɵelement */](154, "i", 9);
        core["Qc" /* ɵɵtext */](155, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](156, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](157, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](158, " ");
        core["jc" /* ɵɵelementStart */](159, "div", 4);
        core["Qc" /* ɵɵtext */](160, " ");
        core["jc" /* ɵɵelementStart */](161, "div", 5);
        core["Qc" /* ɵɵtext */](162);
        core["vc" /* ɵɵpipe */](163, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](164, " ");
        core["jc" /* ɵɵelementStart */](165, "div", 6);
        core["Qc" /* ɵɵtext */](166, " ");
        core["jc" /* ɵɵelementStart */](167, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_167_listener() { return ctx.import(); });
        core["Qc" /* ɵɵtext */](168, " ");
        core["jc" /* ɵɵelementStart */](169, "div", 8);
        core["Qc" /* ɵɵtext */](170);
        core["vc" /* ɵɵpipe */](171, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](172, " ");
        core["ec" /* ɵɵelement */](173, "i", 9);
        core["Qc" /* ɵɵtext */](174, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](175, " ");
        core["jc" /* ɵɵelementStart */](176, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_176_listener() { return ctx.export(); });
        core["Qc" /* ɵɵtext */](177, " ");
        core["jc" /* ɵɵelementStart */](178, "div", 8);
        core["Qc" /* ɵɵtext */](179);
        core["vc" /* ɵɵpipe */](180, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](181, " ");
        core["ec" /* ɵɵelement */](182, "i", 9);
        core["Qc" /* ɵɵtext */](183, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](184, " ");
        core["jc" /* ɵɵelementStart */](185, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_185_listener() { return ctx.webVault(); });
        core["Qc" /* ɵɵtext */](186, " ");
        core["jc" /* ɵɵelementStart */](187, "div", 8);
        core["Qc" /* ɵɵtext */](188);
        core["vc" /* ɵɵpipe */](189, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](190, " ");
        core["ec" /* ɵɵelement */](191, "i", 9);
        core["Qc" /* ɵɵtext */](192, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](193, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](194, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](195, " ");
        core["jc" /* ɵɵelementStart */](196, "div", 4);
        core["Qc" /* ɵɵtext */](197, " ");
        core["jc" /* ɵɵelementStart */](198, "div", 5);
        core["Qc" /* ɵɵtext */](199);
        core["vc" /* ɵɵpipe */](200, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](201, " ");
        core["jc" /* ɵɵelementStart */](202, "div", 6);
        core["Qc" /* ɵɵtext */](203, " ");
        core["jc" /* ɵɵelementStart */](204, "a", 28);
        core["Qc" /* ɵɵtext */](205, " ");
        core["jc" /* ɵɵelementStart */](206, "div", 8);
        core["Qc" /* ɵɵtext */](207);
        core["vc" /* ɵɵpipe */](208, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](209, " ");
        core["ec" /* ɵɵelement */](210, "i", 9);
        core["Qc" /* ɵɵtext */](211, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](212, " ");
        core["jc" /* ɵɵelementStart */](213, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_213_listener() { return ctx.about(); });
        core["Qc" /* ɵɵtext */](214, " ");
        core["jc" /* ɵɵelementStart */](215, "div", 8);
        core["Qc" /* ɵɵtext */](216);
        core["vc" /* ɵɵpipe */](217, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](218, " ");
        core["ec" /* ɵɵelement */](219, "i", 9);
        core["Qc" /* ɵɵtext */](220, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](221, " ");
        core["jc" /* ɵɵelementStart */](222, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_222_listener() { return ctx.share(); });
        core["Qc" /* ɵɵtext */](223, " ");
        core["jc" /* ɵɵelementStart */](224, "div", 8);
        core["Qc" /* ɵɵtext */](225);
        core["vc" /* ɵɵpipe */](226, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](227, " ");
        core["ec" /* ɵɵelement */](228, "i", 9);
        core["Qc" /* ɵɵtext */](229, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](230, " ");
        core["jc" /* ɵɵelementStart */](231, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_231_listener() { return ctx.help(); });
        core["Qc" /* ɵɵtext */](232, " ");
        core["jc" /* ɵɵelementStart */](233, "div", 8);
        core["Qc" /* ɵɵtext */](234);
        core["vc" /* ɵɵpipe */](235, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](236, " ");
        core["ec" /* ɵɵelement */](237, "i", 9);
        core["Qc" /* ɵɵtext */](238, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](239, " ");
        core["jc" /* ɵɵelementStart */](240, "button", 22);
        core["qc" /* ɵɵlistener */]("click", function SettingsComponent_Template_button_click_240_listener() { return ctx.rate(); });
        core["Qc" /* ɵɵtext */](241, " ");
        core["jc" /* ɵɵelementStart */](242, "div", 8);
        core["Qc" /* ɵɵtext */](243);
        core["vc" /* ɵɵpipe */](244, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](245, " ");
        core["ec" /* ɵɵelement */](246, "i", 9);
        core["Qc" /* ɵɵtext */](247, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](248, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](249, " ");
        core["jc" /* ɵɵelementStart */](250, "div", 29);
        core["Qc" /* ɵɵtext */](251);
        core["vc" /* ɵɵpipe */](252, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](253, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](254, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](255, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 33, "settings"));
        core["Sb" /* ɵɵadvance */](12);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](23, 35, "manage"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](31, 37, "folders"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](40, 39, "sync"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](49, 41, "excludedDomains"));
        core["Sb" /* ɵɵadvance */](11);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](60, 43, "security"));
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("vaultTimeouts", ctx.vaultTimeouts)("formControl", ctx.vaultTimeout);
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](70, 45, "vaultTimeoutAction"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.vaultTimeoutAction);
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngForOf", ctx.vaultTimeoutActions);
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](83, 47, "unlockWithPin"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.pin);
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.supportsBiometric);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.supportsBiometric);
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](96, 49, "lockNow"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](105, 51, "twoStepLogin"));
        core["Sb" /* ɵɵadvance */](11);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](116, 53, "account"));
        core["Sb" /* ɵɵadvance */](14);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](130, 55, "premiumMembership"));
        core["Sb" /* ɵɵadvance */](8);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showChangeMasterPass);
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](143, 57, "fingerprintPhrase"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](152, 59, "logOut"));
        core["Sb" /* ɵɵadvance */](11);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](163, 61, "tools"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](171, 63, "importItems"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](180, 65, "exportVault"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](189, 67, "bitWebVault"));
        core["Sb" /* ɵɵadvance */](11);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](200, 69, "other"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](208, 71, "options"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](217, 73, "about"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](226, 75, "learnOrg"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](235, 77, "helpFeedback"));
        core["Sb" /* ɵɵadvance */](9);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](244, 79, "rateExtension"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](252, 81, "rateExtensionDesc"));
    } }, directives: [PopOutComponent, fesm2015_router["g" /* RouterLinkWithHref */], settings_vault_timeout_input_component_VaultTimeoutInputComponent, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["f" /* FormControlDirective */], BoxRowDirective, fesm2015_forms["y" /* SelectControlValueAccessor */], fesm2015_forms["r" /* NgModel */], common["k" /* NgForOf */], fesm2015_forms["a" /* CheckboxControlValueAccessor */], common["l" /* NgIf */], StopClickDirective, BlurClickDirective, fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](settings_component_SettingsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-settings',
                templateUrl: 'settings.component.html',
            }]
    }], function () { return [{ type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: VaultTimeoutService }, { type: StorageService }, { type: messaging_service["a" /* MessagingService */] }, { type: fesm2015_router["e" /* Router */] }, { type: EnvironmentService }, { type: CryptoService }, { type: UserService }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: modal_service_ModalService }, { type: angular2_toaster["e" /* ToasterService */] }, { type: KeyConnectorService }]; }, { vaultTimeoutActionSelectRef: [{
            type: core["fb" /* ViewChild */],
            args: ['vaultTimeoutActionSelect', { read: core["r" /* ElementRef */], static: true }]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/settings/sync.component.ts
var sync_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};











class SyncComponent {
    constructor(syncService, toasterService, i18nService) {
        this.syncService = syncService;
        this.toasterService = toasterService;
        this.i18nService = i18nService;
        this.lastSync = '--';
    }
    ngOnInit() {
        return sync_component_awaiter(this, void 0, void 0, function* () {
            yield this.setLastSync();
        });
    }
    sync() {
        return sync_component_awaiter(this, void 0, void 0, function* () {
            this.syncPromise = this.syncService.fullSync(true);
            const success = yield this.syncPromise;
            if (success) {
                yield this.setLastSync();
                this.toasterService.popAsync('success', null, this.i18nService.t('syncingComplete'));
            }
            else {
                this.toasterService.popAsync('error', null, this.i18nService.t('syncingFailed'));
            }
        });
    }
    setLastSync() {
        return sync_component_awaiter(this, void 0, void 0, function* () {
            const last = yield this.syncService.getLastSync();
            if (last != null) {
                this.lastSync = last.toLocaleDateString() + ' ' + last.toLocaleTimeString();
            }
            else {
                this.lastSync = this.i18nService.t('never');
            }
        });
    }
}
SyncComponent.ɵfac = function SyncComponent_Factory(t) { return new (t || SyncComponent)(core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](angular2_toaster["e" /* ToasterService */]), core["dc" /* ɵɵdirectiveInject */](I18nService)); };
SyncComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: SyncComponent, selectors: [["app-sync"]], decls: 45, vars: 17, consts: [[1, "left"], ["routerLink", "/tabs/settings"], [1, "header-icon"], ["aria-hidden", "true", 1, "fa", "fa-chevron-left"], [1, "center"], [1, "title"], [1, "right"], [1, "content", "center-content"], ["type", "button", 1, "btn", "block", "primary", 3, "disabled", "appApiAction", "click"], ["syncBtn", ""], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [1, "text-center", "text-muted", "small"]], template: function SyncComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "a", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "span", 2);
        core["ec" /* ɵɵelement */](7, "i", 3);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span");
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 4);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "span", 5);
        core["Qc" /* ɵɵtext */](18);
        core["vc" /* ɵɵpipe */](19, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](20, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](21, " ");
        core["ec" /* ɵɵelement */](22, "div", 6);
        core["Qc" /* ɵɵtext */](23, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "content");
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "div", 7);
        core["Qc" /* ɵɵtext */](28, " ");
        core["jc" /* ɵɵelementStart */](29, "button", 8, 9);
        core["qc" /* ɵɵlistener */]("click", function SyncComponent_Template_button_click_29_listener() { return ctx.sync(); });
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "span", 10);
        core["Qc" /* ɵɵtext */](33);
        core["vc" /* ɵɵpipe */](34, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](35, " ");
        core["ec" /* ɵɵelement */](36, "i", 11);
        core["Qc" /* ɵɵtext */](37, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](38, " ");
        core["jc" /* ɵɵelementStart */](39, "p", 12);
        core["Qc" /* ɵɵtext */](40);
        core["vc" /* ɵɵpipe */](41, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](42, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](43, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](44, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](30);
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 9, "back"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 11, "sync"));
        core["Sb" /* ɵɵadvance */](11);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading)("appApiAction", ctx.syncPromise);
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](34, 13, "syncVaultNow"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](4);
        core["Tc" /* ɵɵtextInterpolate2 */]("", core["wc" /* ɵɵpipeBind1 */](41, 15, "lastSync"), " ", ctx.lastSync, "");
    } }, directives: [fesm2015_router["g" /* RouterLinkWithHref */], api_action_directive_ApiActionDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](SyncComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-sync',
                templateUrl: 'sync.component.html',
            }]
    }], function () { return [{ type: SyncService }, { type: angular2_toaster["e" /* ToasterService */] }, { type: I18nService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/audit.service.ts
class AuditService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/cipher.service.ts
class CipherService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/collection.service.ts
class CollectionService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/passwordReprompt.service.ts
class passwordReprompt_service_PasswordRepromptService {
}

// EXTERNAL MODULE: ./jslib/common/src/enums/cipherRepromptType.ts
var cipherRepromptType = __webpack_require__(48);

// EXTERNAL MODULE: ./jslib/common/src/enums/cipherType.ts
var cipherType = __webpack_require__(10);

// EXTERNAL MODULE: ./jslib/common/src/enums/organizationUserStatusType.ts
var organizationUserStatusType = __webpack_require__(137);

// EXTERNAL MODULE: ./jslib/common/src/enums/secureNoteType.ts
var secureNoteType = __webpack_require__(222);

// EXTERNAL MODULE: ./jslib/common/src/models/view/cardView.ts
var cardView = __webpack_require__(107);

// EXTERNAL MODULE: ./jslib/common/src/models/view/cipherView.ts
var cipherView = __webpack_require__(80);

// EXTERNAL MODULE: ./jslib/common/src/models/view/identityView.ts
var identityView = __webpack_require__(108);

// EXTERNAL MODULE: ./jslib/common/src/models/view/loginUriView.ts
var loginUriView = __webpack_require__(100);

// EXTERNAL MODULE: ./jslib/common/src/models/view/loginView.ts
var loginView = __webpack_require__(88);

// EXTERNAL MODULE: ./jslib/common/src/models/view/secureNoteView.ts
var secureNoteView = __webpack_require__(114);

// CONCATENATED MODULE: ./jslib/angular/src/components/add-edit.component.ts
var add_edit_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










































class add_edit_component_AddEditComponent {
    constructor(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService, userService, collectionService, messagingService, eventService, policyService, passwordRepromptService, logService) {
        this.cipherService = cipherService;
        this.folderService = folderService;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.auditService = auditService;
        this.stateService = stateService;
        this.userService = userService;
        this.collectionService = collectionService;
        this.messagingService = messagingService;
        this.eventService = eventService;
        this.policyService = policyService;
        this.passwordRepromptService = passwordRepromptService;
        this.logService = logService;
        this.cloneMode = false;
        this.folderId = null;
        this.organizationId = null;
        this.onSavedCipher = new core["t" /* EventEmitter */]();
        this.onDeletedCipher = new core["t" /* EventEmitter */]();
        this.onRestoredCipher = new core["t" /* EventEmitter */]();
        this.onCancelled = new core["t" /* EventEmitter */]();
        this.onEditAttachments = new core["t" /* EventEmitter */]();
        this.onShareCipher = new core["t" /* EventEmitter */]();
        this.onEditCollections = new core["t" /* EventEmitter */]();
        this.onGeneratePassword = new core["t" /* EventEmitter */]();
        this.editMode = false;
        this.collections = [];
        this.showPassword = false;
        this.showCardNumber = false;
        this.showCardCode = false;
        this.cipherType = cipherType["a" /* CipherType */];
        this.ownershipOptions = [];
        this.currentDate = new Date();
        this.allowPersonal = true;
        this.reprompt = false;
        this.canUseReprompt = true;
        this.typeOptions = [
            { name: i18nService.t('typeLogin'), value: cipherType["a" /* CipherType */].Login },
            { name: i18nService.t('typeCard'), value: cipherType["a" /* CipherType */].Card },
            { name: i18nService.t('typeIdentity'), value: cipherType["a" /* CipherType */].Identity },
            { name: i18nService.t('typeSecureNote'), value: cipherType["a" /* CipherType */].SecureNote },
        ];
        this.cardBrandOptions = [
            { name: '-- ' + i18nService.t('select') + ' --', value: null },
            { name: 'Visa', value: 'Visa' },
            { name: 'Mastercard', value: 'Mastercard' },
            { name: 'American Express', value: 'Amex' },
            { name: 'Discover', value: 'Discover' },
            { name: 'Diners Club', value: 'Diners Club' },
            { name: 'JCB', value: 'JCB' },
            { name: 'Maestro', value: 'Maestro' },
            { name: 'UnionPay', value: 'UnionPay' },
            { name: i18nService.t('other'), value: 'Other' },
        ];
        this.cardExpMonthOptions = [
            { name: '-- ' + i18nService.t('select') + ' --', value: null },
            { name: '01 - ' + i18nService.t('january'), value: '1' },
            { name: '02 - ' + i18nService.t('february'), value: '2' },
            { name: '03 - ' + i18nService.t('march'), value: '3' },
            { name: '04 - ' + i18nService.t('april'), value: '4' },
            { name: '05 - ' + i18nService.t('may'), value: '5' },
            { name: '06 - ' + i18nService.t('june'), value: '6' },
            { name: '07 - ' + i18nService.t('july'), value: '7' },
            { name: '08 - ' + i18nService.t('august'), value: '8' },
            { name: '09 - ' + i18nService.t('september'), value: '9' },
            { name: '10 - ' + i18nService.t('october'), value: '10' },
            { name: '11 - ' + i18nService.t('november'), value: '11' },
            { name: '12 - ' + i18nService.t('december'), value: '12' },
        ];
        this.identityTitleOptions = [
            { name: '-- ' + i18nService.t('select') + ' --', value: null },
            { name: i18nService.t('mr'), value: i18nService.t('mr') },
            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },
            { name: i18nService.t('ms'), value: i18nService.t('ms') },
            { name: i18nService.t('dr'), value: i18nService.t('dr') },
        ];
        this.uriMatchOptions = [
            { name: i18nService.t('defaultMatchDetection'), value: null },
            { name: i18nService.t('baseDomain'), value: uriMatchType["a" /* UriMatchType */].Domain },
            { name: i18nService.t('host'), value: uriMatchType["a" /* UriMatchType */].Host },
            { name: i18nService.t('startsWith'), value: uriMatchType["a" /* UriMatchType */].StartsWith },
            { name: i18nService.t('regEx'), value: uriMatchType["a" /* UriMatchType */].RegularExpression },
            { name: i18nService.t('exact'), value: uriMatchType["a" /* UriMatchType */].Exact },
            { name: i18nService.t('never'), value: uriMatchType["a" /* UriMatchType */].Never },
        ];
        this.autofillOnPageLoadOptions = [
            { name: i18nService.t('autoFillOnPageLoadUseDefault'), value: null },
            { name: i18nService.t('autoFillOnPageLoadYes'), value: true },
            { name: i18nService.t('autoFillOnPageLoadNo'), value: false },
        ];
    }
    ngOnInit() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            yield this.init();
        });
    }
    init() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (yield this.policyService.policyAppliesToUser(policyType["a" /* PolicyType */].PersonalOwnership)) {
                this.allowPersonal = false;
            }
            else {
                const myEmail = yield this.userService.getEmail();
                this.ownershipOptions.push({ name: myEmail, value: null });
            }
            const orgs = yield this.userService.getAllOrganizations();
            orgs.sort(utils["a" /* Utils */].getSortFunction(this.i18nService, 'name')).forEach(o => {
                if (o.enabled && o.status === organizationUserStatusType["a" /* OrganizationUserStatusType */].Confirmed) {
                    this.ownershipOptions.push({ name: o.name, value: o.id });
                }
            });
            if (!this.allowPersonal) {
                this.organizationId = this.ownershipOptions[0].value;
            }
            this.writeableCollections = yield this.loadCollections();
            this.canUseReprompt = yield this.passwordRepromptService.enabled();
        });
    }
    load() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            this.editMode = this.cipherId != null;
            if (this.editMode) {
                this.editMode = true;
                if (this.cloneMode) {
                    this.cloneMode = true;
                    this.title = this.i18nService.t('addItem');
                }
                else {
                    this.title = this.i18nService.t('editItem');
                }
            }
            else {
                this.title = this.i18nService.t('addItem');
            }
            const addEditCipherInfo = yield this.stateService.get('addEditCipherInfo');
            if (addEditCipherInfo != null) {
                this.cipher = addEditCipherInfo.cipher;
                this.collectionIds = addEditCipherInfo.collectionIds;
            }
            yield this.stateService.remove('addEditCipherInfo');
            if (this.cipher == null) {
                if (this.editMode) {
                    const cipher = yield this.loadCipher();
                    this.cipher = yield cipher.decrypt();
                    // Adjust Cipher Name if Cloning
                    if (this.cloneMode) {
                        this.cipher.name += ' - ' + this.i18nService.t('clone');
                        // If not allowing personal ownership, update cipher's org Id to prompt downstream changes
                        if (this.cipher.organizationId == null && !this.allowPersonal) {
                            this.cipher.organizationId = this.organizationId;
                        }
                    }
                }
                else {
                    this.cipher = new cipherView["a" /* CipherView */]();
                    this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;
                    this.cipher.folderId = this.folderId;
                    this.cipher.type = this.type == null ? cipherType["a" /* CipherType */].Login : this.type;
                    this.cipher.login = new loginView["a" /* LoginView */]();
                    this.cipher.login.uris = [new loginUriView["a" /* LoginUriView */]()];
                    this.cipher.card = new cardView["a" /* CardView */]();
                    this.cipher.identity = new identityView["a" /* IdentityView */]();
                    this.cipher.secureNote = new secureNoteView["a" /* SecureNoteView */]();
                    this.cipher.secureNote.type = secureNoteType["a" /* SecureNoteType */].Generic;
                    this.cipher.reprompt = cipherRepromptType["a" /* CipherRepromptType */].None;
                }
            }
            if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {
                yield this.organizationChanged();
                if (this.collectionIds != null && this.collectionIds.length > 0 && this.collections.length > 0) {
                    this.collections.forEach(c => {
                        if (this.collectionIds.indexOf(c.id) > -1) {
                            c.checked = true;
                        }
                    });
                }
            }
            this.folders = yield this.folderService.getAllDecrypted();
            if (this.editMode && this.previousCipherId !== this.cipherId) {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientViewed, this.cipherId);
            }
            this.previousCipherId = this.cipherId;
            this.reprompt = this.cipher.reprompt !== cipherRepromptType["a" /* CipherRepromptType */].None;
        });
    }
    submit() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (this.cipher.isDeleted) {
                return this.restore();
            }
            if (this.cipher.name == null || this.cipher.name === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('nameRequired'));
                return false;
            }
            if ((!this.editMode || this.cloneMode) && !this.allowPersonal && this.cipher.organizationId == null) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('personalOwnershipSubmitError'));
                return false;
            }
            if ((!this.editMode || this.cloneMode) && this.cipher.type === cipherType["a" /* CipherType */].Login &&
                this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&
                (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {
                this.cipher.login.uris = null;
            }
            // Allows saving of selected collections during "Add" and "Clone" flows
            if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {
                this.cipher.collectionIds = this.collections == null ? [] :
                    this.collections.filter(c => c.checked).map(c => c.id);
            }
            // Clear current Cipher Id to trigger "Add" cipher flow
            if (this.cloneMode) {
                this.cipher.id = null;
            }
            const cipher = yield this.encryptCipher();
            try {
                this.formPromise = this.saveCipher(cipher);
                yield this.formPromise;
                this.cipher.id = cipher.id;
                this.platformUtilsService.showToast('success', null, this.i18nService.t(this.editMode && !this.cloneMode ? 'editedItem' : 'addedItem'));
                this.onSavedCipher.emit(this.cipher);
                this.messagingService.send(this.editMode && !this.cloneMode ? 'editedCipher' : 'addedCipher');
                return true;
            }
            catch (e) {
                this.logService.error(e);
            }
            return false;
        });
    }
    addUri() {
        if (this.cipher.type !== cipherType["a" /* CipherType */].Login) {
            return;
        }
        if (this.cipher.login.uris == null) {
            this.cipher.login.uris = [];
        }
        this.cipher.login.uris.push(new loginUriView["a" /* LoginUriView */]());
    }
    removeUri(uri) {
        if (this.cipher.type !== cipherType["a" /* CipherType */].Login || this.cipher.login.uris == null) {
            return;
        }
        const i = this.cipher.login.uris.indexOf(uri);
        if (i > -1) {
            this.cipher.login.uris.splice(i, 1);
        }
    }
    trackByFunction(index, item) {
        return index;
    }
    cancel() {
        this.onCancelled.emit(this.cipher);
    }
    attachments() {
        this.onEditAttachments.emit(this.cipher);
    }
    share() {
        this.onShareCipher.emit(this.cipher);
    }
    editCollections() {
        this.onEditCollections.emit(this.cipher);
    }
    delete() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'), this.i18nService.t('deleteItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                this.deletePromise = this.deleteCipher();
                yield this.deletePromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeletedItem' : 'deletedItem'));
                this.onDeletedCipher.emit(this.cipher);
                this.messagingService.send(this.cipher.isDeleted ? 'permanentlyDeletedCipher' : 'deletedCipher');
            }
            catch (e) {
                this.logService.error(e);
            }
            return true;
        });
    }
    restore() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (!this.cipher.isDeleted) {
                return false;
            }
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('restoreItemConfirmation'), this.i18nService.t('restoreItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                this.restorePromise = this.restoreCipher();
                yield this.restorePromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t('restoredItem'));
                this.onRestoredCipher.emit(this.cipher);
                this.messagingService.send('restoredCipher');
            }
            catch (e) {
                this.logService.error(e);
            }
            return true;
        });
    }
    generatePassword() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {
                const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'), this.i18nService.t('yes'), this.i18nService.t('no'));
                if (!confirmed) {
                    return false;
                }
            }
            this.onGeneratePassword.emit();
            return true;
        });
    }
    togglePassword() {
        this.showPassword = !this.showPassword;
        document.getElementById('loginPassword').focus();
        if (this.editMode && this.showPassword) {
            this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledPasswordVisible, this.cipherId);
        }
    }
    toggleCardNumber() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            this.showCardNumber = !this.showCardNumber;
            if (this.showCardNumber) {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledCardNumberVisible, this.cipherId);
            }
        });
    }
    toggleCardCode() {
        this.showCardCode = !this.showCardCode;
        document.getElementById('cardCode').focus();
        if (this.editMode && this.showCardCode) {
            this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledCardCodeVisible, this.cipherId);
        }
    }
    toggleUriOptions(uri) {
        const u = uri;
        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;
    }
    loginUriMatchChanged(uri) {
        const u = uri;
        u.showOptions = u.showOptions == null ? true : u.showOptions;
    }
    organizationChanged() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (this.writeableCollections != null) {
                this.writeableCollections.forEach(c => c.checked = false);
            }
            if (this.cipher.organizationId != null) {
                this.collections = this.writeableCollections.filter(c => c.organizationId === this.cipher.organizationId);
                const org = yield this.userService.getOrganization(this.cipher.organizationId);
                if (org != null) {
                    this.cipher.organizationUseTotp = org.useTotp;
                }
            }
            else {
                this.collections = [];
            }
        });
    }
    checkPassword() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (this.checkPasswordPromise != null) {
                return;
            }
            if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {
                return;
            }
            this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);
            const matches = yield this.checkPasswordPromise;
            this.checkPasswordPromise = null;
            if (matches > 0) {
                this.platformUtilsService.showToast('warning', null, this.i18nService.t('passwordExposed', matches.toString()));
            }
            else {
                this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));
            }
        });
    }
    repromptChanged() {
        this.reprompt = !this.reprompt;
        if (this.reprompt) {
            this.cipher.reprompt = cipherRepromptType["a" /* CipherRepromptType */].Password;
        }
        else {
            this.cipher.reprompt = cipherRepromptType["a" /* CipherRepromptType */].None;
        }
    }
    loadCollections() {
        return add_edit_component_awaiter(this, void 0, void 0, function* () {
            const allCollections = yield this.collectionService.getAllDecrypted();
            return allCollections.filter(c => !c.readOnly);
        });
    }
    loadCipher() {
        return this.cipherService.get(this.cipherId);
    }
    encryptCipher() {
        return this.cipherService.encrypt(this.cipher);
    }
    saveCipher(cipher) {
        return this.cipherService.saveWithServer(cipher);
    }
    deleteCipher() {
        return this.cipher.isDeleted ? this.cipherService.deleteWithServer(this.cipher.id)
            : this.cipherService.softDeleteWithServer(this.cipher.id);
    }
    restoreCipher() {
        return this.cipherService.restoreWithServer(this.cipher.id);
    }
}
add_edit_component_AddEditComponent.ɵfac = function AddEditComponent_Factory(t) { return new (t || add_edit_component_AddEditComponent)(core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](FolderService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](AuditService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](EventService), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](passwordReprompt_service_PasswordRepromptService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
add_edit_component_AddEditComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: add_edit_component_AddEditComponent, inputs: { cloneMode: "cloneMode", folderId: "folderId", cipherId: "cipherId", type: "type", collectionIds: "collectionIds", organizationId: "organizationId" }, outputs: { onSavedCipher: "onSavedCipher", onDeletedCipher: "onDeletedCipher", onRestoredCipher: "onRestoredCipher", onCancelled: "onCancelled", onEditAttachments: "onEditAttachments", onShareCipher: "onShareCipher", onEditCollections: "onEditCollections", onGeneratePassword: "onGeneratePassword" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](add_edit_component_AddEditComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: CipherService }, { type: FolderService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: AuditService }, { type: StateService }, { type: UserService }, { type: CollectionService }, { type: messaging_service["a" /* MessagingService */] }, { type: EventService }, { type: PolicyService }, { type: passwordReprompt_service_PasswordRepromptService }, { type: LogService }]; }, { cloneMode: [{
            type: core["D" /* Input */]
        }], folderId: [{
            type: core["D" /* Input */]
        }], cipherId: [{
            type: core["D" /* Input */]
        }], type: [{
            type: core["D" /* Input */]
        }], collectionIds: [{
            type: core["D" /* Input */]
        }], organizationId: [{
            type: core["D" /* Input */]
        }], onSavedCipher: [{
            type: core["O" /* Output */]
        }], onDeletedCipher: [{
            type: core["O" /* Output */]
        }], onRestoredCipher: [{
            type: core["O" /* Output */]
        }], onCancelled: [{
            type: core["O" /* Output */]
        }], onEditAttachments: [{
            type: core["O" /* Output */]
        }], onShareCipher: [{
            type: core["O" /* Output */]
        }], onEditCollections: [{
            type: core["O" /* Output */]
        }], onGeneratePassword: [{
            type: core["O" /* Output */]
        }] }); })();

// EXTERNAL MODULE: ./jslib/common/src/models/view/fieldView.ts
var fieldView = __webpack_require__(151);

// EXTERNAL MODULE: ./jslib/common/src/enums/fieldType.ts
var fieldType = __webpack_require__(52);

// CONCATENATED MODULE: ./jslib/angular/src/components/add-edit-custom-fields.component.ts













class add_edit_custom_fields_component_AddEditCustomFieldsComponent {
    constructor(i18nService, eventService) {
        this.i18nService = i18nService;
        this.eventService = eventService;
        this.addFieldType = fieldType["a" /* FieldType */].Text;
        this.linkedFieldOptions = [];
        this.cipherType = cipherType["a" /* CipherType */];
        this.fieldType = fieldType["a" /* FieldType */];
        this.eventType = eventType["a" /* EventType */];
        this.addFieldTypeOptions = [
            { name: i18nService.t('cfTypeText'), value: fieldType["a" /* FieldType */].Text },
            { name: i18nService.t('cfTypeHidden'), value: fieldType["a" /* FieldType */].Hidden },
            { name: i18nService.t('cfTypeBoolean'), value: fieldType["a" /* FieldType */].Boolean },
        ];
        this.addFieldLinkedTypeOption = { name: this.i18nService.t('cfTypeLinked'), value: fieldType["a" /* FieldType */].Linked };
    }
    ngOnChanges(changes) {
        if (changes.thisCipherType != null) {
            this.setLinkedFieldOptions();
            if (!changes.thisCipherType.firstChange) {
                this.resetCipherLinkedFields();
            }
        }
    }
    addField() {
        if (this.cipher.fields == null) {
            this.cipher.fields = [];
        }
        const f = new fieldView["a" /* FieldView */]();
        f.type = this.addFieldType;
        f.newField = true;
        if (f.type === fieldType["a" /* FieldType */].Linked) {
            f.linkedId = this.linkedFieldOptions[0].value;
        }
        this.cipher.fields.push(f);
    }
    removeField(field) {
        const i = this.cipher.fields.indexOf(field);
        if (i > -1) {
            this.cipher.fields.splice(i, 1);
        }
    }
    toggleFieldValue(field) {
        const f = field;
        f.showValue = !f.showValue;
        if (this.editMode && f.showValue) {
            this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);
        }
    }
    trackByFunction(index, item) {
        return index;
    }
    drop(event) {
        Object(drag_drop["e" /* moveItemInArray */])(this.cipher.fields, event.previousIndex, event.currentIndex);
    }
    setLinkedFieldOptions() {
        if (this.cipher.linkedFieldOptions == null) {
            return;
        }
        const options = [];
        this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) => options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id }));
        this.linkedFieldOptions = options.sort(utils["a" /* Utils */].getSortFunction(this.i18nService, 'name'));
    }
    resetCipherLinkedFields() {
        if (this.cipher.fields == null || this.cipher.fields.length === 0) {
            return;
        }
        // Delete any Linked custom fields if the item type does not support them
        if (this.cipher.linkedFieldOptions == null) {
            this.cipher.fields = this.cipher.fields.filter(f => f.type !== fieldType["a" /* FieldType */].Linked);
            return;
        }
        this.cipher.fields
            .filter(f => f.type === fieldType["a" /* FieldType */].Linked)
            .forEach(f => f.linkedId = this.linkedFieldOptions[0].value);
    }
}
add_edit_custom_fields_component_AddEditCustomFieldsComponent.ɵfac = function AddEditCustomFieldsComponent_Factory(t) { return new (t || add_edit_custom_fields_component_AddEditCustomFieldsComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](EventService)); };
add_edit_custom_fields_component_AddEditCustomFieldsComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: add_edit_custom_fields_component_AddEditCustomFieldsComponent, inputs: { cipher: "cipher", thisCipherType: "thisCipherType", editMode: "editMode" }, features: [core["Qb" /* ɵɵNgOnChangesFeature */]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](add_edit_custom_fields_component_AddEditCustomFieldsComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: I18nService }, { type: EventService }]; }, { cipher: [{
            type: core["D" /* Input */]
        }], thisCipherType: [{
            type: core["D" /* Input */]
        }], editMode: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/true-false-value.directive.ts



// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/
class TrueFalseValueDirective {
    constructor(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.trueValue = true;
        this.falseValue = false;
        this.propagateChange = (_) => { };
    }
    onHostChange(ev) {
        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);
    }
    writeValue(obj) {
        if (obj === this.trueValue) {
            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);
        }
        else {
            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);
        }
    }
    registerOnChange(fn) {
        this.propagateChange = fn;
    }
    registerOnTouched(fn) { }
    setDisabledState(isDisabled) { }
}
TrueFalseValueDirective.ɵfac = function TrueFalseValueDirective_Factory(t) { return new (t || TrueFalseValueDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */]), core["dc" /* ɵɵdirectiveInject */](core["T" /* Renderer2 */])); };
TrueFalseValueDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: TrueFalseValueDirective, selectors: [["input", "type", "checkbox", "appTrueFalseValue", ""]], hostBindings: function TrueFalseValueDirective_HostBindings(rf, ctx) { if (rf & 1) {
        core["qc" /* ɵɵlistener */]("change", function TrueFalseValueDirective_change_HostBindingHandler($event) { return ctx.onHostChange($event); });
    } }, inputs: { trueValue: "trueValue", falseValue: "falseValue" }, features: [core["Rb" /* ɵɵProvidersFeature */]([
            {
                provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                useExisting: Object(core["kb" /* forwardRef */])(() => TrueFalseValueDirective),
                multi: true,
            },
        ])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](TrueFalseValueDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: 'input[type=checkbox][appTrueFalseValue]',
                providers: [
                    {
                        provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                        useExisting: Object(core["kb" /* forwardRef */])(() => TrueFalseValueDirective),
                        multi: true,
                    },
                ],
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }, { type: core["T" /* Renderer2 */] }]; }, { trueValue: [{
            type: core["D" /* Input */]
        }], falseValue: [{
            type: core["D" /* Input */]
        }], onHostChange: [{
            type: core["w" /* HostListener */],
            args: ['change', ['$event']]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/vault/add-edit-custom-fields.component.ts

















function AddEditCustomFieldsComponent_div_8_div_2_input_21_Template(rf, ctx) { if (rf & 1) {
    const _r13 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "input", 26);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditCustomFieldsComponent_div_8_div_2_input_21_Template_input_ngModelChange_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r13); const f_r4 = core["uc" /* ɵɵnextContext */]().$implicit; return f_r4.value = $event; });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r14 = core["uc" /* ɵɵnextContext */]();
    const i_r5 = ctx_r14.index;
    const f_r4 = ctx_r14.$implicit;
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "fieldValue", i_r5, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Field.Value", i_r5, "");
    core["Cc" /* ɵɵpropertyInterpolate */]("placeholder", core["wc" /* ɵɵpipeBind1 */](1, 4, "value"));
    core["Bc" /* ɵɵproperty */]("ngModel", f_r4.value);
} }
function AddEditCustomFieldsComponent_div_8_div_2_input_23_Template(rf, ctx) { if (rf & 1) {
    const _r17 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "input", 27);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditCustomFieldsComponent_div_8_div_2_input_23_Template_input_ngModelChange_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r17); const f_r4 = core["uc" /* ɵɵnextContext */]().$implicit; return f_r4.value = $event; });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r18 = core["uc" /* ɵɵnextContext */]();
    const i_r5 = ctx_r18.index;
    const f_r4 = ctx_r18.$implicit;
    const ctx_r7 = core["uc" /* ɵɵnextContext */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "fieldValue", i_r5, "");
    core["Cc" /* ɵɵpropertyInterpolate */]("type", f_r4.showValue ? "text" : "password");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Field.Value", i_r5, "");
    core["Cc" /* ɵɵpropertyInterpolate */]("placeholder", core["wc" /* ɵɵpipeBind1 */](1, 6, "value"));
    core["Bc" /* ɵɵproperty */]("ngModel", f_r4.value)("disabled", !ctx_r7.cipher.viewPassword && !f_r4.newField);
} }
function AddEditCustomFieldsComponent_div_8_div_2_select_25_option_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 29);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r20 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r20.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r20.name);
} }
function AddEditCustomFieldsComponent_div_8_div_2_select_25_Template(rf, ctx) { if (rf & 1) {
    const _r23 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "select", 28);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditCustomFieldsComponent_div_8_div_2_select_25_Template_select_ngModelChange_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r23); const f_r4 = core["uc" /* ɵɵnextContext */]().$implicit; return f_r4.linkedId = $event; });
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, AddEditCustomFieldsComponent_div_8_div_2_select_25_option_2_Template, 2, 2, "option", 9);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r24 = core["uc" /* ɵɵnextContext */]();
    const i_r5 = ctx_r24.index;
    const f_r4 = ctx_r24.$implicit;
    const ctx_r8 = core["uc" /* ɵɵnextContext */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "fieldValue", i_r5, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Field.Value", i_r5, "");
    core["Bc" /* ɵɵproperty */]("ngModel", f_r4.linkedId);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r8.linkedFieldOptions);
} }
function AddEditCustomFieldsComponent_div_8_div_2_input_28_Template(rf, ctx) { if (rf & 1) {
    const _r27 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "input", 30);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditCustomFieldsComponent_div_8_div_2_input_28_Template_input_ngModelChange_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r27); const f_r4 = core["uc" /* ɵɵnextContext */]().$implicit; return f_r4.value = $event; });
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r28 = core["uc" /* ɵɵnextContext */]();
    const i_r5 = ctx_r28.index;
    const f_r4 = ctx_r28.$implicit;
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "fieldValue", i_r5, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Field.Value", i_r5, "");
    core["Bc" /* ɵɵproperty */]("ngModel", f_r4.value);
} }
const add_edit_custom_fields_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
function AddEditCustomFieldsComponent_div_8_div_2_div_30_Template(rf, ctx) { if (rf & 1) {
    const _r31 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 31);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "button", 32);
    core["qc" /* ɵɵlistener */]("click", function AddEditCustomFieldsComponent_div_8_div_2_div_30_Template_button_click_2_listener() { core["Jc" /* ɵɵrestoreView */](_r31); const f_r4 = core["uc" /* ɵɵnextContext */]().$implicit; const ctx_r29 = core["uc" /* ɵɵnextContext */](2); return ctx_r29.toggleFieldValue(f_r4); });
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["ec" /* ɵɵelement */](5, "i", 33);
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const f_r4 = core["uc" /* ɵɵnextContext */]().$implicit;
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 2, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](4, add_edit_custom_fields_component_c0, !f_r4.showValue, f_r4.showValue));
} }
const add_edit_custom_fields_component_c1 = function (a0) { return { "box-content-row-checkbox": a0 }; };
function AddEditCustomFieldsComponent_div_8_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r34 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 13);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "button", 14);
    core["qc" /* ɵɵlistener */]("click", function AddEditCustomFieldsComponent_div_8_div_2_Template_button_click_2_listener() { core["Jc" /* ɵɵrestoreView */](_r34); const f_r4 = ctx.$implicit; const ctx_r33 = core["uc" /* ɵɵnextContext */](2); return ctx_r33.removeField(f_r4); });
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["ec" /* ɵɵelement */](5, "i", 15);
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "label", 16);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "label", 16);
    core["Qc" /* ɵɵtext */](13);
    core["vc" /* ɵɵpipe */](14, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "div", 17);
    core["Qc" /* ɵɵtext */](17, " ");
    core["jc" /* ɵɵelementStart */](18, "input", 18);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditCustomFieldsComponent_div_8_div_2_Template_input_ngModelChange_18_listener($event) { const f_r4 = ctx.$implicit; return f_r4.name = $event; });
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["Oc" /* ɵɵtemplate */](21, AddEditCustomFieldsComponent_div_8_div_2_input_21_Template, 2, 6, "input", 19);
    core["Qc" /* ɵɵtext */](22, " ");
    core["Oc" /* ɵɵtemplate */](23, AddEditCustomFieldsComponent_div_8_div_2_input_23_Template, 2, 8, "input", 20);
    core["Qc" /* ɵɵtext */](24, " ");
    core["Oc" /* ɵɵtemplate */](25, AddEditCustomFieldsComponent_div_8_div_2_select_25_Template, 4, 4, "select", 21);
    core["Qc" /* ɵɵtext */](26, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](27, " ");
    core["Oc" /* ɵɵtemplate */](28, AddEditCustomFieldsComponent_div_8_div_2_input_28_Template, 1, 3, "input", 22);
    core["Qc" /* ɵɵtext */](29, " ");
    core["Oc" /* ɵɵtemplate */](30, AddEditCustomFieldsComponent_div_8_div_2_div_30_Template, 8, 7, "div", 23);
    core["Qc" /* ɵɵtext */](31, " ");
    core["jc" /* ɵɵelementStart */](32, "div", 24);
    core["vc" /* ɵɵpipe */](33, "i18n");
    core["Qc" /* ɵɵtext */](34, " ");
    core["ec" /* ɵɵelement */](35, "i", 25);
    core["Qc" /* ɵɵtext */](36, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](37, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const f_r4 = ctx.$implicit;
    const i_r5 = ctx.index;
    const ctx_r3 = core["uc" /* ɵɵnextContext */](2);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](26, add_edit_custom_fields_component_c1, f_r4.type === ctx_r3.fieldType.Boolean));
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 16, "remove"));
    core["Sb" /* ɵɵadvance */](6);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "fieldName", i_r5, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 18, "name"));
    core["Sb" /* ɵɵadvance */](3);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "fieldValue", i_r5, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](14, 20, "value"));
    core["Sb" /* ɵɵadvance */](5);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "fieldName", i_r5, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Field.Name", i_r5, "");
    core["Cc" /* ɵɵpropertyInterpolate */]("placeholder", core["wc" /* ɵɵpipeBind1 */](19, 22, "name"));
    core["Bc" /* ɵɵproperty */]("ngModel", f_r4.name);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", f_r4.type === ctx_r3.fieldType.Text);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", f_r4.type === ctx_r3.fieldType.Hidden);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", f_r4.type === ctx_r3.fieldType.Linked && ctx_r3.cipher.linkedFieldOptions != null);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", f_r4.type === ctx_r3.fieldType.Boolean);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", f_r4.type === ctx_r3.fieldType.Hidden && (ctx_r3.cipher.viewPassword || f_r4.newField));
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](33, 24, "dragToSort"));
} }
function AddEditCustomFieldsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r37 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["qc" /* ɵɵlistener */]("cdkDropListDropped", function AddEditCustomFieldsComponent_div_8_Template_div_cdkDropListDropped_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r37); const ctx_r36 = core["uc" /* ɵɵnextContext */](); return ctx_r36.drop($event); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, AddEditCustomFieldsComponent_div_8_div_2_Template, 38, 28, "div", 12);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r0.cipher.fields)("ngForTrackBy", ctx_r0.trackByFunction);
} }
function AddEditCustomFieldsComponent_option_24_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 29);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r38 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r38.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r38.name);
} }
function AddEditCustomFieldsComponent_option_26_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 29);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Bc" /* ɵɵproperty */]("ngValue", ctx_r2.addFieldLinkedTypeOption.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r2.addFieldLinkedTypeOption.name, " ");
} }
class vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent extends add_edit_custom_fields_component_AddEditCustomFieldsComponent {
    constructor(i18nService, eventService) {
        super(i18nService, eventService);
    }
}
vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent.ɵfac = function AddEditCustomFieldsComponent_Factory(t) { return new (t || vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](EventService)); };
vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent, selectors: [["app-vault-add-edit-custom-fields"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 32, vars: 13, consts: [[1, "box"], [1, "box-header"], [1, "box-content"], ["cdkDropList", "", 3, "cdkDropListDropped", 4, "ngIf"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-newmulti"], ["type", "button", "appStopClick", "", 3, "click"], ["aria-hidden", "true", 1, "fa", "fa-plus-circle", "fa-fw", "fa-lg"], ["for", "addFieldType", 1, "sr-only"], ["id", "addFieldType", "name", "AddFieldType", 1, "field-type", 3, "ngModel", "ngModelChange"], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue", 4, "ngIf"], ["cdkDropList", "", 3, "cdkDropListDropped"], ["class", "box-content-row box-content-row-multi box-draggable-row", "appBoxRow", "", "cdkDrag", "", 3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["appBoxRow", "", "cdkDrag", "", 1, "box-content-row", "box-content-row-multi", "box-draggable-row", 3, "ngClass"], ["type", "button", "appStopClick", "", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-minus-circle", "fa-lg"], [1, "sr-only", 3, "for"], [1, "row-main"], ["type", "text", "appInputVerbatim", "", 1, "row-label", 3, "id", "name", "ngModel", "placeholder", "ngModelChange"], ["type", "text", "appInputVerbatim", "", 3, "id", "name", "ngModel", "placeholder", "ngModelChange", 4, "ngIf"], ["class", "monospaced", "appInputVerbatim", "", 3, "id", "type", "name", "ngModel", "placeholder", "disabled", "ngModelChange", 4, "ngIf"], [3, "id", "name", "ngModel", "ngModelChange", 4, "ngIf"], ["type", "checkbox", "appTrueFalseValue", "", "trueValue", "true", "falseValue", "false", 3, "id", "name", "ngModel", "ngModelChange", 4, "ngIf"], ["class", "action-buttons", 4, "ngIf"], ["cdkDragHandle", "", 1, "drag-handle", 3, "appA11yTitle"], ["aria-hidden", "true", 1, "fa", "fa-bars"], ["type", "text", "appInputVerbatim", "", 3, "id", "name", "ngModel", "placeholder", "ngModelChange"], ["appInputVerbatim", "", 1, "monospaced", 3, "id", "type", "name", "ngModel", "placeholder", "disabled", "ngModelChange"], [3, "id", "name", "ngModel", "ngModelChange"], [3, "ngValue"], ["type", "checkbox", "appTrueFalseValue", "", "trueValue", "true", "falseValue", "false", 3, "id", "name", "ngModel", "ngModelChange"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"]], template: function AddEditCustomFieldsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "div", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 1);
        core["Qc" /* ɵɵtext */](3);
        core["vc" /* ɵɵpipe */](4, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "div", 2);
        core["Qc" /* ɵɵtext */](7, " ");
        core["Oc" /* ɵɵtemplate */](8, AddEditCustomFieldsComponent_div_8_Template, 4, 2, "div", 3);
        core["Qc" /* ɵɵtext */](9, " ");
        core["jc" /* ɵɵelementStart */](10, "div", 4);
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "button", 5);
        core["qc" /* ɵɵlistener */]("click", function AddEditCustomFieldsComponent_Template_button_click_12_listener() { return ctx.addField(); });
        core["Qc" /* ɵɵtext */](13, " ");
        core["ec" /* ɵɵelement */](14, "i", 6);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["jc" /* ɵɵelementStart */](18, "label", 7);
        core["Qc" /* ɵɵtext */](19);
        core["vc" /* ɵɵpipe */](20, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "select", 8);
        core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditCustomFieldsComponent_Template_select_ngModelChange_22_listener($event) { return ctx.addFieldType = $event; });
        core["Qc" /* ɵɵtext */](23, " ");
        core["Oc" /* ɵɵtemplate */](24, AddEditCustomFieldsComponent_option_24_Template, 2, 2, "option", 9);
        core["Qc" /* ɵɵtext */](25, " ");
        core["Oc" /* ɵɵtemplate */](26, AddEditCustomFieldsComponent_option_26_Template, 2, 2, "option", 10);
        core["Qc" /* ɵɵtext */](27, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](3);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 7, "customFields"), " ");
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher.hasFields);
        core["Sb" /* ɵɵadvance */](7);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](16, 9, "newCustomField"), " ");
        core["Sb" /* ɵɵadvance */](4);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](20, 11, "type"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.addFieldType);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngForOf", ctx.addFieldTypeOptions);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher.linkedFieldOptions != null);
    } }, directives: [common["l" /* NgIf */], BoxRowDirective, StopClickDirective, fesm2015_forms["y" /* SelectControlValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], common["k" /* NgForOf */], drag_drop["c" /* CdkDropList */], drag_drop["a" /* CdkDrag */], common["j" /* NgClass */], A11yTitleDirective, fesm2015_forms["c" /* DefaultValueAccessor */], InputVerbatimDirective, drag_drop["b" /* CdkDragHandle */], fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */], TrueFalseValueDirective, fesm2015_forms["a" /* CheckboxControlValueAccessor */], BlurClickDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-add-edit-custom-fields',
                templateUrl: 'add-edit-custom-fields.component.html',
            }]
    }], function () { return [{ type: I18nService }, { type: EventService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/vault/add-edit.component.ts
var vault_add_edit_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



















































function AddEditComponent_content_31_app_callout_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 32);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "personalOwnershipPolicyInEffect"), " ");
} }
function AddEditComponent_content_31_div_12_option_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r17 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r17.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r17.name);
} }
function AddEditComponent_content_31_div_12_Template(rf, ctx) { if (rf & 1) {
    const _r19 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 16);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 33);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "select", 34);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_12_Template_select_ngModelChange_6_listener($event) { core["Jc" /* ɵɵrestoreView */](_r19); const ctx_r18 = core["uc" /* ɵɵnextContext */](2); return ctx_r18.cipher.type = $event; });
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, AddEditComponent_content_31_div_12_option_8_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "type"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r3.cipher.type);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r3.typeOptions);
} }
function AddEditComponent_content_31_div_23_button_24_Template(rf, ctx) { if (rf & 1) {
    const _r25 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 47, 48);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_23_button_24_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r25); const ctx_r24 = core["uc" /* ɵɵnextContext */](3); return ctx_r24.checkPassword(); });
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["Qc" /* ɵɵtext */](3, " ");
    core["ec" /* ɵɵelement */](4, "i", 49);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 50);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const _r23 = core["Ic" /* ɵɵreference */](1);
    const ctx_r20 = core["uc" /* ɵɵnextContext */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](2, 5, "checkPassword"));
    core["Bc" /* ɵɵproperty */]("appApiAction", ctx_r20.checkPasswordPromise)("disabled", _r23.loading);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("hidden", _r23.loading);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !_r23.loading);
} }
const add_edit_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
function AddEditComponent_content_31_div_23_button_26_Template(rf, ctx) { if (rf & 1) {
    const _r27 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 51);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_23_button_26_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r27); const ctx_r26 = core["uc" /* ɵɵnextContext */](3); return ctx_r26.togglePassword(); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 52);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r21 = core["uc" /* ɵɵnextContext */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 2, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](4, add_edit_component_c0, !ctx_r21.showPassword, ctx_r21.showPassword));
} }
function AddEditComponent_content_31_div_23_button_28_Template(rf, ctx) { if (rf & 1) {
    const _r29 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 51);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_23_button_28_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r29); const ctx_r28 = core["uc" /* ɵɵnextContext */](3); return ctx_r28.generatePassword(); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 53);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 1, "generatePassword"));
} }
function AddEditComponent_content_31_div_23_Template(rf, ctx) { if (rf & 1) {
    const _r31 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 36);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "input", 37);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_23_Template_input_ngModelChange_8_listener($event) { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r30 = core["uc" /* ɵɵnextContext */](2); return ctx_r30.cipher.login.username = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "div", 38);
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "div", 39);
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "label", 40);
    core["Qc" /* ɵɵtext */](16);
    core["vc" /* ɵɵpipe */](17, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "input", 41);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_23_Template_input_ngModelChange_19_listener($event) { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r32 = core["uc" /* ɵɵnextContext */](2); return ctx_r32.cipher.login.password = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "div", 42);
    core["Qc" /* ɵɵtext */](23, " ");
    core["Oc" /* ɵɵtemplate */](24, AddEditComponent_content_31_div_23_button_24_Template, 8, 7, "button", 43);
    core["Qc" /* ɵɵtext */](25, " ");
    core["Oc" /* ɵɵtemplate */](26, AddEditComponent_content_31_div_23_button_26_Template, 5, 7, "button", 44);
    core["Qc" /* ɵɵtext */](27, " ");
    core["Oc" /* ɵɵtemplate */](28, AddEditComponent_content_31_div_23_button_28_Template, 5, 3, "button", 44);
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](31, " ");
    core["jc" /* ɵɵelementStart */](32, "div", 16);
    core["Qc" /* ɵɵtext */](33, " ");
    core["jc" /* ɵɵelementStart */](34, "label", 45);
    core["Qc" /* ɵɵtext */](35);
    core["vc" /* ɵɵpipe */](36, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](37, " ");
    core["jc" /* ɵɵelementStart */](38, "input", 46);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_23_Template_input_ngModelChange_38_listener($event) { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r33 = core["uc" /* ɵɵnextContext */](2); return ctx_r33.cipher.login.totp = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](39, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](40, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 13, "username"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.cipher.login.username);
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](17, 15, "password"));
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx_r4.showPassword ? "text" : "password");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.cipher.login.password)("disabled", !ctx_r4.cipher.viewPassword);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r4.cipher.viewPassword);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r4.cipher.viewPassword);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r4.cipher.viewPassword);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](36, 17, "authenticatorKeyTotp"));
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx_r4.cipher.viewPassword ? "text" : "password");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r4.cipher.login.totp)("disabled", !ctx_r4.cipher.viewPassword);
} }
function AddEditComponent_content_31_div_25_option_40_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r36 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r36.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r36.name);
} }
function AddEditComponent_content_31_div_25_option_52_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r37 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r37.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r37.name);
} }
function AddEditComponent_content_31_div_25_Template(rf, ctx) { if (rf & 1) {
    const _r39 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 54);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "input", 55);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_25_Template_input_ngModelChange_8_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r38 = core["uc" /* ɵɵnextContext */](2); return ctx_r38.cipher.card.cardholderName = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "div", 38);
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "div", 39);
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "label", 56);
    core["Qc" /* ɵɵtext */](16);
    core["vc" /* ɵɵpipe */](17, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "input", 57);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_25_Template_input_ngModelChange_19_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r40 = core["uc" /* ɵɵnextContext */](2); return ctx_r40.cipher.card.number = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "div", 42);
    core["Qc" /* ɵɵtext */](23, " ");
    core["jc" /* ɵɵelementStart */](24, "button", 51);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_25_Template_button_click_24_listener() { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r41 = core["uc" /* ɵɵnextContext */](2); return ctx_r41.toggleCardNumber(); });
    core["vc" /* ɵɵpipe */](25, "i18n");
    core["Qc" /* ɵɵtext */](26, " ");
    core["ec" /* ɵɵelement */](27, "i", 52);
    core["Qc" /* ɵɵtext */](28, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](31, " ");
    core["jc" /* ɵɵelementStart */](32, "div", 16);
    core["Qc" /* ɵɵtext */](33, " ");
    core["jc" /* ɵɵelementStart */](34, "label", 58);
    core["Qc" /* ɵɵtext */](35);
    core["vc" /* ɵɵpipe */](36, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](37, " ");
    core["jc" /* ɵɵelementStart */](38, "select", 59);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_25_Template_select_ngModelChange_38_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r42 = core["uc" /* ɵɵnextContext */](2); return ctx_r42.cipher.card.brand = $event; });
    core["Qc" /* ɵɵtext */](39, " ");
    core["Oc" /* ɵɵtemplate */](40, AddEditComponent_content_31_div_25_option_40_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](41, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](42, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](43, " ");
    core["jc" /* ɵɵelementStart */](44, "div", 16);
    core["Qc" /* ɵɵtext */](45, " ");
    core["jc" /* ɵɵelementStart */](46, "label", 60);
    core["Qc" /* ɵɵtext */](47);
    core["vc" /* ɵɵpipe */](48, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](49, " ");
    core["jc" /* ɵɵelementStart */](50, "select", 61);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_25_Template_select_ngModelChange_50_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r43 = core["uc" /* ɵɵnextContext */](2); return ctx_r43.cipher.card.expMonth = $event; });
    core["Qc" /* ɵɵtext */](51, " ");
    core["Oc" /* ɵɵtemplate */](52, AddEditComponent_content_31_div_25_option_52_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](53, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](54, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](55, " ");
    core["jc" /* ɵɵelementStart */](56, "div", 16);
    core["Qc" /* ɵɵtext */](57, " ");
    core["jc" /* ɵɵelementStart */](58, "label", 62);
    core["Qc" /* ɵɵtext */](59);
    core["vc" /* ɵɵpipe */](60, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](61, " ");
    core["jc" /* ɵɵelementStart */](62, "input", 63);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_25_Template_input_ngModelChange_62_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r44 = core["uc" /* ɵɵnextContext */](2); return ctx_r44.cipher.card.expYear = $event; });
    core["vc" /* ɵɵpipe */](63, "i18n");
    core["vc" /* ɵɵpipe */](64, "date");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](65, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](66, " ");
    core["jc" /* ɵɵelementStart */](67, "div", 38);
    core["Qc" /* ɵɵtext */](68, " ");
    core["jc" /* ɵɵelementStart */](69, "div", 39);
    core["Qc" /* ɵɵtext */](70, " ");
    core["jc" /* ɵɵelementStart */](71, "label", 64);
    core["Qc" /* ɵɵtext */](72);
    core["vc" /* ɵɵpipe */](73, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](74, " ");
    core["jc" /* ɵɵelementStart */](75, "input", 65);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_25_Template_input_ngModelChange_75_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r45 = core["uc" /* ɵɵnextContext */](2); return ctx_r45.cipher.card.code = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](76, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](77, " ");
    core["jc" /* ɵɵelementStart */](78, "div", 42);
    core["Qc" /* ɵɵtext */](79, " ");
    core["jc" /* ɵɵelementStart */](80, "button", 51);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_25_Template_button_click_80_listener() { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r46 = core["uc" /* ɵɵnextContext */](2); return ctx_r46.toggleCardCode(); });
    core["vc" /* ɵɵpipe */](81, "i18n");
    core["Qc" /* ɵɵtext */](82, " ");
    core["ec" /* ɵɵelement */](83, "i", 52);
    core["Qc" /* ɵɵtext */](84, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](85, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](86, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](87, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 22, "cardholderName"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.cipher.card.cardholderName);
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](17, 24, "number"));
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx_r5.showCardNumber ? "text" : "password");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.cipher.card.number);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](25, 26, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](43, add_edit_component_c0, !ctx_r5.showCardNumber, ctx_r5.showCardNumber));
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](36, 28, "brand"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.cipher.card.brand);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r5.cardBrandOptions);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](48, 30, "expirationMonth"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.cipher.card.expMonth);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r5.cardExpMonthOptions);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](60, 32, "expirationYear"));
    core["Sb" /* ɵɵadvance */](3);
    core["Ec" /* ɵɵpropertyInterpolate2 */]("placeholder", "", core["wc" /* ɵɵpipeBind1 */](63, 34, "ex"), " ", core["xc" /* ɵɵpipeBind2 */](64, 36, ctx_r5.currentDate, "yyyy"), "");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.cipher.card.expYear);
    core["Sb" /* ɵɵadvance */](10);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](73, 39, "securityCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx_r5.showCardCode ? "text" : "password");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r5.cipher.card.code);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](81, 41, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](46, add_edit_component_c0, !ctx_r5.showCardCode, ctx_r5.showCardCode));
} }
function AddEditComponent_content_31_div_27_option_10_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r48 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r48.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r48.name);
} }
function AddEditComponent_content_31_div_27_Template(rf, ctx) { if (rf & 1) {
    const _r50 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 66);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "select", 67);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_select_ngModelChange_8_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r49 = core["uc" /* ɵɵnextContext */](2); return ctx_r49.cipher.identity.title = $event; });
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, AddEditComponent_content_31_div_27_option_10_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "div", 16);
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "label", 68);
    core["Qc" /* ɵɵtext */](17);
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["jc" /* ɵɵelementStart */](20, "input", 69);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_20_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r51 = core["uc" /* ɵɵnextContext */](2); return ctx_r51.cipher.identity.firstName = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["jc" /* ɵɵelementStart */](23, "div", 16);
    core["Qc" /* ɵɵtext */](24, " ");
    core["jc" /* ɵɵelementStart */](25, "label", 70);
    core["Qc" /* ɵɵtext */](26);
    core["vc" /* ɵɵpipe */](27, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["jc" /* ɵɵelementStart */](29, "input", 71);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_29_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r52 = core["uc" /* ɵɵnextContext */](2); return ctx_r52.cipher.identity.middleName = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](31, " ");
    core["jc" /* ɵɵelementStart */](32, "div", 16);
    core["Qc" /* ɵɵtext */](33, " ");
    core["jc" /* ɵɵelementStart */](34, "label", 72);
    core["Qc" /* ɵɵtext */](35);
    core["vc" /* ɵɵpipe */](36, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](37, " ");
    core["jc" /* ɵɵelementStart */](38, "input", 73);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_38_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r53 = core["uc" /* ɵɵnextContext */](2); return ctx_r53.cipher.identity.lastName = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](39, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](40, " ");
    core["jc" /* ɵɵelementStart */](41, "div", 16);
    core["Qc" /* ɵɵtext */](42, " ");
    core["jc" /* ɵɵelementStart */](43, "label", 74);
    core["Qc" /* ɵɵtext */](44);
    core["vc" /* ɵɵpipe */](45, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](46, " ");
    core["jc" /* ɵɵelementStart */](47, "input", 75);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_47_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r54 = core["uc" /* ɵɵnextContext */](2); return ctx_r54.cipher.identity.username = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](48, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](49, " ");
    core["jc" /* ɵɵelementStart */](50, "div", 16);
    core["Qc" /* ɵɵtext */](51, " ");
    core["jc" /* ɵɵelementStart */](52, "label", 76);
    core["Qc" /* ɵɵtext */](53);
    core["vc" /* ɵɵpipe */](54, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](55, " ");
    core["jc" /* ɵɵelementStart */](56, "input", 77);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_56_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r55 = core["uc" /* ɵɵnextContext */](2); return ctx_r55.cipher.identity.company = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](57, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](58, " ");
    core["jc" /* ɵɵelementStart */](59, "div", 16);
    core["Qc" /* ɵɵtext */](60, " ");
    core["jc" /* ɵɵelementStart */](61, "label", 78);
    core["Qc" /* ɵɵtext */](62);
    core["vc" /* ɵɵpipe */](63, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](64, " ");
    core["jc" /* ɵɵelementStart */](65, "input", 79);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_65_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r56 = core["uc" /* ɵɵnextContext */](2); return ctx_r56.cipher.identity.ssn = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](66, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](67, " ");
    core["jc" /* ɵɵelementStart */](68, "div", 16);
    core["Qc" /* ɵɵtext */](69, " ");
    core["jc" /* ɵɵelementStart */](70, "label", 80);
    core["Qc" /* ɵɵtext */](71);
    core["vc" /* ɵɵpipe */](72, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](73, " ");
    core["jc" /* ɵɵelementStart */](74, "input", 81);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_74_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r57 = core["uc" /* ɵɵnextContext */](2); return ctx_r57.cipher.identity.passportNumber = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](75, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](76, " ");
    core["jc" /* ɵɵelementStart */](77, "div", 16);
    core["Qc" /* ɵɵtext */](78, " ");
    core["jc" /* ɵɵelementStart */](79, "label", 82);
    core["Qc" /* ɵɵtext */](80);
    core["vc" /* ɵɵpipe */](81, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](82, " ");
    core["jc" /* ɵɵelementStart */](83, "input", 83);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_83_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r58 = core["uc" /* ɵɵnextContext */](2); return ctx_r58.cipher.identity.licenseNumber = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](84, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](85, " ");
    core["jc" /* ɵɵelementStart */](86, "div", 16);
    core["Qc" /* ɵɵtext */](87, " ");
    core["jc" /* ɵɵelementStart */](88, "label", 84);
    core["Qc" /* ɵɵtext */](89);
    core["vc" /* ɵɵpipe */](90, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](91, " ");
    core["jc" /* ɵɵelementStart */](92, "input", 85);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_92_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r59 = core["uc" /* ɵɵnextContext */](2); return ctx_r59.cipher.identity.email = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](93, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](94, " ");
    core["jc" /* ɵɵelementStart */](95, "div", 16);
    core["Qc" /* ɵɵtext */](96, " ");
    core["jc" /* ɵɵelementStart */](97, "label", 86);
    core["Qc" /* ɵɵtext */](98);
    core["vc" /* ɵɵpipe */](99, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](100, " ");
    core["jc" /* ɵɵelementStart */](101, "input", 87);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_101_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r60 = core["uc" /* ɵɵnextContext */](2); return ctx_r60.cipher.identity.phone = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](102, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](103, " ");
    core["jc" /* ɵɵelementStart */](104, "div", 16);
    core["Qc" /* ɵɵtext */](105, " ");
    core["jc" /* ɵɵelementStart */](106, "label", 88);
    core["Qc" /* ɵɵtext */](107);
    core["vc" /* ɵɵpipe */](108, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](109, " ");
    core["jc" /* ɵɵelementStart */](110, "input", 89);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_110_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r61 = core["uc" /* ɵɵnextContext */](2); return ctx_r61.cipher.identity.address1 = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](111, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](112, " ");
    core["jc" /* ɵɵelementStart */](113, "div", 16);
    core["Qc" /* ɵɵtext */](114, " ");
    core["jc" /* ɵɵelementStart */](115, "label", 90);
    core["Qc" /* ɵɵtext */](116);
    core["vc" /* ɵɵpipe */](117, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](118, " ");
    core["jc" /* ɵɵelementStart */](119, "input", 91);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_119_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r62 = core["uc" /* ɵɵnextContext */](2); return ctx_r62.cipher.identity.address2 = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](120, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](121, " ");
    core["jc" /* ɵɵelementStart */](122, "div", 16);
    core["Qc" /* ɵɵtext */](123, " ");
    core["jc" /* ɵɵelementStart */](124, "label", 92);
    core["Qc" /* ɵɵtext */](125);
    core["vc" /* ɵɵpipe */](126, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](127, " ");
    core["jc" /* ɵɵelementStart */](128, "input", 93);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_128_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r63 = core["uc" /* ɵɵnextContext */](2); return ctx_r63.cipher.identity.address3 = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](129, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](130, " ");
    core["jc" /* ɵɵelementStart */](131, "div", 16);
    core["Qc" /* ɵɵtext */](132, " ");
    core["jc" /* ɵɵelementStart */](133, "label", 94);
    core["Qc" /* ɵɵtext */](134);
    core["vc" /* ɵɵpipe */](135, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](136, " ");
    core["jc" /* ɵɵelementStart */](137, "input", 95);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_137_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r64 = core["uc" /* ɵɵnextContext */](2); return ctx_r64.cipher.identity.city = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](138, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](139, " ");
    core["jc" /* ɵɵelementStart */](140, "div", 16);
    core["Qc" /* ɵɵtext */](141, " ");
    core["jc" /* ɵɵelementStart */](142, "label", 96);
    core["Qc" /* ɵɵtext */](143);
    core["vc" /* ɵɵpipe */](144, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](145, " ");
    core["jc" /* ɵɵelementStart */](146, "input", 97);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_146_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r65 = core["uc" /* ɵɵnextContext */](2); return ctx_r65.cipher.identity.state = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](147, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](148, " ");
    core["jc" /* ɵɵelementStart */](149, "div", 16);
    core["Qc" /* ɵɵtext */](150, " ");
    core["jc" /* ɵɵelementStart */](151, "label", 98);
    core["Qc" /* ɵɵtext */](152);
    core["vc" /* ɵɵpipe */](153, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](154, " ");
    core["jc" /* ɵɵelementStart */](155, "input", 99);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_155_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r66 = core["uc" /* ɵɵnextContext */](2); return ctx_r66.cipher.identity.postalCode = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](156, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](157, " ");
    core["jc" /* ɵɵelementStart */](158, "div", 16);
    core["Qc" /* ɵɵtext */](159, " ");
    core["jc" /* ɵɵelementStart */](160, "label", 100);
    core["Qc" /* ɵɵtext */](161);
    core["vc" /* ɵɵpipe */](162, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](163, " ");
    core["jc" /* ɵɵelementStart */](164, "input", 101);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_27_Template_input_ngModelChange_164_listener($event) { core["Jc" /* ɵɵrestoreView */](_r50); const ctx_r67 = core["uc" /* ɵɵnextContext */](2); return ctx_r67.cipher.identity.country = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](165, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](166, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r6 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 37, "title"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.title);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r6.identityTitleOptions);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](18, 39, "firstName"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.firstName);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](27, 41, "middleName"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.middleName);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](36, 43, "lastName"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.lastName);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](45, 45, "username"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.username);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](54, 47, "company"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.company);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](63, 49, "ssn"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.ssn);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](72, 51, "passportNumber"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.passportNumber);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](81, 53, "licenseNumber"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.licenseNumber);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](90, 55, "email"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.email);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](99, 57, "phone"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.phone);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](108, 59, "address1"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.address1);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](117, 61, "address2"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.address2);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](126, 63, "address3"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.address3);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](135, 65, "cityTown"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.city);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](144, 67, "stateProvince"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.state);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](153, 69, "zipPostalCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.postalCode);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](162, 71, "country"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r6.cipher.identity.country);
} }
function AddEditComponent_content_31_div_31_ng_container_4_div_2_select_21_option_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const u_r76 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", u_r76);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](u_r76);
} }
function AddEditComponent_content_31_div_31_ng_container_4_div_2_select_21_Template(rf, ctx) { if (rf & 1) {
    const _r79 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "select", 114);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_31_ng_container_4_div_2_select_21_Template_select_ngModelChange_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r79); const u_r70 = core["uc" /* ɵɵnextContext */]().$implicit; return u_r70.uri = $event; });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "option", 35);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, AddEditComponent_content_31_div_31_ng_container_4_div_2_select_21_option_6_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r80 = core["uc" /* ɵɵnextContext */]();
    const i_r71 = ctx_r80.index;
    const u_r70 = ctx_r80.$implicit;
    const ctx_r72 = core["uc" /* ɵɵnextContext */](4);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "currentUris", i_r71, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Login.Uris[", i_r71, "].CurrentUris");
    core["Bc" /* ɵɵproperty */]("ngModel", u_r70.uri)("hidden", !u_r70.showCurrentUris);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngValue", null);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */]("-- ", core["wc" /* ɵɵpipeBind1 */](4, 7, "select"), " --");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r72.currentUris);
} }
function AddEditComponent_content_31_div_31_ng_container_4_div_2_option_29_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r81 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r81.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r81.name);
} }
function AddEditComponent_content_31_div_31_ng_container_4_div_2_button_35_Template(rf, ctx) { if (rf & 1) {
    const _r84 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 51);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_31_ng_container_4_div_2_button_35_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r84); const u_r70 = core["uc" /* ɵɵnextContext */]().$implicit; const ctx_r82 = core["uc" /* ɵɵnextContext */](4); return ctx_r82.toggleUriInput(u_r70); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 115);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 1, "toggleCurrentUris"));
} }
function AddEditComponent_content_31_div_31_ng_container_4_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r86 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 105);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "button", 106);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_31_ng_container_4_div_2_Template_button_click_2_listener() { core["Jc" /* ɵɵrestoreView */](_r86); const u_r70 = ctx.$implicit; const ctx_r85 = core["uc" /* ɵɵnextContext */](4); return ctx_r85.removeUri(u_r70); });
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["ec" /* ɵɵelement */](5, "i", 107);
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 39);
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "label", 108);
    core["Qc" /* ɵɵtext */](11);
    core["vc" /* ɵɵpipe */](12, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "input", 109);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_31_ng_container_4_div_2_Template_input_ngModelChange_14_listener($event) { const u_r70 = ctx.$implicit; return u_r70.uri = $event; });
    core["vc" /* ɵɵpipe */](15, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "label", 110);
    core["Qc" /* ɵɵtext */](18);
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["Oc" /* ɵɵtemplate */](21, AddEditComponent_content_31_div_31_ng_container_4_div_2_select_21_Template, 8, 9, "select", 111);
    core["Qc" /* ɵɵtext */](22, " ");
    core["jc" /* ɵɵelementStart */](23, "label", 110);
    core["Qc" /* ɵɵtext */](24);
    core["vc" /* ɵɵpipe */](25, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](26, " ");
    core["jc" /* ɵɵelementStart */](27, "select", 112);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_31_ng_container_4_div_2_Template_select_ngModelChange_27_listener($event) { const u_r70 = ctx.$implicit; return u_r70.match = $event; })("change", function AddEditComponent_content_31_div_31_ng_container_4_div_2_Template_select_change_27_listener() { core["Jc" /* ɵɵrestoreView */](_r86); const u_r70 = ctx.$implicit; const ctx_r89 = core["uc" /* ɵɵnextContext */](4); return ctx_r89.loginUriMatchChanged(u_r70); });
    core["Qc" /* ɵɵtext */](28, " ");
    core["Oc" /* ɵɵtemplate */](29, AddEditComponent_content_31_div_31_ng_container_4_div_2_option_29_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](30, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](31, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](32, " ");
    core["jc" /* ɵɵelementStart */](33, "div", 42);
    core["Qc" /* ɵɵtext */](34, " ");
    core["Oc" /* ɵɵtemplate */](35, AddEditComponent_content_31_div_31_ng_container_4_div_2_button_35_Template, 5, 3, "button", 44);
    core["Qc" /* ɵɵtext */](36, " ");
    core["jc" /* ɵɵelementStart */](37, "button", 51);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_31_ng_container_4_div_2_Template_button_click_37_listener() { core["Jc" /* ɵɵrestoreView */](_r86); const u_r70 = ctx.$implicit; const ctx_r90 = core["uc" /* ɵɵnextContext */](4); return ctx_r90.toggleUriOptions(u_r70); });
    core["vc" /* ɵɵpipe */](38, "i18n");
    core["Qc" /* ɵɵtext */](39, " ");
    core["ec" /* ɵɵelement */](40, "i", 113);
    core["Qc" /* ɵɵtext */](41, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](42, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](43, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const u_r70 = ctx.$implicit;
    const i_r71 = ctx.index;
    const ctx_r69 = core["uc" /* ɵɵnextContext */](4);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 22, "remove"));
    core["Sb" /* ɵɵadvance */](8);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "loginUri", i_r71, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["xc" /* ɵɵpipeBind2 */](12, 24, "uriPosition", i_r71 + 1));
    core["Sb" /* ɵɵadvance */](3);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "loginUri", i_r71, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Login.Uris[", i_r71, "].Uri");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("placeholder", "", core["wc" /* ɵɵpipeBind1 */](15, 27, "ex"), " https://google.com");
    core["Bc" /* ɵɵproperty */]("ngModel", u_r70.uri)("hidden", u_r70.showUriOptionsInput === true);
    core["Sb" /* ɵɵadvance */](3);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "loginUriMatch", i_r71, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Tc" /* ɵɵtextInterpolate2 */](" ", core["wc" /* ɵɵpipeBind1 */](19, 29, "currentUri"), " ", i_r71 + 1, " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r69.currentUris && ctx_r69.currentUris.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "loginUriMatch", i_r71, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Tc" /* ɵɵtextInterpolate2 */](" ", core["wc" /* ɵɵpipeBind1 */](25, 31, "matchDetection"), " ", i_r71 + 1, " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "loginUriMatch", i_r71, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Login.Uris[", i_r71, "].Match");
    core["Bc" /* ɵɵproperty */]("ngModel", u_r70.match)("hidden", u_r70.showOptions === false || u_r70.showOptions == null && u_r70.match == null);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r69.uriMatchOptions);
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r69.currentUris && ctx_r69.currentUris.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](38, 33, "toggleOptions"));
} }
function AddEditComponent_content_31_div_31_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, AddEditComponent_content_31_div_31_ng_container_4_div_2_Template, 44, 35, "div", 104);
    core["Qc" /* ɵɵtext */](3, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r68 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r68.cipher.login.uris)("ngForTrackBy", ctx_r68.trackByFunction);
} }
function AddEditComponent_content_31_div_31_Template(rf, ctx) { if (rf & 1) {
    const _r92 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 12);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, AddEditComponent_content_31_div_31_ng_container_4_Template, 4, 2, "ng-container", 10);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "button", 102);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_31_Template_button_click_6_listener() { core["Jc" /* ɵɵrestoreView */](_r92); const ctx_r91 = core["uc" /* ɵɵnextContext */](2); return ctx_r91.addUri(); });
    core["Qc" /* ɵɵtext */](7, " ");
    core["ec" /* ɵɵelement */](8, "i", 103);
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r7 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.login.hasUris);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](10, 2, "newUri"), " ");
} }
function AddEditComponent_content_31_div_33_option_12_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r94 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r94.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r94.name);
} }
function AddEditComponent_content_31_div_33_Template(rf, ctx) { if (rf & 1) {
    const _r96 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 12);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 16);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "label", 116);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "select", 117);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_33_Template_select_ngModelChange_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r96); const ctx_r95 = core["uc" /* ɵɵnextContext */](2); return ctx_r95.cipher.login.autofillOnPageLoad = $event; });
    core["Qc" /* ɵɵtext */](11, " ");
    core["Oc" /* ɵɵtemplate */](12, AddEditComponent_content_31_div_33_option_12_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r8 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](7);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](8, 3, "itemAutoFillOnPageLoad"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r8.cipher.login.autofillOnPageLoad);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r8.autofillOnPageLoadOptions);
} }
function AddEditComponent_content_31_option_47_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const f_r97 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", f_r97.id);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](f_r97.name);
} }
function AddEditComponent_content_31_div_60_Template(rf, ctx) { if (rf & 1) {
    const _r99 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 23);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 118);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "a", 119);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["Qc" /* ɵɵtext */](7, " ");
    core["ec" /* ɵɵelement */](8, "i", 120);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "input", 121);
    core["qc" /* ɵɵlistener */]("change", function AddEditComponent_content_31_div_60_Template_input_change_12_listener() { core["Jc" /* ɵɵrestoreView */](_r99); const ctx_r98 = core["uc" /* ɵɵnextContext */](2); return ctx_r98.repromptChanged(); });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r10 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "passwordPrompt"), " ");
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](6, 5, "learnMore"));
    core["Sb" /* ɵɵadvance */](7);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r10.reprompt);
} }
function AddEditComponent_content_31_button_62_i_6_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 125);
} }
function AddEditComponent_content_31_button_62_i_8_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 126);
} }
function AddEditComponent_content_31_button_62_Template(rf, ctx) { if (rf & 1) {
    const _r103 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 122);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_button_62_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r103); const ctx_r102 = core["uc" /* ɵɵnextContext */](2); return ctx_r102.attachments(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 39);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, AddEditComponent_content_31_button_62_i_6_Template, 1, 0, "i", 123);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, AddEditComponent_content_31_button_62_i_8_Template, 1, 0, "i", 124);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r11 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "attachments"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r11.openAttachmentsInPopup);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r11.openAttachmentsInPopup);
} }
function AddEditComponent_content_31_button_64_Template(rf, ctx) { if (rf & 1) {
    const _r105 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 122);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_button_64_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r105); const ctx_r104 = core["uc" /* ɵɵnextContext */](2); return ctx_r104.editCollections(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 39);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 126);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 1, "collections"));
} }
function AddEditComponent_content_31_div_89_option_16_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 35);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r107 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r107.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r107.name);
} }
function AddEditComponent_content_31_div_89_Template(rf, ctx) { if (rf & 1) {
    const _r109 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 12);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 13);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 14);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 16);
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "label", 127);
    core["Qc" /* ɵɵtext */](11);
    core["vc" /* ɵɵpipe */](12, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "select", 128);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_89_Template_select_ngModelChange_14_listener($event) { core["Jc" /* ɵɵrestoreView */](_r109); const ctx_r108 = core["uc" /* ɵɵnextContext */](2); return ctx_r108.cipher.organizationId = $event; })("change", function AddEditComponent_content_31_div_89_Template_select_change_14_listener() { core["Jc" /* ɵɵrestoreView */](_r109); const ctx_r110 = core["uc" /* ɵɵnextContext */](2); return ctx_r110.organizationChanged(); });
    core["Qc" /* ɵɵtext */](15, " ");
    core["Oc" /* ɵɵtemplate */](16, AddEditComponent_content_31_div_89_option_16_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](17, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r13 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 4, "ownership"), " ");
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](12, 6, "whoOwnsThisItem"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r13.cipher.organizationId);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r13.ownershipOptions);
} }
function AddEditComponent_content_31_div_91_div_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 130);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 1, "noCollectionsInList"), " ");
} }
function AddEditComponent_content_31_div_91_div_8_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 23);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 108);
    core["Qc" /* ɵɵtext */](3);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "input", 132);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_div_91_div_8_div_2_Template_input_ngModelChange_5_listener($event) { const c_r114 = ctx.$implicit; return c_r114.checked = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const c_r114 = ctx.$implicit;
    const i_r115 = ctx.index;
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "collection_", i_r115, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](c_r114.name);
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "collection_", i_r115, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Collection[", i_r115, "].Checked");
    core["Bc" /* ɵɵproperty */]("ngModel", c_r114.checked);
} }
function AddEditComponent_content_31_div_91_div_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, AddEditComponent_content_31_div_91_div_8_div_2_Template, 7, 5, "div", 131);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r112 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r112.collections);
} }
function AddEditComponent_content_31_div_91_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 12);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 13);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, AddEditComponent_content_31_div_91_div_6_Template, 6, 3, "div", 129);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, AddEditComponent_content_31_div_91_div_8_Template, 4, 1, "div", 129);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r14 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "collections"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r14.collections || !ctx_r14.collections.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r14.collections && ctx_r14.collections.length);
} }
function AddEditComponent_content_31_div_93_Template(rf, ctx) { if (rf & 1) {
    const _r119 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 133);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 134);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "button", 135, 136);
    core["qc" /* ɵɵlistener */]("click", function AddEditComponent_content_31_div_93_Template_button_click_4_listener() { core["Jc" /* ɵɵrestoreView */](_r119); const ctx_r118 = core["uc" /* ɵɵnextContext */](2); return ctx_r118.delete(); });
    core["Qc" /* ɵɵtext */](6, " ");
    core["jc" /* ɵɵelementStart */](7, "div", 137);
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 138);
    core["Qc" /* ɵɵtext */](10, " ");
    core["ec" /* ɵɵelement */](11, "i", 139);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ec" /* ɵɵelement */](13, "i", 140);
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "span");
    core["Qc" /* ɵɵtext */](17);
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const _r117 = core["Ic" /* ɵɵreference */](5);
    const ctx_r15 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("appApiAction", ctx_r15.deletePromise);
    core["Sb" /* ɵɵadvance */](7);
    core["Bc" /* ɵɵproperty */]("hidden", _r117.loading);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !_r117.loading);
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](18, 4, "deleteItem"));
} }
function AddEditComponent_content_31_Template(rf, ctx) { if (rf & 1) {
    const _r121 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "content");
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, AddEditComponent_content_31_app_callout_2_Template, 3, 3, "app-callout", 11);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 12);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 13);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "div", 14);
    core["Qc" /* ɵɵtext */](11, " ");
    core["Oc" /* ɵɵtemplate */](12, AddEditComponent_content_31_div_12_Template, 11, 5, "div", 15);
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "div", 16);
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "label", 17);
    core["Qc" /* ɵɵtext */](17);
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["jc" /* ɵɵelementStart */](20, "input", 18);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_Template_input_ngModelChange_20_listener($event) { core["Jc" /* ɵɵrestoreView */](_r121); const ctx_r120 = core["uc" /* ɵɵnextContext */](); return ctx_r120.cipher.name = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["Oc" /* ɵɵtemplate */](23, AddEditComponent_content_31_div_23_Template, 41, 19, "div", 10);
    core["Qc" /* ɵɵtext */](24, " ");
    core["Oc" /* ɵɵtemplate */](25, AddEditComponent_content_31_div_25_Template, 88, 49, "div", 10);
    core["Qc" /* ɵɵtext */](26, " ");
    core["Oc" /* ɵɵtemplate */](27, AddEditComponent_content_31_div_27_Template, 167, 73, "div", 10);
    core["Qc" /* ɵɵtext */](28, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["Oc" /* ɵɵtemplate */](31, AddEditComponent_content_31_div_31_Template, 13, 4, "div", 19);
    core["Qc" /* ɵɵtext */](32, " ");
    core["Oc" /* ɵɵtemplate */](33, AddEditComponent_content_31_div_33_Template, 17, 5, "div", 19);
    core["Qc" /* ɵɵtext */](34, " ");
    core["jc" /* ɵɵelementStart */](35, "div", 12);
    core["Qc" /* ɵɵtext */](36, " ");
    core["jc" /* ɵɵelementStart */](37, "div", 14);
    core["Qc" /* ɵɵtext */](38, " ");
    core["jc" /* ɵɵelementStart */](39, "div", 16);
    core["Qc" /* ɵɵtext */](40, " ");
    core["jc" /* ɵɵelementStart */](41, "label", 20);
    core["Qc" /* ɵɵtext */](42);
    core["vc" /* ɵɵpipe */](43, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](44, " ");
    core["jc" /* ɵɵelementStart */](45, "select", 21);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_Template_select_ngModelChange_45_listener($event) { core["Jc" /* ɵɵrestoreView */](_r121); const ctx_r122 = core["uc" /* ɵɵnextContext */](); return ctx_r122.cipher.folderId = $event; });
    core["Qc" /* ɵɵtext */](46, " ");
    core["Oc" /* ɵɵtemplate */](47, AddEditComponent_content_31_option_47_Template, 2, 2, "option", 22);
    core["Qc" /* ɵɵtext */](48, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](49, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](50, " ");
    core["jc" /* ɵɵelementStart */](51, "div", 23);
    core["Qc" /* ɵɵtext */](52, " ");
    core["jc" /* ɵɵelementStart */](53, "label", 24);
    core["Qc" /* ɵɵtext */](54);
    core["vc" /* ɵɵpipe */](55, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](56, " ");
    core["jc" /* ɵɵelementStart */](57, "input", 25);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_Template_input_ngModelChange_57_listener($event) { core["Jc" /* ɵɵrestoreView */](_r121); const ctx_r123 = core["uc" /* ɵɵnextContext */](); return ctx_r123.cipher.favorite = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](58, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](59, " ");
    core["Oc" /* ɵɵtemplate */](60, AddEditComponent_content_31_div_60_Template, 14, 7, "div", 26);
    core["Qc" /* ɵɵtext */](61, " ");
    core["Oc" /* ɵɵtemplate */](62, AddEditComponent_content_31_button_62_Template, 10, 5, "button", 27);
    core["Qc" /* ɵɵtext */](63, " ");
    core["Oc" /* ɵɵtemplate */](64, AddEditComponent_content_31_button_64_Template, 8, 3, "button", 27);
    core["Qc" /* ɵɵtext */](65, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](66, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](67, " ");
    core["jc" /* ɵɵelementStart */](68, "div", 12);
    core["Qc" /* ɵɵtext */](69, " ");
    core["jc" /* ɵɵelementStart */](70, "div", 13);
    core["Qc" /* ɵɵtext */](71, " ");
    core["jc" /* ɵɵelementStart */](72, "label", 28);
    core["Qc" /* ɵɵtext */](73);
    core["vc" /* ɵɵpipe */](74, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](75, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](76, " ");
    core["jc" /* ɵɵelementStart */](77, "div", 14);
    core["Qc" /* ɵɵtext */](78, " ");
    core["jc" /* ɵɵelementStart */](79, "div", 16);
    core["Qc" /* ɵɵtext */](80, " ");
    core["jc" /* ɵɵelementStart */](81, "textarea", 29);
    core["qc" /* ɵɵlistener */]("ngModelChange", function AddEditComponent_content_31_Template_textarea_ngModelChange_81_listener($event) { core["Jc" /* ɵɵrestoreView */](_r121); const ctx_r124 = core["uc" /* ɵɵnextContext */](); return ctx_r124.cipher.notes = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](82, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](83, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](84, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](85, " ");
    core["jc" /* ɵɵelementStart */](86, "app-vault-add-edit-custom-fields", 30);
    core["Qc" /* ɵɵtext */](87, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](88, " ");
    core["Oc" /* ɵɵtemplate */](89, AddEditComponent_content_31_div_89_Template, 21, 8, "div", 19);
    core["Qc" /* ɵɵtext */](90, " ");
    core["Oc" /* ɵɵtemplate */](91, AddEditComponent_content_31_div_91_Template, 10, 5, "div", 19);
    core["Qc" /* ɵɵtext */](92, " ");
    core["Oc" /* ɵɵtemplate */](93, AddEditComponent_content_31_div_93_Template, 23, 6, "div", 31);
    core["Qc" /* ɵɵtext */](94, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.allowOwnershipOptions() && !ctx_r1.allowPersonal);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](8, 26, "itemInformation"), " ");
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.editMode);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](18, 28, "name"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.cipher.name);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.type === ctx_r1.cipherType.Login);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.type === ctx_r1.cipherType.Card);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.type === ctx_r1.cipherType.Identity);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.type === ctx_r1.cipherType.Login);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.showAutoFillOnPageLoadOptions);
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](43, 30, "folder"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.cipher.folderId);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r1.folders);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](55, 32, "favorite"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.cipher.favorite);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.canUseReprompt);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.editMode && ctx_r1.showAttachments && !ctx_r1.cloneMode);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.editMode && ctx_r1.cipher.organizationId && !ctx_r1.cloneMode);
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](74, 34, "notes"));
    core["Sb" /* ɵɵadvance */](8);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.cipher.notes);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("cipher", ctx_r1.cipher)("thisCipherType", ctx_r1.cipher.type)("editMode", ctx_r1.editMode);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.allowOwnershipOptions());
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", (!ctx_r1.editMode || ctx_r1.cloneMode) && ctx_r1.cipher.organizationId);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.editMode && !ctx_r1.cloneMode);
} }
class vault_add_edit_component_AddEditComponent extends add_edit_component_AddEditComponent {
    constructor(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService, userService, collectionService, messagingService, route, router, location, eventService, policyService, popupUtilsService, storageService, logService, passwordRepromptService) {
        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService, userService, collectionService, messagingService, eventService, policyService, passwordRepromptService, logService);
        this.route = route;
        this.router = router;
        this.location = location;
        this.popupUtilsService = popupUtilsService;
        this.storageService = storageService;
        this.showAttachments = true;
    }
    ngOnInit() {
        const _super = Object.create(null, {
            ngOnInit: { get: () => super.ngOnInit }
        });
        return vault_add_edit_component_awaiter(this, void 0, void 0, function* () {
            yield _super.ngOnInit.call(this);
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => vault_add_edit_component_awaiter(this, void 0, void 0, function* () {
                if (params.cipherId) {
                    this.cipherId = params.cipherId;
                }
                if (params.folderId) {
                    this.folderId = params.folderId;
                }
                if (params.collectionId) {
                    const collection = this.writeableCollections.find(c => c.id === params.collectionId);
                    if (collection != null) {
                        this.collectionIds = [collection.id];
                        this.organizationId = collection.organizationId;
                    }
                }
                if (params.type) {
                    const type = parseInt(params.type, null);
                    this.type = type;
                }
                this.editMode = !params.cipherId;
                if (params.cloneMode != null) {
                    this.cloneMode = params.cloneMode === 'true';
                }
                yield this.load();
                if (!this.editMode || this.cloneMode) {
                    if (!this.popupUtilsService.inPopout(window) && params.name &&
                        (this.cipher.name == null || this.cipher.name === '')) {
                        this.cipher.name = params.name;
                    }
                    if (!this.popupUtilsService.inPopout(window) && params.uri &&
                        (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {
                        this.cipher.login.uris[0].uri = params.uri;
                    }
                }
                this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);
            }));
            if (!this.editMode) {
                const tabs = yield browserApi["a" /* BrowserApi */].tabsQuery({ windowType: 'normal' });
                this.currentUris = tabs == null ? null :
                    tabs.filter(tab => tab.url != null && tab.url !== '').map(tab => tab.url);
            }
            window.setTimeout(() => {
                if (!this.editMode) {
                    if (this.cipher.name != null && this.cipher.name !== '') {
                        document.getElementById('loginUsername').focus();
                    }
                    else {
                        document.getElementById('name').focus();
                    }
                }
            }, 200);
        });
    }
    load() {
        const _super = Object.create(null, {
            load: { get: () => super.load }
        });
        return vault_add_edit_component_awaiter(this, void 0, void 0, function* () {
            yield _super.load.call(this);
            this.showAutoFillOnPageLoadOptions = this.cipher.type === cipherType["a" /* CipherType */].Login &&
                (yield this.storageService.get(constants_service["a" /* ConstantsService */].enableAutoFillOnPageLoadKey));
        });
    }
    submit() {
        const _super = Object.create(null, {
            submit: { get: () => super.submit }
        });
        return vault_add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (yield _super.submit.call(this)) {
                if (this.cloneMode) {
                    this.router.navigate(['/tabs/vault']);
                }
                else {
                    this.location.back();
                }
                return true;
            }
            return false;
        });
    }
    attachments() {
        super.attachments();
        if (this.openAttachmentsInPopup) {
            const destinationUrl = this.router.createUrlTree(['/attachments'], { queryParams: { cipherId: this.cipher.id } }).toString();
            const currentBaseUrl = window.location.href.replace(this.router.url, '');
            this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);
        }
        else {
            this.router.navigate(['/attachments'], { queryParams: { cipherId: this.cipher.id } });
        }
    }
    editCollections() {
        super.editCollections();
        if (this.cipher.organizationId != null) {
            this.router.navigate(['/collections'], { queryParams: { cipherId: this.cipher.id } });
        }
    }
    cancel() {
        super.cancel();
        this.location.back();
    }
    generatePassword() {
        const _super = Object.create(null, {
            generatePassword: { get: () => super.generatePassword }
        });
        return vault_add_edit_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield _super.generatePassword.call(this);
            if (confirmed) {
                this.stateService.save('addEditCipherInfo', {
                    cipher: this.cipher,
                    collectionIds: this.collections == null ? [] :
                        this.collections.filter(c => c.checked).map(c => c.id),
                });
                this.router.navigate(['generator']);
            }
            return confirmed;
        });
    }
    delete() {
        const _super = Object.create(null, {
            delete: { get: () => super.delete }
        });
        return vault_add_edit_component_awaiter(this, void 0, void 0, function* () {
            const confirmed = yield _super.delete.call(this);
            if (confirmed) {
                this.router.navigate(['/tabs/vault']);
            }
            return confirmed;
        });
    }
    toggleUriInput(uri) {
        const u = uri;
        u.showCurrentUris = !u.showCurrentUris;
    }
    allowOwnershipOptions() {
        return (!this.editMode || this.cloneMode) && this.ownershipOptions
            && (this.ownershipOptions.length > 1 || !this.allowPersonal);
    }
}
vault_add_edit_component_AddEditComponent.ɵfac = function AddEditComponent_Factory(t) { return new (t || vault_add_edit_component_AddEditComponent)(core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](FolderService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](AuditService), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */]), core["dc" /* ɵɵdirectiveInject */](EventService), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](LogService), core["dc" /* ɵɵdirectiveInject */](passwordReprompt_service_PasswordRepromptService)); };
vault_add_edit_component_AddEditComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_add_edit_component_AddEditComponent, selectors: [["app-vault-add-edit"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 34, vars: 12, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [4, "ngIf"], ["type", "info", 4, "ngIf"], [1, "box"], [1, "box-header"], [1, "box-content"], ["class", "box-content-row", "appBoxRow", "", 4, "ngIf"], ["appBoxRow", "", 1, "box-content-row"], ["for", "name"], ["id", "name", "type", "text", "name", "Name", 3, "ngModel", "ngModelChange"], ["class", "box", 4, "ngIf"], ["for", "folder"], ["id", "folder", "name", "FolderId", 3, "ngModel", "ngModelChange"], [3, "ngValue", 4, "ngFor", "ngForOf"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox"], ["for", "favorite"], ["id", "favorite", "type", "checkbox", "name", "Favorite", 3, "ngModel", "ngModelChange"], ["class", "box-content-row box-content-row-checkbox", "appBoxRow", "", 4, "ngIf"], ["type", "button", "class", "box-content-row box-content-row-flex text-default", "appStopClick", "", "appBlurClick", "", 3, "click", 4, "ngIf"], ["for", "notes"], ["id", "notes", "name", "Notes", "rows", "6", 3, "ngModel", "ngModelChange"], [3, "cipher", "thisCipherType", "editMode"], ["class", "box list", 4, "ngIf"], ["type", "info"], ["for", "type"], ["id", "type", "name", "Type", 3, "ngModel", "ngModelChange"], [3, "ngValue"], ["for", "loginUsername"], ["id", "loginUsername", "type", "text", "name", "Login.Username", "inputmode", "email", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-flex"], [1, "row-main"], ["for", "loginPassword"], ["id", "loginPassword", "name", "Login.Password", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "disabled", "ngModelChange"], [1, "action-buttons"], ["type", "button", "class", "row-btn btn", "appBlurClick", "", 3, "appA11yTitle", "appApiAction", "disabled", "click", 4, "ngIf"], ["type", "button", "class", "row-btn", "appStopClick", "", "appBlurClick", "", 3, "appA11yTitle", "click", 4, "ngIf"], ["for", "loginTotp"], ["id", "loginTotp", "name", "Login.Totp", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "disabled", "ngModelChange"], ["type", "button", "appBlurClick", "", 1, "row-btn", "btn", 3, "appA11yTitle", "appApiAction", "disabled", "click"], ["checkPasswordBtn", ""], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-check-circle", 3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-spinner", "fa-spin", 3, "hidden"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-refresh"], ["for", "cardCardholderName"], ["id", "cardCardholderName", "type", "text", "name", "Card.CardCardholderName", 3, "ngModel", "ngModelChange"], ["for", "cardNumber"], ["id", "cardNumber", "name", "Card.Number", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], ["for", "cardBrand"], ["id", "cardBrand", "name", "Card.Brand", 3, "ngModel", "ngModelChange"], ["for", "cardExpMonth"], ["id", "cardExpMonth", "name", "Card.ExpMonth", 3, "ngModel", "ngModelChange"], ["for", "cardExpYear"], ["id", "cardExpYear", "type", "text", "name", "Card.ExpYear", 3, "ngModel", "placeholder", "ngModelChange"], ["for", "cardCode"], ["id", "cardCode", "name", "Card.Code", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], ["for", "idTitle"], ["id", "idTitle", "name", "Identity.Title", 3, "ngModel", "ngModelChange"], ["for", "idFirstName"], ["id", "idFirstName", "type", "text", "name", "Identity.FirstName", 3, "ngModel", "ngModelChange"], ["for", "idMiddleName"], ["id", "idMiddleName", "type", "text", "name", "Identity.MiddleName", 3, "ngModel", "ngModelChange"], ["for", "idLastName"], ["id", "idLastName", "type", "text", "name", "Identity.LastName", 3, "ngModel", "ngModelChange"], ["for", "idUsername"], ["id", "idUsername", "type", "text", "name", "Identity.Username", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "idCompany"], ["id", "idCompany", "type", "text", "name", "Identity.Company", 3, "ngModel", "ngModelChange"], ["for", "idSsn"], ["id", "idSsn", "type", "text", "name", "Identity.SSN", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "idPassportNumber"], ["id", "idPassportNumber", "type", "text", "name", "Identity.PassportNumber", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "idLicenseNumber"], ["id", "idLicenseNumber", "type", "text", "name", "Identity.LicenseNumber", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "idEmail"], ["id", "idEmail", "type", "text", "name", "Identity.Email", "appInputVerbatim", "", 3, "ngModel", "ngModelChange"], ["for", "idPhone"], ["id", "idPhone", "type", "text", "name", "Identity.Phone", 3, "ngModel", "ngModelChange"], ["for", "idAddress1"], ["id", "idAddress1", "type", "text", "name", "Identity.Address1", 3, "ngModel", "ngModelChange"], ["for", "idAddress2"], ["id", "idAddress2", "type", "text", "name", "Identity.Address2", 3, "ngModel", "ngModelChange"], ["for", "idAddress3"], ["id", "idAddress3", "type", "text", "name", "Identity.Address3", 3, "ngModel", "ngModelChange"], ["for", "idCity"], ["id", "idCity", "type", "text", "name", "Identity.City", 3, "ngModel", "ngModelChange"], ["for", "idState"], ["id", "idState", "type", "text", "name", "Identity.State", 3, "ngModel", "ngModelChange"], ["for", "idPostalCode"], ["id", "idPostalCode", "type", "text", "name", "Identity.PostalCode", 3, "ngModel", "ngModelChange"], ["for", "idCountry"], ["id", "idCountry", "type", "text", "name", "Identity.Country", 3, "ngModel", "ngModelChange"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", "box-content-row-newmulti", 3, "click"], ["aria-hidden", "true", 1, "fa", "fa-plus-circle", "fa-fw", "fa-lg"], ["class", "box-content-row box-content-row-multi", "appBoxRow", "", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-multi"], ["type", "button", "appStopClick", "", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-minus-circle", "fa-lg"], [3, "for"], ["type", "text", "inputmode", "url", "appInputVerbatim", "", 3, "id", "name", "ngModel", "hidden", "placeholder", "ngModelChange"], [1, "sr-only", 3, "for"], [3, "id", "name", "ngModel", "hidden", "ngModelChange", 4, "ngIf"], [3, "id", "name", "ngModel", "hidden", "ngModelChange", "change"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-cog"], [3, "id", "name", "ngModel", "hidden", "ngModelChange"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-list"], ["for", "autofillOnPageLoad"], ["id", "autofillOnPageLoad", "name", "AutofillOnPageLoad", 3, "ngModel", "ngModelChange"], ["for", "passwordPrompt"], ["target", "_blank", "rel", "noopener", "href", "https://bitwarden.com/help/article/managing-items/#protect-individual-items", 3, "appA11yTitle"], ["aria-hidden", "true", 1, "fa", "fa-question-circle-o"], ["id", "passwordPrompt", "type", "checkbox", "name", "PasswordPrompt", 3, "ngModel", "change"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", "box-content-row-flex", "text-default", 3, "click"], ["class", "fa fa-external-link fa-lg fa-fw", "aria-hidden", "true", 4, "ngIf"], ["class", "fa fa-chevron-right row-sub-icon", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "fa", "fa-external-link", "fa-lg", "fa-fw"], ["aria-hidden", "true", 1, "fa", "fa-chevron-right", "row-sub-icon"], ["for", "organizationId"], ["id", "organizationId", "name", "OrganizationId", 1, "form-control", 3, "ngModel", "ngModelChange", "change"], ["class", "box-content", 4, "ngIf"], [1, "box-content-row", "padded", "no-hover"], ["class", "box-content-row box-content-row-checkbox", "appBoxRow", "", 4, "ngFor", "ngForOf"], ["type", "checkbox", 3, "id", "ngModel", "name", "ngModelChange"], [1, "box", "list"], [1, "box-content", "single-line"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", 3, "appApiAction", "click"], ["deleteBtn", ""], [1, "row-main", "text-danger"], ["aria-hidden", "true", 1, "icon", "text-danger"], [1, "fa", "fa-trash-o", "fa-lg", "fa-fw", 3, "hidden"], [1, "fa", "fa-spinner", "fa-spin", "fa-lg", "fa-fw", 3, "hidden"]], template: function AddEditComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function AddEditComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "button", 3);
        core["qc" /* ɵɵlistener */]("click", function AddEditComponent_Template_button_click_7_listener() { return ctx.cancel(); });
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["jc" /* ɵɵelementStart */](18, "div", 6);
        core["Qc" /* ɵɵtext */](19, " ");
        core["jc" /* ɵɵelementStart */](20, "button", 7);
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "span", 8);
        core["Qc" /* ɵɵtext */](23);
        core["vc" /* ɵɵpipe */](24, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](25, " ");
        core["ec" /* ɵɵelement */](26, "i", 9);
        core["Qc" /* ɵɵtext */](27, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["Oc" /* ɵɵtemplate */](31, AddEditComponent_content_31_Template, 95, 36, "content", 10);
        core["Qc" /* ɵɵtext */](32, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 8, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](ctx.title);
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](24, 10, "save"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher);
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, BlurClickDirective, common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], fesm2015_forms["y" /* SelectControlValueAccessor */], common["k" /* NgForOf */], fesm2015_forms["a" /* CheckboxControlValueAccessor */], vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent, CalloutComponent, fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */], InputVerbatimDirective, A11yTitleDirective, StopClickDirective, common["j" /* NgClass */]], pipes: [I18nPipe, common["e" /* DatePipe */]], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_add_edit_component_AddEditComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-add-edit',
                templateUrl: 'add-edit.component.html',
            }]
    }], function () { return [{ type: CipherService }, { type: FolderService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: AuditService }, { type: StateService }, { type: UserService }, { type: CollectionService }, { type: messaging_service["a" /* MessagingService */] }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: fesm2015_router["e" /* Router */] }, { type: common["h" /* Location */] }, { type: EventService }, { type: PolicyService }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: StorageService }, { type: LogService }, { type: passwordReprompt_service_PasswordRepromptService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/attachments.component.ts
var attachments_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

















class attachments_component_AttachmentsComponent {
    constructor(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, win, logService) {
        this.cipherService = cipherService;
        this.i18nService = i18nService;
        this.cryptoService = cryptoService;
        this.userService = userService;
        this.platformUtilsService = platformUtilsService;
        this.apiService = apiService;
        this.win = win;
        this.logService = logService;
        this.onUploadedAttachment = new core["t" /* EventEmitter */]();
        this.onDeletedAttachment = new core["t" /* EventEmitter */]();
        this.onReuploadedAttachment = new core["t" /* EventEmitter */]();
        this.deletePromises = {};
        this.reuploadPromises = {};
        this.emergencyAccessId = null;
    }
    ngOnInit() {
        return attachments_component_awaiter(this, void 0, void 0, function* () {
            yield this.init();
        });
    }
    submit() {
        return attachments_component_awaiter(this, void 0, void 0, function* () {
            if (!this.hasUpdatedKey) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('updateKey'));
                return;
            }
            const fileEl = document.getElementById('file');
            const files = fileEl.files;
            if (files == null || files.length === 0) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('selectFile'));
                return;
            }
            if (files[0].size > 524288000) { // 500 MB
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('maxFileSize'));
                return;
            }
            try {
                this.formPromise = this.saveCipherAttachment(files[0]);
                this.cipherDomain = yield this.formPromise;
                this.cipher = yield this.cipherDomain.decrypt();
                this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));
                this.onUploadedAttachment.emit();
            }
            catch (e) {
                this.logService.error(e);
            }
            // reset file input
            // ref: https://stackoverflow.com/a/20552042
            fileEl.type = '';
            fileEl.type = 'file';
            fileEl.value = '';
        });
    }
    delete(attachment) {
        return attachments_component_awaiter(this, void 0, void 0, function* () {
            if (this.deletePromises[attachment.id] != null) {
                return;
            }
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return;
            }
            try {
                this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);
                yield this.deletePromises[attachment.id];
                this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedAttachment'));
                const i = this.cipher.attachments.indexOf(attachment);
                if (i > -1) {
                    this.cipher.attachments.splice(i, 1);
                }
            }
            catch (e) {
                this.logService.error(e);
            }
            this.deletePromises[attachment.id] = null;
            this.onDeletedAttachment.emit();
        });
    }
    download(attachment) {
        return attachments_component_awaiter(this, void 0, void 0, function* () {
            const a = attachment;
            if (a.downloading) {
                return;
            }
            if (!this.canAccessAttachments) {
                this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'), this.i18nService.t('premiumRequiredDesc'));
                return;
            }
            let url;
            try {
                const attachmentDownloadResponse = yield this.apiService.getAttachmentData(this.cipher.id, attachment.id, this.emergencyAccessId);
                url = attachmentDownloadResponse.url;
            }
            catch (e) {
                if (e instanceof errorResponse["a" /* ErrorResponse */] && e.statusCode === 404) {
                    url = attachment.url;
                }
                else if (e instanceof errorResponse["a" /* ErrorResponse */]) {
                    throw new Error(e.getSingleMessage());
                }
                else {
                    throw e;
                }
            }
            a.downloading = true;
            const response = yield fetch(new Request(url, { cache: 'no-store' }));
            if (response.status !== 200) {
                this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));
                a.downloading = false;
                return;
            }
            try {
                const buf = yield response.arrayBuffer();
                const key = attachment.key != null ? attachment.key :
                    yield this.cryptoService.getOrgKey(this.cipher.organizationId);
                const decBuf = yield this.cryptoService.decryptFromBytes(buf, key);
                this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);
            }
            catch (e) {
                this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));
            }
            a.downloading = false;
        });
    }
    init() {
        return attachments_component_awaiter(this, void 0, void 0, function* () {
            this.cipherDomain = yield this.loadCipher();
            this.cipher = yield this.cipherDomain.decrypt();
            this.hasUpdatedKey = yield this.cryptoService.hasEncKey();
            const canAccessPremium = yield this.userService.canAccessPremium();
            this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;
            if (!this.canAccessAttachments) {
                const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'), this.i18nService.t('learnMore'), this.i18nService.t('cancel'));
                if (confirmed) {
                    this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');
                }
            }
            else if (!this.hasUpdatedKey) {
                const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'), this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');
                if (confirmed) {
                    this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');
                }
            }
        });
    }
    reuploadCipherAttachment(attachment, admin) {
        return attachments_component_awaiter(this, void 0, void 0, function* () {
            const a = attachment;
            if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {
                return;
            }
            try {
                this.reuploadPromises[attachment.id] = Promise.resolve().then(() => attachments_component_awaiter(this, void 0, void 0, function* () {
                    // 1. Download
                    a.downloading = true;
                    const response = yield fetch(new Request(attachment.url, { cache: 'no-store' }));
                    if (response.status !== 200) {
                        this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));
                        a.downloading = false;
                        return;
                    }
                    try {
                        // 2. Resave
                        const buf = yield response.arrayBuffer();
                        const key = attachment.key != null ? attachment.key :
                            yield this.cryptoService.getOrgKey(this.cipher.organizationId);
                        const decBuf = yield this.cryptoService.decryptFromBytes(buf, key);
                        this.cipherDomain = yield this.cipherService.saveAttachmentRawWithServer(this.cipherDomain, attachment.fileName, decBuf, admin);
                        this.cipher = yield this.cipherDomain.decrypt();
                        // 3. Delete old
                        this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);
                        yield this.deletePromises[attachment.id];
                        const foundAttachment = this.cipher.attachments.filter(a2 => a2.id === attachment.id);
                        if (foundAttachment.length > 0) {
                            const i = this.cipher.attachments.indexOf(foundAttachment[0]);
                            if (i > -1) {
                                this.cipher.attachments.splice(i, 1);
                            }
                        }
                        this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));
                        this.onReuploadedAttachment.emit();
                    }
                    catch (e) {
                        this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));
                    }
                    a.downloading = false;
                }));
                yield this.reuploadPromises[attachment.id];
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
    loadCipher() {
        return this.cipherService.get(this.cipherId);
    }
    saveCipherAttachment(file) {
        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);
    }
    deleteCipherAttachment(attachmentId) {
        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);
    }
}
attachments_component_AttachmentsComponent.ɵfac = function AttachmentsComponent_Factory(t) { return new (t || attachments_component_AttachmentsComponent)(core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](Window), core["dc" /* ɵɵdirectiveInject */](LogService)); };
attachments_component_AttachmentsComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: attachments_component_AttachmentsComponent, inputs: { cipherId: "cipherId" }, outputs: { onUploadedAttachment: "onUploadedAttachment", onDeletedAttachment: "onDeletedAttachment", onReuploadedAttachment: "onReuploadedAttachment" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](attachments_component_AttachmentsComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: CipherService }, { type: I18nService }, { type: CryptoService }, { type: UserService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: ApiService }, { type: Window }, { type: LogService }]; }, { cipherId: [{
            type: core["D" /* Input */]
        }], onUploadedAttachment: [{
            type: core["O" /* Output */]
        }], onDeletedAttachment: [{
            type: core["O" /* Output */]
        }], onReuploadedAttachment: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/vault/attachments.component.ts
var vault_attachments_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




























function AttachmentsComponent_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r5 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function AttachmentsComponent_button_7_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r5); const ctx_r4 = core["uc" /* ɵɵnextContext */](); return ctx_r4.close(); });
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "close"), " ");
} }
function AttachmentsComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r7 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function AttachmentsComponent_button_9_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r7); const ctx_r6 = core["uc" /* ɵɵnextContext */](); return ctx_r6.back(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 19);
    core["ec" /* ɵɵelement */](3, "i", 20);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span");
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 1, "back"));
} }
function AttachmentsComponent_div_34_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r12 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 22);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 23);
    core["Qc" /* ɵɵtext */](3);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "small", 24);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 25);
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "button", 26, 27);
    core["qc" /* ɵɵlistener */]("click", function AttachmentsComponent_div_34_div_4_Template_button_click_10_listener() { core["Jc" /* ɵɵrestoreView */](_r12); const a_r9 = ctx.$implicit; const ctx_r11 = core["uc" /* ɵɵnextContext */](2); return ctx_r11.delete(a_r9); });
    core["vc" /* ɵɵpipe */](12, "i18n");
    core["Qc" /* ɵɵtext */](13, " ");
    core["ec" /* ɵɵelement */](14, "i", 28);
    core["Qc" /* ɵɵtext */](15, " ");
    core["ec" /* ɵɵelement */](16, "i", 29);
    core["Qc" /* ɵɵtext */](17, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const a_r9 = ctx.$implicit;
    const _r10 = core["Ic" /* ɵɵreference */](11);
    const ctx_r8 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", a_r9.fileName, " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](a_r9.sizeName);
    core["Sb" /* ɵɵadvance */](4);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](12, 7, "deleteAttachment"));
    core["Bc" /* ɵɵproperty */]("appApiAction", ctx_r8.deletePromises[a_r9.id])("disabled", _r10.loading);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("hidden", _r10.loading);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !_r10.loading);
} }
function AttachmentsComponent_div_34_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 13);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, AttachmentsComponent_div_34_div_4_Template, 20, 9, "div", 21);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r3.cipher.attachments);
} }
class vault_attachments_component_AttachmentsComponent extends attachments_component_AttachmentsComponent {
    constructor(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, location, route, logService) {
        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window, logService);
        this.location = location;
        this.route = route;
    }
    ngOnInit() {
        return vault_attachments_component_awaiter(this, void 0, void 0, function* () {
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => vault_attachments_component_awaiter(this, void 0, void 0, function* () {
                this.cipherId = params.cipherId;
                yield this.init();
            }));
            this.openedAttachmentsInPopup = history.length === 1;
        });
    }
    back() {
        this.location.back();
    }
    close() {
        window.close();
    }
}
vault_attachments_component_AttachmentsComponent.ɵfac = function AttachmentsComponent_Factory(t) { return new (t || vault_attachments_component_AttachmentsComponent)(core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
vault_attachments_component_AttachmentsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_attachments_component_AttachmentsComponent, selectors: [["app-vault-attachments"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 61, vars: 22, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["type", "button", "appBlurClick", "", 3, "click", 4, "ngIf"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], ["class", "box", 4, "ngIf"], [1, "box"], [1, "box-header"], [1, "box-content", "no-hover"], [1, "box-content-row"], ["for", "file"], ["type", "file", "id", "file", "name", "file", "required", ""], [1, "box-footer"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "header-icon"], ["aria-hidden", "true", 1, "fa", "fa-chevron-left"], ["class", "box-content-row box-content-row-flex", 4, "ngFor", "ngForOf"], [1, "box-content-row", "box-content-row-flex"], [1, "row-main"], [1, "row-sub-label"], [1, "action-buttons", "no-pad"], ["type", "button", "type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", "btn", 3, "appA11yTitle", "appApiAction", "disabled", "click"], ["deleteBtn", ""], ["aria-hidden", "true", 1, "fa", "fa-trash-o", "fa-lg", "fa-fw", 3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-spin", "fa-lg", "fa-fw", 3, "hidden"]], template: function AttachmentsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function AttachmentsComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["Oc" /* ɵɵtemplate */](7, AttachmentsComponent_button_7_Template, 3, 3, "button", 3);
        core["Qc" /* ɵɵtext */](8, " ");
        core["Oc" /* ɵɵtemplate */](9, AttachmentsComponent_button_9_Template, 9, 3, "button", 3);
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "button", 7);
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "span", 8);
        core["Qc" /* ɵɵtext */](24);
        core["vc" /* ɵɵpipe */](25, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ec" /* ɵɵelement */](27, "i", 9);
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["jc" /* ɵɵelementStart */](32, "content");
        core["Qc" /* ɵɵtext */](33, " ");
        core["Oc" /* ɵɵtemplate */](34, AttachmentsComponent_div_34_Template, 7, 1, "div", 10);
        core["Qc" /* ɵɵtext */](35, " ");
        core["jc" /* ɵɵelementStart */](36, "div", 11);
        core["Qc" /* ɵɵtext */](37, " ");
        core["jc" /* ɵɵelementStart */](38, "div", 12);
        core["Qc" /* ɵɵtext */](39);
        core["vc" /* ɵɵpipe */](40, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](41, " ");
        core["jc" /* ɵɵelementStart */](42, "div", 13);
        core["Qc" /* ɵɵtext */](43, " ");
        core["jc" /* ɵɵelementStart */](44, "div", 14);
        core["Qc" /* ɵɵtext */](45, " ");
        core["jc" /* ɵɵelementStart */](46, "label", 15);
        core["Qc" /* ɵɵtext */](47);
        core["vc" /* ɵɵpipe */](48, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](49, " ");
        core["ec" /* ɵɵelement */](50, "input", 16);
        core["Qc" /* ɵɵtext */](51, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](52, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](53, " ");
        core["jc" /* ɵɵelementStart */](54, "div", 17);
        core["Qc" /* ɵɵtext */](55);
        core["vc" /* ɵɵpipe */](56, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](57, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](58, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](59, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](60, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](7);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.openedAttachmentsInPopup);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.openedAttachmentsInPopup);
        core["Sb" /* ɵɵadvance */](6);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 12, "attachments"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](25, 14, "save"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](7);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher && ctx.cipher.hasAttachments);
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](40, 16, "newAttachment"), " ");
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](48, 18, "file"));
        core["Sb" /* ɵɵadvance */](8);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](56, 20, "maxFileSize"), " ");
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, common["l" /* NgIf */], BlurClickDirective, common["k" /* NgForOf */], StopClickDirective, A11yTitleDirective], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_attachments_component_AttachmentsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-attachments',
                templateUrl: 'attachments.component.html',
            }]
    }], function () { return [{ type: CipherService }, { type: I18nService }, { type: CryptoService }, { type: UserService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: ApiService }, { type: common["h" /* Location */] }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/search.service.ts
class SearchService {
    constructor() {
        this.indexedEntityId = null;
    }
}

// CONCATENATED MODULE: ./jslib/angular/src/components/ciphers.component.ts
var ciphers_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




class ciphers_component_CiphersComponent {
    constructor(searchService) {
        this.searchService = searchService;
        this.activeCipherId = null;
        this.onCipherClicked = new core["t" /* EventEmitter */]();
        this.onCipherRightClicked = new core["t" /* EventEmitter */]();
        this.onAddCipher = new core["t" /* EventEmitter */]();
        this.onAddCipherOptions = new core["t" /* EventEmitter */]();
        this.loaded = false;
        this.ciphers = [];
        this.searchPlaceholder = null;
        this.filter = null;
        this.deleted = false;
        this.searchPending = false;
        this.searchTimeout = null;
        this.deletedFilter = c => c.isDeleted === this.deleted;
    }
    load(filter = null, deleted = false) {
        return ciphers_component_awaiter(this, void 0, void 0, function* () {
            this.deleted = deleted || false;
            yield this.applyFilter(filter);
            this.loaded = true;
        });
    }
    reload(filter = null, deleted = false) {
        return ciphers_component_awaiter(this, void 0, void 0, function* () {
            this.loaded = false;
            this.ciphers = [];
            yield this.load(filter, deleted);
        });
    }
    refresh() {
        return ciphers_component_awaiter(this, void 0, void 0, function* () {
            yield this.reload(this.filter, this.deleted);
        });
    }
    applyFilter(filter = null) {
        return ciphers_component_awaiter(this, void 0, void 0, function* () {
            this.filter = filter;
            yield this.search(null);
        });
    }
    search(timeout = null, indexedCiphers) {
        return ciphers_component_awaiter(this, void 0, void 0, function* () {
            this.searchPending = false;
            if (this.searchTimeout != null) {
                clearTimeout(this.searchTimeout);
            }
            if (timeout == null) {
                yield this.doSearch(indexedCiphers);
                return;
            }
            this.searchPending = true;
            this.searchTimeout = setTimeout(() => ciphers_component_awaiter(this, void 0, void 0, function* () {
                yield this.doSearch(indexedCiphers);
                this.searchPending = false;
            }), timeout);
        });
    }
    selectCipher(cipher) {
        this.onCipherClicked.emit(cipher);
    }
    rightClickCipher(cipher) {
        this.onCipherRightClicked.emit(cipher);
    }
    addCipher() {
        this.onAddCipher.emit();
    }
    addCipherOptions() {
        this.onAddCipherOptions.emit();
    }
    isSearching() {
        return !this.searchPending && this.searchService.isSearchable(this.searchText);
    }
    doSearch(indexedCiphers) {
        return ciphers_component_awaiter(this, void 0, void 0, function* () {
            this.ciphers = yield this.searchService.searchCiphers(this.searchText, [this.filter, this.deletedFilter], indexedCiphers);
        });
    }
}
ciphers_component_CiphersComponent.ɵfac = function CiphersComponent_Factory(t) { return new (t || ciphers_component_CiphersComponent)(core["dc" /* ɵɵdirectiveInject */](SearchService)); };
ciphers_component_CiphersComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: ciphers_component_CiphersComponent, inputs: { activeCipherId: "activeCipherId" }, outputs: { onCipherClicked: "onCipherClicked", onCipherRightClicked: "onCipherRightClicked", onAddCipher: "onAddCipher", onAddCipherOptions: "onAddCipherOptions" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](ciphers_component_CiphersComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: SearchService }]; }, { activeCipherId: [{
            type: core["D" /* Input */]
        }], onCipherClicked: [{
            type: core["O" /* Output */]
        }], onCipherRightClicked: [{
            type: core["O" /* Output */]
        }], onAddCipher: [{
            type: core["O" /* Output */]
        }], onAddCipherOptions: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/cipherListVirtualScroll.directive.ts



// Custom virtual scroll strategy for cdk-virtual-scroll
// Uses a sample list item to set the itemSize for FixedSizeVirtualScrollStrategy
// The use case is the same as FixedSizeVirtualScrollStrategy, but it avoids locking in pixel sizes in the template.
class cipherListVirtualScroll_directive_CipherListVirtualScrollStrategy extends scrolling["e" /* FixedSizeVirtualScrollStrategy */] {
    constructor(itemSize, minBufferPx, maxBufferPx, checkItemSizeCallback) {
        super(itemSize, minBufferPx, maxBufferPx);
        this.checkItemSizeCallback = checkItemSizeCallback;
    }
    onContentRendered() {
        if (this.timeout != null) {
            clearTimeout(this.timeout);
        }
        this.timeout = setTimeout(this.checkItemSizeCallback, 500);
    }
}
function _cipherListVirtualScrollStrategyFactory(cipherListDir) {
    return cipherListDir._scrollStrategy;
}
class cipherListVirtualScroll_directive_CipherListVirtualScroll extends scrolling["a" /* CdkFixedSizeVirtualScroll */] {
    constructor() {
        super();
        this.checkAndUpdateItemSize = () => {
            const sampleItem = document.querySelector('cdk-virtual-scroll-viewport .virtual-scroll-item');
            const newItemSize = sampleItem === null || sampleItem === void 0 ? void 0 : sampleItem.offsetHeight;
            if (newItemSize != null && newItemSize !== this.itemSize) {
                this.itemSize = newItemSize;
                this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);
            }
        };
        this._scrollStrategy = new cipherListVirtualScroll_directive_CipherListVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx, this.checkAndUpdateItemSize);
    }
}
cipherListVirtualScroll_directive_CipherListVirtualScroll.ɵfac = function CipherListVirtualScroll_Factory(t) { return new (t || cipherListVirtualScroll_directive_CipherListVirtualScroll)(); };
cipherListVirtualScroll_directive_CipherListVirtualScroll.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: cipherListVirtualScroll_directive_CipherListVirtualScroll, selectors: [["cdk-virtual-scroll-viewport", "itemSize", ""]], features: [core["Rb" /* ɵɵProvidersFeature */]([{
                provide: scrolling["h" /* VIRTUAL_SCROLL_STRATEGY */],
                useFactory: _cipherListVirtualScrollStrategyFactory,
                deps: [Object(core["kb" /* forwardRef */])(() => cipherListVirtualScroll_directive_CipherListVirtualScroll)],
            }]), core["Pb" /* ɵɵInheritDefinitionFeature */]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](cipherListVirtualScroll_directive_CipherListVirtualScroll, [{
        type: core["q" /* Directive */],
        args: [{
                selector: 'cdk-virtual-scroll-viewport[itemSize]',
                providers: [{
                        provide: scrolling["h" /* VIRTUAL_SCROLL_STRATEGY */],
                        useFactory: _cipherListVirtualScrollStrategyFactory,
                        deps: [Object(core["kb" /* forwardRef */])(() => cipherListVirtualScroll_directive_CipherListVirtualScroll)],
                    }],
            }]
    }], function () { return []; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/fallback-src.directive.ts


class FallbackSrcDirective {
    constructor(el) {
        this.el = el;
    }
    onError() {
        this.el.nativeElement.src = this.appFallbackSrc;
    }
}
FallbackSrcDirective.ɵfac = function FallbackSrcDirective_Factory(t) { return new (t || FallbackSrcDirective)(core["dc" /* ɵɵdirectiveInject */](core["r" /* ElementRef */])); };
FallbackSrcDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: FallbackSrcDirective, selectors: [["", "appFallbackSrc", ""]], hostBindings: function FallbackSrcDirective_HostBindings(rf, ctx) { if (rf & 1) {
        core["qc" /* ɵɵlistener */]("error", function FallbackSrcDirective_error_HostBindingHandler() { return ctx.onError(); });
    } }, inputs: { appFallbackSrc: "appFallbackSrc" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](FallbackSrcDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appFallbackSrc]',
            }]
    }], function () { return [{ type: core["r" /* ElementRef */] }]; }, { appFallbackSrc: [{
            type: core["D" /* Input */],
            args: ['appFallbackSrc']
        }], onError: [{
            type: core["w" /* HostListener */],
            args: ['error']
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/icon.component.ts
var icon_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};












function IconComponent_img_2_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "img", 3);
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Cc" /* ɵɵpropertyInterpolate */]("appFallbackSrc", ctx_r0.fallbackImage);
    core["Bc" /* ɵɵproperty */]("src", ctx_r0.image, core["Lc" /* ɵɵsanitizeUrl */]);
} }
function IconComponent_i_4_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i");
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Ub" /* ɵɵclassMapInterpolate1 */]("fa fa-fw fa-lg ", ctx_r1.icon, "");
} }
const IconMap = {
    'fa-globe': String.fromCharCode(0xf0ac),
    'fa-sticky-note-o': String.fromCharCode(0xf24a),
    'fa-id-card-o': String.fromCharCode(0xf2c3),
    'fa-credit-card': String.fromCharCode(0xf09d),
    'fa-android': String.fromCharCode(0xf17b),
    'fa-apple': String.fromCharCode(0xf179),
};
class icon_component_IconComponent {
    constructor(environmentService, stateService) {
        this.stateService = stateService;
        this.iconsUrl = environmentService.getIconsUrl();
    }
    ngOnChanges() {
        return icon_component_awaiter(this, void 0, void 0, function* () {
            // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,
            // to avoid this we reset all state variables.
            this.image = null;
            this.fallbackImage = null;
            this.imageEnabled = !(yield this.stateService.get(constants_service["a" /* ConstantsService */].disableFaviconKey));
            this.load();
        });
    }
    get iconCode() {
        return IconMap[this.icon];
    }
    load() {
        switch (this.cipher.type) {
            case cipherType["a" /* CipherType */].Login:
                this.icon = 'fa-globe';
                this.setLoginIcon();
                break;
            case cipherType["a" /* CipherType */].SecureNote:
                this.icon = 'fa-sticky-note-o';
                break;
            case cipherType["a" /* CipherType */].Card:
                this.icon = 'fa-credit-card';
                break;
            case cipherType["a" /* CipherType */].Identity:
                this.icon = 'fa-id-card-o';
                break;
            default:
                break;
        }
    }
    setLoginIcon() {
        if (this.cipher.login.uri) {
            let hostnameUri = this.cipher.login.uri;
            let isWebsite = false;
            if (hostnameUri.indexOf('androidapp://') === 0) {
                this.icon = 'fa-android';
                this.image = null;
            }
            else if (hostnameUri.indexOf('iosapp://') === 0) {
                this.icon = 'fa-apple';
                this.image = null;
            }
            else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {
                hostnameUri = 'http://' + hostnameUri;
                isWebsite = true;
            }
            else if (this.imageEnabled) {
                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;
            }
            if (this.imageEnabled && isWebsite) {
                try {
                    this.image = this.iconsUrl + '/' + utils["a" /* Utils */].getHostname(hostnameUri) + '/icon.png';
                    this.fallbackImage = 'images/fa-globe.png';
                }
                catch (e) {
                    // Ignore error since the fallback icon will be shown if image is null.
                }
            }
        }
        else {
            this.image = null;
        }
    }
}
icon_component_IconComponent.ɵfac = function IconComponent_Factory(t) { return new (t || icon_component_IconComponent)(core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](StateService)); };
icon_component_IconComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: icon_component_IconComponent, selectors: [["app-vault-icon"]], inputs: { cipher: "cipher" }, features: [core["Qb" /* ɵɵNgOnChangesFeature */]], decls: 7, vars: 2, consts: [["aria-hidden", "true", 1, "icon"], ["alt", "", 3, "src", "appFallbackSrc", 4, "ngIf"], [3, "class", 4, "ngIf"], ["alt", "", 3, "src", "appFallbackSrc"]], template: function IconComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "div", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["Oc" /* ɵɵtemplate */](2, IconComponent_img_2_Template, 1, 2, "img", 1);
        core["Qc" /* ɵɵtext */](3, " ");
        core["Oc" /* ɵɵtemplate */](4, IconComponent_i_4_Template, 1, 3, "i", 2);
        core["Qc" /* ɵɵtext */](5, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](6, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.imageEnabled && ctx.image);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.imageEnabled || !ctx.image);
    } }, directives: [common["l" /* NgIf */], FallbackSrcDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](icon_component_IconComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-icon',
                templateUrl: 'icon.component.html',
            }]
    }], function () { return [{ type: EnvironmentService }, { type: StateService }]; }, { cipher: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/directives/stop-prop.directive.ts


class StopPropDirective {
    onClick($event) {
        $event.stopPropagation();
    }
}
StopPropDirective.ɵfac = function StopPropDirective_Factory(t) { return new (t || StopPropDirective)(); };
StopPropDirective.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: StopPropDirective, selectors: [["", "appStopProp", ""]], hostBindings: function StopPropDirective_HostBindings(rf, ctx) { if (rf & 1) {
        core["qc" /* ɵɵlistener */]("click", function StopPropDirective_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](StopPropDirective, [{
        type: core["q" /* Directive */],
        args: [{
                selector: '[appStopProp]',
            }]
    }], null, { onClick: [{
            type: core["w" /* HostListener */],
            args: ['click', ['$event']]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/components/action-buttons.component.ts
var action_buttons_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

























function ActionButtonsComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    const _r5 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "span", 2);
    core["qc" /* ɵɵlistener */]("click", function ActionButtonsComponent_span_0_Template_span_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r5); const ctx_r4 = core["uc" /* ɵɵnextContext */](); return ctx_r4.view(); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 3);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 1, "view"));
} }
const action_buttons_component_c0 = function (a0) { return { disabled: a0 }; };
function ActionButtonsComponent_ng_container_2_span_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "span", 5);
    core["qc" /* ɵɵlistener */]("click", function ActionButtonsComponent_ng_container_2_span_2_Template_span_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r7 = core["uc" /* ɵɵnextContext */](2); return ctx_r7.launchCipher(); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 9);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r6 = core["uc" /* ɵɵnextContext */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 2, "launch"));
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](4, action_buttons_component_c0, !ctx_r6.cipher.login.canLaunch));
} }
function ActionButtonsComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r10 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, ActionButtonsComponent_ng_container_2_span_2_Template, 5, 6, "span", 4);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "span", 5);
    core["qc" /* ɵɵlistener */]("click", function ActionButtonsComponent_ng_container_2_Template_span_click_4_listener() { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r9 = core["uc" /* ɵɵnextContext */](); return ctx_r9.copy(ctx_r9.cipher, ctx_r9.cipher.login.username, "username", "Username"); });
    core["vc" /* ɵɵpipe */](5, "i18n");
    core["Qc" /* ɵɵtext */](6, " ");
    core["ec" /* ɵɵelement */](7, "i", 6);
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "span", 5);
    core["qc" /* ɵɵlistener */]("click", function ActionButtonsComponent_ng_container_2_Template_span_click_10_listener() { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r11 = core["uc" /* ɵɵnextContext */](); return ctx_r11.copy(ctx_r11.cipher, ctx_r11.cipher.login.password, "password", "Password"); });
    core["vc" /* ɵɵpipe */](11, "i18n");
    core["Qc" /* ɵɵtext */](12, " ");
    core["ec" /* ɵɵelement */](13, "i", 7);
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "span", 5);
    core["qc" /* ɵɵlistener */]("click", function ActionButtonsComponent_ng_container_2_Template_span_click_16_listener() { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r12 = core["uc" /* ɵɵnextContext */](); return ctx_r12.copy(ctx_r12.cipher, ctx_r12.cipher.login.totp, "verificationCodeTotp", "TOTP"); });
    core["vc" /* ɵɵpipe */](17, "i18n");
    core["Qc" /* ɵɵtext */](18, " ");
    core["ec" /* ɵɵelement */](19, "i", 8);
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.showView);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](5, 7, "copyUsername"));
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](13, action_buttons_component_c0, !ctx_r1.cipher.login.username));
    core["Sb" /* ɵɵadvance */](6);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](11, 9, "copyPassword"));
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](15, action_buttons_component_c0, !ctx_r1.cipher.login.password || !ctx_r1.cipher.viewPassword));
    core["Sb" /* ɵɵadvance */](6);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](17, 11, "copyVerificationCode"));
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](17, action_buttons_component_c0, !ctx_r1.displayTotpCopyButton(ctx_r1.cipher)));
} }
function ActionButtonsComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r14 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 5);
    core["qc" /* ɵɵlistener */]("click", function ActionButtonsComponent_ng_container_4_Template_span_click_2_listener() { core["Jc" /* ɵɵrestoreView */](_r14); const ctx_r13 = core["uc" /* ɵɵnextContext */](); return ctx_r13.copy(ctx_r13.cipher, ctx_r13.cipher.card.number, "number", "Card Number"); });
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["ec" /* ɵɵelement */](5, "i", 10);
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "span", 5);
    core["qc" /* ɵɵlistener */]("click", function ActionButtonsComponent_ng_container_4_Template_span_click_8_listener() { core["Jc" /* ɵɵrestoreView */](_r14); const ctx_r15 = core["uc" /* ɵɵnextContext */](); return ctx_r15.copy(ctx_r15.cipher, ctx_r15.cipher.card.code, "securityCode", "Security Code"); });
    core["vc" /* ɵɵpipe */](9, "i18n");
    core["Qc" /* ɵɵtext */](10, " ");
    core["ec" /* ɵɵelement */](11, "i", 7);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 4, "copyNumber"));
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](8, action_buttons_component_c0, !ctx_r2.cipher.card.number));
    core["Sb" /* ɵɵadvance */](6);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](9, 6, "copySecurityCode"));
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](10, action_buttons_component_c0, !ctx_r2.cipher.card.code));
} }
function ActionButtonsComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    const _r17 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 5);
    core["qc" /* ɵɵlistener */]("click", function ActionButtonsComponent_ng_container_6_Template_span_click_2_listener() { core["Jc" /* ɵɵrestoreView */](_r17); const ctx_r16 = core["uc" /* ɵɵnextContext */](); return ctx_r16.copy(ctx_r16.cipher, ctx_r16.cipher.notes, "note", "Note"); });
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["ec" /* ɵɵelement */](5, "i", 11);
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 2, "copyNote"));
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](4, action_buttons_component_c0, !ctx_r3.cipher.notes));
} }
class action_buttons_component_ActionButtonsComponent {
    constructor(toasterService, i18nService, platformUtilsService, eventService, totpService, userService, passwordRepromptService) {
        this.toasterService = toasterService;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.eventService = eventService;
        this.totpService = totpService;
        this.userService = userService;
        this.passwordRepromptService = passwordRepromptService;
        this.onView = new core["t" /* EventEmitter */]();
        this.launchEvent = new core["t" /* EventEmitter */]();
        this.showView = false;
        this.cipherType = cipherType["a" /* CipherType */];
        this.userHasPremiumAccess = false;
    }
    ngOnInit() {
        return action_buttons_component_awaiter(this, void 0, void 0, function* () {
            this.userHasPremiumAccess = yield this.userService.canAccessPremium();
        });
    }
    launchCipher() {
        this.launchEvent.emit(this.cipher);
    }
    copy(cipher, value, typeI18nKey, aType) {
        return action_buttons_component_awaiter(this, void 0, void 0, function* () {
            if (this.cipher.reprompt !== cipherRepromptType["a" /* CipherRepromptType */].None && this.passwordRepromptService.protectedFields().includes(aType) &&
                !(yield this.passwordRepromptService.showPasswordPrompt())) {
                return;
            }
            if (value == null || aType === 'TOTP' && !this.displayTotpCopyButton(cipher)) {
                return;
            }
            else if (value === cipher.login.totp) {
                value = yield this.totpService.getCode(value);
            }
            if (!cipher.viewPassword) {
                return;
            }
            this.platformUtilsService.copyToClipboard(value, { window: window });
            this.toasterService.popAsync('info', null, this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));
            if (typeI18nKey === 'password' || typeI18nKey === 'verificationCodeTotp') {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledHiddenFieldVisible, cipher.id);
            }
            else if (typeI18nKey === 'securityCode') {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientCopiedCardCode, cipher.id);
            }
        });
    }
    displayTotpCopyButton(cipher) {
        var _a, _b;
        return ((_b = (_a = cipher === null || cipher === void 0 ? void 0 : cipher.login) === null || _a === void 0 ? void 0 : _a.hasTotp) !== null && _b !== void 0 ? _b : false) &&
            (cipher.organizationUseTotp || this.userHasPremiumAccess);
    }
    view() {
        this.onView.emit(this.cipher);
    }
}
action_buttons_component_ActionButtonsComponent.ɵfac = function ActionButtonsComponent_Factory(t) { return new (t || action_buttons_component_ActionButtonsComponent)(core["dc" /* ɵɵdirectiveInject */](angular2_toaster["e" /* ToasterService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](EventService), core["dc" /* ɵɵdirectiveInject */](TotpService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](passwordReprompt_service_PasswordRepromptService)); };
action_buttons_component_ActionButtonsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: action_buttons_component_ActionButtonsComponent, selectors: [["app-action-buttons"]], inputs: { cipher: "cipher", showView: "showView" }, outputs: { onView: "onView", launchEvent: "launchEvent" }, decls: 8, vars: 4, consts: [["class", "row-btn", "appStopClick", "", "appStopProp", "", 3, "appA11yTitle", "click", 4, "ngIf"], [4, "ngIf"], ["appStopClick", "", "appStopProp", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-list-alt"], ["class", "row-btn", "appStopClick", "", "appStopProp", "", 3, "appA11yTitle", "ngClass", "click", 4, "ngIf"], ["appStopClick", "", "appStopProp", "", 1, "row-btn", 3, "appA11yTitle", "ngClass", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-user"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-key"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-clock-o"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-share-square-o"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-hashtag"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-clone"]], template: function ActionButtonsComponent_Template(rf, ctx) { if (rf & 1) {
        core["Oc" /* ɵɵtemplate */](0, ActionButtonsComponent_span_0_Template, 5, 3, "span", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["Oc" /* ɵɵtemplate */](2, ActionButtonsComponent_ng_container_2_Template, 22, 19, "ng-container", 1);
        core["Qc" /* ɵɵtext */](3, " ");
        core["Oc" /* ɵɵtemplate */](4, ActionButtonsComponent_ng_container_4_Template, 14, 12, "ng-container", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["Oc" /* ɵɵtemplate */](6, ActionButtonsComponent_ng_container_6_Template, 8, 6, "ng-container", 1);
        core["Qc" /* ɵɵtext */](7, " ");
    } if (rf & 2) {
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showView);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher.type === ctx.cipherType.Login);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher.type === ctx.cipherType.Card);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher.type === ctx.cipherType.SecureNote);
    } }, directives: [common["l" /* NgIf */], StopClickDirective, StopPropDirective, A11yTitleDirective, common["j" /* NgClass */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](action_buttons_component_ActionButtonsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-action-buttons',
                templateUrl: 'action-buttons.component.html',
            }]
    }], function () { return [{ type: angular2_toaster["e" /* ToasterService */] }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: EventService }, { type: TotpService }, { type: UserService }, { type: passwordReprompt_service_PasswordRepromptService }]; }, { onView: [{
            type: core["O" /* Output */]
        }], launchEvent: [{
            type: core["O" /* Output */]
        }], cipher: [{
            type: core["D" /* Input */]
        }], showView: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/components/cipher-row.component.ts








function CipherRowComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 8);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 9);
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](3, 2, "shared"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 4, "shared"));
} }
function CipherRowComponent_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 10);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 9);
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](3, 2, "attachments"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 4, "attachments"));
} }
class cipher_row_component_CipherRowComponent {
    constructor() {
        this.onSelected = new core["t" /* EventEmitter */]();
        this.launchEvent = new core["t" /* EventEmitter */]();
        this.onView = new core["t" /* EventEmitter */]();
        this.showView = false;
    }
    selectCipher(c) {
        this.onSelected.emit(c);
    }
    launchCipher(c) {
        this.launchEvent.emit(c);
    }
    viewCipher(c) {
        this.onView.emit(c);
    }
}
cipher_row_component_CipherRowComponent.ɵfac = function CipherRowComponent_Factory(t) { return new (t || cipher_row_component_CipherRowComponent)(); };
cipher_row_component_CipherRowComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: cipher_row_component_CipherRowComponent, selectors: [["app-cipher-row"]], inputs: { cipher: "cipher", showView: "showView", title: "title" }, outputs: { onSelected: "onSelected", launchEvent: "launchEvent", onView: "onView" }, decls: 24, vars: 9, consts: [["type", "button", "appStopClick", "", 1, "box-content-row", "box-content-row-flex", "virtual-scroll-item", 3, "title", "click", "dblclick"], [1, "row-main"], [3, "cipher"], [1, "row-main-content"], [1, "text"], [4, "ngIf"], [1, "detail"], [1, "action-buttons", 3, "cipher", "showView", "onView", "launchEvent"], ["aria-hidden", "true", 1, "fa", "fa-cube", "text-muted", 3, "title"], [1, "sr-only"], ["aria-hidden", "true", 1, "fa", "fa-paperclip", "text-muted", 3, "title"]], template: function CipherRowComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "button", 0);
        core["qc" /* ɵɵlistener */]("click", function CipherRowComponent_Template_button_click_0_listener() { return ctx.selectCipher(ctx.cipher); })("dblclick", function CipherRowComponent_Template_button_dblclick_0_listener() { return ctx.launchCipher(ctx.cipher); });
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 1);
        core["Qc" /* ɵɵtext */](3, " ");
        core["ec" /* ɵɵelement */](4, "app-vault-icon", 2);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "div", 3);
        core["Qc" /* ɵɵtext */](7, " ");
        core["jc" /* ɵɵelementStart */](8, "span", 4);
        core["Qc" /* ɵɵtext */](9);
        core["Oc" /* ɵɵtemplate */](10, CipherRowComponent_ng_container_10_Template, 9, 6, "ng-container", 5);
        core["Qc" /* ɵɵtext */](11, " ");
        core["Oc" /* ɵɵtemplate */](12, CipherRowComponent_ng_container_12_Template, 9, 6, "ng-container", 5);
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "span", 6);
        core["Qc" /* ɵɵtext */](16);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](19, " ");
        core["jc" /* ɵɵelementStart */](20, "app-action-buttons", 7);
        core["qc" /* ɵɵlistener */]("onView", function CipherRowComponent_Template_app_action_buttons_onView_20_listener() { return ctx.viewCipher(ctx.cipher); })("launchEvent", function CipherRowComponent_Template_app_action_buttons_launchEvent_20_listener() { return ctx.launchCipher(ctx.cipher); });
        core["Qc" /* ɵɵtext */](21, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](22, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](23, " ");
    } if (rf & 2) {
        core["Ec" /* ɵɵpropertyInterpolate2 */]("title", "", ctx.title, " - ", ctx.cipher.name, "");
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("cipher", ctx.cipher);
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx.cipher.name, " ");
        core["Sb" /* ɵɵadvance */](1);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher.organizationId);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher.hasAttachments);
        core["Sb" /* ɵɵadvance */](4);
        core["Rc" /* ɵɵtextInterpolate */](ctx.cipher.subTitle);
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("cipher", ctx.cipher)("showView", ctx.showView);
    } }, directives: [StopClickDirective, icon_component_IconComponent, common["l" /* NgIf */], action_buttons_component_ActionButtonsComponent], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](cipher_row_component_CipherRowComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-cipher-row',
                templateUrl: 'cipher-row.component.html',
            }]
    }], null, { onSelected: [{
            type: core["O" /* Output */]
        }], launchEvent: [{
            type: core["O" /* Output */]
        }], onView: [{
            type: core["O" /* Output */]
        }], cipher: [{
            type: core["D" /* Input */]
        }], showView: [{
            type: core["D" /* Input */]
        }], title: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/vault/ciphers.component.ts
var vault_ciphers_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





































const ciphers_component_c0 = function (a0, a1) { return { "fa-folder-open": a0, "fa-folder-open-o": a1 }; };
function CiphersComponent_ng_container_35_div_2_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r7 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 17);
    core["qc" /* ɵɵlistener */]("click", function CiphersComponent_ng_container_35_div_2_button_8_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r7); const f_r5 = ctx.$implicit; const ctx_r6 = core["uc" /* ɵɵnextContext */](3); return ctx_r6.selectFolder(f_r5.node); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 18);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 19);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 20);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span", 21);
    core["Qc" /* ɵɵtext */](10);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "span");
    core["ec" /* ɵɵelement */](14, "i", 22);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const f_r5 = ctx.$implicit;
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](2, ciphers_component_c0, f_r5.node.id, !f_r5.node.id));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](f_r5.node.name);
} }
function CiphersComponent_ng_container_35_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 13);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 14);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 15);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, CiphersComponent_ng_container_35_div_2_button_8_Template, 16, 5, "button", 16);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 2, "folders"), " ");
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r2.nestedFolders);
} }
function CiphersComponent_ng_container_35_div_4_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r11 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 17);
    core["qc" /* ɵɵlistener */]("click", function CiphersComponent_ng_container_35_div_4_button_8_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r11); const c_r9 = ctx.$implicit; const ctx_r10 = core["uc" /* ɵɵnextContext */](3); return ctx_r10.selectCollection(c_r9.node); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 18);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 19);
    core["ec" /* ɵɵelement */](5, "i", 23);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["jc" /* ɵɵelementStart */](7, "span", 21);
    core["Qc" /* ɵɵtext */](8);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "span");
    core["ec" /* ɵɵelement */](12, "i", 22);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const c_r9 = ctx.$implicit;
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](c_r9.node.name);
} }
function CiphersComponent_ng_container_35_div_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 13);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 14);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 15);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, CiphersComponent_ng_container_35_div_4_button_8_Template, 14, 1, "button", 16);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 2, "collections"), " ");
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r3.nestedCollections);
} }
function CiphersComponent_ng_container_35_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, CiphersComponent_ng_container_35_div_2_Template, 11, 4, "div", 12);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, CiphersComponent_ng_container_35_div_4_Template, 11, 4, "div", 12);
    core["Qc" /* ɵɵtext */](5, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r0.nestedFolders && ctx_r0.nestedFolders.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r0.nestedCollections && ctx_r0.nestedCollections.length);
} }
function CiphersComponent_ng_container_37_div_2_i_2_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 28);
} }
function CiphersComponent_ng_container_37_div_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r17 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "button", 29);
    core["qc" /* ɵɵlistener */]("click", function CiphersComponent_ng_container_37_div_2_ng_container_4_Template_button_click_6_listener() { core["Jc" /* ɵɵrestoreView */](_r17); const ctx_r16 = core["uc" /* ɵɵnextContext */](3); return ctx_r16.addCipher(); });
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "noItemsInList"));
    core["Sb" /* ɵɵadvance */](4);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](8, 4, "addItem"), " ");
} }
function CiphersComponent_ng_container_37_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 26);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, CiphersComponent_ng_container_37_div_2_i_2_Template, 1, 0, "i", 27);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, CiphersComponent_ng_container_37_div_2_ng_container_4_Template, 10, 6, "ng-container", 11);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r12 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r12.loaded);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r12.loaded);
} }
function CiphersComponent_ng_container_37_cdk_virtual_scroll_viewport_4_app_cipher_row_13_Template(rf, ctx) { if (rf & 1) {
    const _r22 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "app-cipher-row", 36);
    core["qc" /* ɵɵlistener */]("onSelected", function CiphersComponent_ng_container_37_cdk_virtual_scroll_viewport_4_app_cipher_row_13_Template_app_cipher_row_onSelected_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r22); const ctx_r21 = core["uc" /* ɵɵnextContext */](3); return ctx_r21.selectCipher($event); })("launchEvent", function CiphersComponent_ng_container_37_cdk_virtual_scroll_viewport_4_app_cipher_row_13_Template_app_cipher_row_launchEvent_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r22); const ctx_r23 = core["uc" /* ɵɵnextContext */](3); return ctx_r23.launchCipher($event); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const c_r20 = ctx.$implicit;
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "viewItem"));
    core["Bc" /* ɵɵproperty */]("cipher", c_r20);
} }
function CiphersComponent_ng_container_37_cdk_virtual_scroll_viewport_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "cdk-virtual-scroll-viewport", 30, 31);
    core["Qc" /* ɵɵtext */](2, " ");
    core["jc" /* ɵɵelementStart */](3, "div", 32);
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "div", 14);
    core["Qc" /* ɵɵtext */](6);
    core["jc" /* ɵɵelementStart */](7, "span", 33);
    core["Qc" /* ɵɵtext */](8);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "div", 34);
    core["Qc" /* ɵɵtext */](12, " ");
    core["Oc" /* ɵɵtemplate */](13, CiphersComponent_ng_container_37_cdk_virtual_scroll_viewport_4_app_cipher_row_13_Template, 2, 4, "app-cipher-row", 35);
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r13 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](6);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r13.groupingTitle, " ");
    core["Sb" /* ɵɵadvance */](2);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r13.isSearching() ? ctx_r13.ciphers.length : ctx_r13.ciphers.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("cdkVirtualForOf", ctx_r13.ciphers);
} }
function CiphersComponent_ng_container_37_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, CiphersComponent_ng_container_37_div_2_Template, 6, 2, "div", 24);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, CiphersComponent_ng_container_37_cdk_virtual_scroll_viewport_4_Template, 17, 3, "cdk-virtual-scroll-viewport", 25);
    core["Qc" /* ɵɵtext */](5, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.ciphers.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.ciphers.length);
} }
const ciphers_component_c1 = function (a0) { return { "stacked-boxes": a0 }; };
const ComponentId = 'CiphersComponent';
class vault_ciphers_component_CiphersComponent extends ciphers_component_CiphersComponent {
    constructor(searchService, route, router, location, ngZone, broadcasterService, changeDetectorRef, stateService, popupUtils, i18nService, folderService, collectionService, platformUtilsService, cipherService) {
        super(searchService);
        this.route = route;
        this.router = router;
        this.location = location;
        this.ngZone = ngZone;
        this.broadcasterService = broadcasterService;
        this.changeDetectorRef = changeDetectorRef;
        this.stateService = stateService;
        this.popupUtils = popupUtils;
        this.i18nService = i18nService;
        this.folderService = folderService;
        this.collectionService = collectionService;
        this.platformUtilsService = platformUtilsService;
        this.cipherService = cipherService;
        this.folderId = null;
        this.collectionId = null;
        this.type = null;
        this.searchTypeSearch = false;
        this.preventSelected = false;
        this.applySavedState = true;
        this.scrollingContainer = 'cdk-virtual-scroll-viewport';
        this.applySavedState = window.previousPopupUrl != null &&
            !window.previousPopupUrl.startsWith('/ciphers');
    }
    ngOnInit() {
        return vault_ciphers_component_awaiter(this, void 0, void 0, function* () {
            this.searchTypeSearch = !this.platformUtilsService.isSafari();
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => vault_ciphers_component_awaiter(this, void 0, void 0, function* () {
                if (this.applySavedState) {
                    this.state = (yield this.stateService.get(ComponentId)) || {};
                    if (this.state.searchText) {
                        this.searchText = this.state.searchText;
                    }
                }
                if (params.deleted) {
                    this.groupingTitle = this.i18nService.t('trash');
                    this.searchPlaceholder = this.i18nService.t('searchTrash');
                    yield this.load(null, true);
                }
                else if (params.type) {
                    this.searchPlaceholder = this.i18nService.t('searchType');
                    this.type = parseInt(params.type, null);
                    switch (this.type) {
                        case cipherType["a" /* CipherType */].Login:
                            this.groupingTitle = this.i18nService.t('logins');
                            break;
                        case cipherType["a" /* CipherType */].Card:
                            this.groupingTitle = this.i18nService.t('cards');
                            break;
                        case cipherType["a" /* CipherType */].Identity:
                            this.groupingTitle = this.i18nService.t('identities');
                            break;
                        case cipherType["a" /* CipherType */].SecureNote:
                            this.groupingTitle = this.i18nService.t('secureNotes');
                            break;
                        default:
                            break;
                    }
                    yield this.load(c => c.type === this.type);
                }
                else if (params.folderId) {
                    this.folderId = params.folderId === 'none' ? null : params.folderId;
                    this.searchPlaceholder = this.i18nService.t('searchFolder');
                    if (this.folderId != null) {
                        const folderNode = yield this.folderService.getNested(this.folderId);
                        if (folderNode != null && folderNode.node != null) {
                            this.groupingTitle = folderNode.node.name;
                            this.nestedFolders = folderNode.children != null && folderNode.children.length > 0 ?
                                folderNode.children : null;
                        }
                    }
                    else {
                        this.groupingTitle = this.i18nService.t('noneFolder');
                    }
                    yield this.load(c => c.folderId === this.folderId);
                }
                else if (params.collectionId) {
                    this.collectionId = params.collectionId;
                    this.searchPlaceholder = this.i18nService.t('searchCollection');
                    const collectionNode = yield this.collectionService.getNested(this.collectionId);
                    if (collectionNode != null && collectionNode.node != null) {
                        this.groupingTitle = collectionNode.node.name;
                        this.nestedCollections = collectionNode.children != null && collectionNode.children.length > 0 ?
                            collectionNode.children : null;
                    }
                    yield this.load(c => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1);
                }
                else {
                    this.groupingTitle = this.i18nService.t('allItems');
                    yield this.load();
                }
                if (this.applySavedState && this.state != null) {
                    window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer), 0);
                }
                this.stateService.remove(ComponentId);
            }));
            this.broadcasterService.subscribe(ComponentId, (message) => {
                this.ngZone.run(() => vault_ciphers_component_awaiter(this, void 0, void 0, function* () {
                    switch (message.command) {
                        case 'syncCompleted':
                            if (message.successfully) {
                                window.setTimeout(() => {
                                    this.refresh();
                                }, 500);
                            }
                            break;
                        default:
                            break;
                    }
                    this.changeDetectorRef.detectChanges();
                }));
            });
        });
    }
    ngOnDestroy() {
        this.saveState();
        this.broadcasterService.unsubscribe(ComponentId);
    }
    selectCipher(cipher) {
        this.selectedTimeout = window.setTimeout(() => {
            if (!this.preventSelected) {
                super.selectCipher(cipher);
                this.router.navigate(['/view-cipher'], { queryParams: { cipherId: cipher.id } });
            }
            this.preventSelected = false;
        }, 200);
    }
    selectFolder(folder) {
        if (folder.id != null) {
            this.router.navigate(['/ciphers'], { queryParams: { folderId: folder.id } });
        }
    }
    selectCollection(collection) {
        this.router.navigate(['/ciphers'], { queryParams: { collectionId: collection.id } });
    }
    launchCipher(cipher) {
        return vault_ciphers_component_awaiter(this, void 0, void 0, function* () {
            if (cipher.type !== cipherType["a" /* CipherType */].Login || !cipher.login.canLaunch) {
                return;
            }
            if (this.selectedTimeout != null) {
                window.clearTimeout(this.selectedTimeout);
            }
            this.preventSelected = true;
            yield this.cipherService.updateLastLaunchedDate(cipher.id);
            browserApi["a" /* BrowserApi */].createNewTab(cipher.login.launchUri);
            if (this.popupUtils.inPopup(window)) {
                browserApi["a" /* BrowserApi */].closePopup(window);
            }
        });
    }
    addCipher() {
        if (this.deleted) {
            return false;
        }
        super.addCipher();
        this.router.navigate(['/add-cipher'], {
            queryParams: {
                folderId: this.folderId,
                type: this.type,
                collectionId: this.collectionId,
            },
        });
    }
    back() {
        window.routeDirection = 'b';
        this.location.back();
    }
    showGroupings() {
        return !this.isSearching() &&
            ((this.nestedFolders && this.nestedFolders.length) ||
                (this.nestedCollections && this.nestedCollections.length));
    }
    saveState() {
        return vault_ciphers_component_awaiter(this, void 0, void 0, function* () {
            this.state = {
                scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),
                searchText: this.searchText,
            };
            yield this.stateService.save(ComponentId, this.state);
        });
    }
}
vault_ciphers_component_CiphersComponent.ɵfac = function CiphersComponent_Factory(t) { return new (t || vault_ciphers_component_CiphersComponent)(core["dc" /* ɵɵdirectiveInject */](SearchService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */]), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](FolderService), core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](CipherService)); };
vault_ciphers_component_CiphersComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_ciphers_component_CiphersComponent, selectors: [["app-vault-ciphers"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 40, vars: 16, consts: [[1, "left"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "header-icon"], ["aria-hidden", "true", 1, "fa", "fa-chevron-left"], [1, "search"], ["id", "search", "autocomplete", "off", "appAutofocus", "", 3, "type", "placeholder", "ngModel", "ngModelChange", "input"], ["aria-hidden", "true", 1, "fa", "fa-search"], [1, "right"], ["type", "button", "appBlurClick", "", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-plus", "fa-lg", "fa-fw"], [3, "ngClass"], [4, "ngIf"], ["class", "box list", 4, "ngIf"], [1, "box", "list"], [1, "box-header"], [1, "box-content", "single-line"], ["type", "button", "class", "box-content-row", "appStopClick", "", "appBlurClick", "", 3, "click", 4, "ngFor", "ngForOf"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", 3, "click"], [1, "row-main"], [1, "icon"], ["aria-hidden", "true", 1, "fa", "fa-fw", "fa-lg", 3, "ngClass"], [1, "text"], ["aria-hidden", "true", 1, "fa", "fa-chevron-right", "fa-lg", "row-sub-icon"], ["aria-hidden", "true", 1, "fa", "fa-fw", "fa-lg", "fa-cube"], ["class", "no-items", 4, "ngIf"], ["itemSize", "46", "minBufferPx", "400", "maxBufferPx", "600", 4, "ngIf"], [1, "no-items"], ["class", "fa fa-spinner fa-spin fa-3x", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-spin", "fa-3x"], ["type", "button", 1, "btn", "block", "primary", "link", 3, "click"], ["itemSize", "46", "minBufferPx", "400", "maxBufferPx", "600"], ["virtualScrollViewport", ""], [1, "box", "list", "only-list"], [1, "flex-right"], [1, "box-content"], [3, "cipher", "title", "onSelected", "launchEvent", 4, "cdkVirtualFor", "cdkVirtualForOf"], [3, "cipher", "title", "onSelected", "launchEvent"]], template: function CiphersComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "button", 1);
        core["qc" /* ɵɵlistener */]("click", function CiphersComponent_Template_button_click_4_listener() { return ctx.back(); });
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "span", 2);
        core["ec" /* ɵɵelement */](7, "i", 3);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span");
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 4);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "input", 5);
        core["qc" /* ɵɵlistener */]("ngModelChange", function CiphersComponent_Template_input_ngModelChange_17_listener($event) { return ctx.searchText = $event; })("input", function CiphersComponent_Template_input_input_17_listener() { return ctx.search(200); });
        core["vc" /* ɵɵpipe */](18, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](19, " ");
        core["ec" /* ɵɵelement */](20, "i", 6);
        core["Qc" /* ɵɵtext */](21, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "div", 7);
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "button", 8);
        core["qc" /* ɵɵlistener */]("click", function CiphersComponent_Template_button_click_25_listener() { return ctx.addCipher(); });
        core["vc" /* ɵɵpipe */](26, "i18n");
        core["Qc" /* ɵɵtext */](27, " ");
        core["ec" /* ɵɵelement */](28, "i", 9);
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](32, " ");
        core["jc" /* ɵɵelementStart */](33, "content", 10);
        core["Qc" /* ɵɵtext */](34, " ");
        core["Oc" /* ɵɵtemplate */](35, CiphersComponent_ng_container_35_Template, 6, 2, "ng-container", 11);
        core["Qc" /* ɵɵtext */](36, " ");
        core["Oc" /* ɵɵtemplate */](37, CiphersComponent_ng_container_37_Template, 6, 2, "ng-container", 11);
        core["Qc" /* ɵɵtext */](38, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](39, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 8, "back"));
        core["Sb" /* ɵɵadvance */](7);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.searchTypeSearch ? "search" : "text");
        core["Cc" /* ɵɵpropertyInterpolate */]("placeholder", ctx.searchPlaceholder || core["wc" /* ɵɵpipeBind1 */](18, 10, "searchVault"));
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.searchText);
        core["Sb" /* ɵɵadvance */](8);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](26, 12, "addItem"));
        core["Sb" /* ɵɵadvance */](8);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](14, ciphers_component_c1, ctx.showGroupings()));
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showGroupings());
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.ciphers);
    } }, directives: [BlurClickDirective, fesm2015_forms["c" /* DefaultValueAccessor */], autofocus_directive_AutofocusDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], A11yTitleDirective, common["j" /* NgClass */], common["l" /* NgIf */], common["k" /* NgForOf */], StopClickDirective, scrolling["d" /* CdkVirtualScrollViewport */], scrolling["a" /* CdkFixedSizeVirtualScroll */], cipherListVirtualScroll_directive_CipherListVirtualScroll, scrolling["c" /* CdkVirtualForOf */], cipher_row_component_CipherRowComponent], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_ciphers_component_CiphersComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-ciphers',
                templateUrl: 'ciphers.component.html',
            }]
    }], function () { return [{ type: SearchService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: fesm2015_router["e" /* Router */] }, { type: common["h" /* Location */] }, { type: core["M" /* NgZone */] }, { type: services_broadcaster_service_BroadcasterService }, { type: core["j" /* ChangeDetectorRef */] }, { type: StateService }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: I18nService }, { type: FolderService }, { type: CollectionService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: CipherService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/collections.component.ts
var collections_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};












class collections_component_CollectionsComponent {
    constructor(collectionService, platformUtilsService, i18nService, cipherService, logService) {
        this.collectionService = collectionService;
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.cipherService = cipherService;
        this.logService = logService;
        this.allowSelectNone = false;
        this.onSavedCollections = new core["t" /* EventEmitter */]();
        this.collections = [];
    }
    ngOnInit() {
        return collections_component_awaiter(this, void 0, void 0, function* () {
            yield this.load();
        });
    }
    load() {
        return collections_component_awaiter(this, void 0, void 0, function* () {
            this.cipherDomain = yield this.loadCipher();
            this.collectionIds = this.loadCipherCollections();
            this.cipher = yield this.cipherDomain.decrypt();
            this.collections = yield this.loadCollections();
            this.collections.forEach(c => c.checked = false);
            if (this.collectionIds != null) {
                this.collections.forEach(c => {
                    c.checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;
                });
            }
        });
    }
    submit() {
        return collections_component_awaiter(this, void 0, void 0, function* () {
            const selectedCollectionIds = this.collections
                .filter(c => !!c.checked)
                .map(c => c.id);
            if (!this.allowSelectNone && selectedCollectionIds.length === 0) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('selectOneCollection'));
                return;
            }
            this.cipherDomain.collectionIds = selectedCollectionIds;
            try {
                this.formPromise = this.saveCollections();
                yield this.formPromise;
                this.onSavedCollections.emit();
                this.platformUtilsService.showToast('success', null, this.i18nService.t('editedItem'));
            }
            catch (e) {
                this.logService.error(e);
            }
        });
    }
    loadCipher() {
        return this.cipherService.get(this.cipherId);
    }
    loadCipherCollections() {
        return this.cipherDomain.collectionIds;
    }
    loadCollections() {
        return collections_component_awaiter(this, void 0, void 0, function* () {
            const allCollections = yield this.collectionService.getAllDecrypted();
            return allCollections.filter(c => !c.readOnly && c.organizationId === this.cipher.organizationId);
        });
    }
    saveCollections() {
        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);
    }
}
collections_component_CollectionsComponent.ɵfac = function CollectionsComponent_Factory(t) { return new (t || collections_component_CollectionsComponent)(core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
collections_component_CollectionsComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: collections_component_CollectionsComponent, inputs: { cipherId: "cipherId", allowSelectNone: "allowSelectNone" }, outputs: { onSavedCollections: "onSavedCollections" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](collections_component_CollectionsComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: CollectionService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: CipherService }, { type: LogService }]; }, { cipherId: [{
            type: core["D" /* Input */]
        }], allowSelectNone: [{
            type: core["D" /* Input */]
        }], onSavedCollections: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/vault/collections.component.ts
var vault_collections_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};























function CollectionsComponent_div_42_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 15);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 1, "noCollectionsInList"), " ");
} }
function CollectionsComponent_div_44_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 17);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 18);
    core["Qc" /* ɵɵtext */](3);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "input", 19);
    core["qc" /* ɵɵlistener */]("ngModelChange", function CollectionsComponent_div_44_div_2_Template_input_ngModelChange_5_listener($event) { const c_r4 = ctx.$implicit; return c_r4.checked = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const c_r4 = ctx.$implicit;
    const i_r5 = ctx.index;
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "collection_", i_r5, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](c_r4.name);
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "collection_", i_r5, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Collection[", i_r5, "].Checked");
    core["Bc" /* ɵɵproperty */]("ngModel", c_r4.checked);
} }
function CollectionsComponent_div_44_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, CollectionsComponent_div_44_div_2_Template, 7, 5, "div", 16);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r2.collections);
} }
class vault_collections_component_CollectionsComponent extends collections_component_CollectionsComponent {
    constructor(collectionService, platformUtilsService, i18nService, cipherService, route, location, logService) {
        super(collectionService, platformUtilsService, i18nService, cipherService, logService);
        this.route = route;
        this.location = location;
    }
    ngOnInit() {
        return vault_collections_component_awaiter(this, void 0, void 0, function* () {
            this.onSavedCollections.subscribe(() => {
                this.back();
            });
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => vault_collections_component_awaiter(this, void 0, void 0, function* () {
                this.cipherId = params.cipherId;
                yield this.load();
            }));
        });
    }
    back() {
        this.location.back();
    }
}
vault_collections_component_CollectionsComponent.ɵfac = function CollectionsComponent_Factory(t) { return new (t || vault_collections_component_CollectionsComponent)(core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
vault_collections_component_CollectionsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_collections_component_CollectionsComponent, selectors: [["app-vault-collections"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 49, vars: 15, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "header-icon"], ["aria-hidden", "true", 1, "fa", "fa-chevron-left"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [1, "box"], ["class", "box-content", 4, "ngIf"], [1, "box-content"], [1, "box-content-row", "padded", "no-hover"], ["class", "box-content-row box-content-row-checkbox", "appBoxRow", "", 4, "ngFor", "ngForOf"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox"], [3, "for"], ["type", "checkbox", 3, "id", "ngModel", "name", "ngModelChange"]], template: function CollectionsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function CollectionsComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "button", 3);
        core["qc" /* ɵɵlistener */]("click", function CollectionsComponent_Template_button_click_7_listener() { return ctx.back(); });
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span", 4);
        core["ec" /* ɵɵelement */](10, "i", 5);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "span");
        core["Qc" /* ɵɵtext */](13);
        core["vc" /* ɵɵpipe */](14, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](15, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["jc" /* ɵɵelementStart */](18, "div", 6);
        core["Qc" /* ɵɵtext */](19, " ");
        core["jc" /* ɵɵelementStart */](20, "span", 7);
        core["Qc" /* ɵɵtext */](21);
        core["vc" /* ɵɵpipe */](22, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](23, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "div", 8);
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "button", 9);
        core["Qc" /* ɵɵtext */](28, " ");
        core["jc" /* ɵɵelementStart */](29, "span", 10);
        core["Qc" /* ɵɵtext */](30);
        core["vc" /* ɵɵpipe */](31, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](32, " ");
        core["ec" /* ɵɵelement */](33, "i", 11);
        core["Qc" /* ɵɵtext */](34, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](35, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](36, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](37, " ");
        core["jc" /* ɵɵelementStart */](38, "content");
        core["Qc" /* ɵɵtext */](39, " ");
        core["jc" /* ɵɵelementStart */](40, "div", 12);
        core["Qc" /* ɵɵtext */](41, " ");
        core["Oc" /* ɵɵtemplate */](42, CollectionsComponent_div_42_Template, 6, 3, "div", 13);
        core["Qc" /* ɵɵtext */](43, " ");
        core["Oc" /* ɵɵtemplate */](44, CollectionsComponent_div_44_Template, 4, 1, "div", 13);
        core["Qc" /* ɵɵtext */](45, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](46, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](47, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](48, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](13);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](14, 9, "back"));
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](22, 11, "collections"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](31, 13, "save"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](9);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.collections || !ctx.collections.length);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.collections && ctx.collections.length);
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, BlurClickDirective, common["l" /* NgIf */], common["k" /* NgForOf */], BoxRowDirective, fesm2015_forms["a" /* CheckboxControlValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_collections_component_CollectionsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-collections',
                templateUrl: 'collections.component.html',
            }]
    }], function () { return [{ type: CollectionService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: CipherService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: common["h" /* Location */] }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/services/abstractions/autofill.service.ts
class AutofillService {
}

// CONCATENATED MODULE: ./src/popup/vault/current-tab.component.ts
var current_tab_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






































function CurrentTabComponent_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r4 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 7);
    core["qc" /* ɵɵlistener */]("click", function CurrentTabComponent_button_6_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r4); const ctx_r3 = core["uc" /* ɵɵnextContext */](); return ctx_r3.refresh(); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 11);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 1, "refresh"));
} }
function CurrentTabComponent_div_29_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 12);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 13);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} }
function CurrentTabComponent_ng_container_31_div_2_app_cipher_row_11_Template(rf, ctx) { if (rf & 1) {
    const _r12 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "app-cipher-row", 21);
    core["qc" /* ɵɵlistener */]("onSelected", function CurrentTabComponent_ng_container_31_div_2_app_cipher_row_11_Template_app_cipher_row_onSelected_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r12); const ctx_r11 = core["uc" /* ɵɵnextContext */](3); return ctx_r11.fillCipher($event); })("onView", function CurrentTabComponent_ng_container_31_div_2_app_cipher_row_11_Template_app_cipher_row_onView_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r12); const ctx_r13 = core["uc" /* ɵɵnextContext */](3); return ctx_r13.viewCipher($event); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const loginCipher_r10 = ctx.$implicit;
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 3, "autoFill"));
    core["Bc" /* ɵɵproperty */]("cipher", loginCipher_r10)("showView", true);
} }
function CurrentTabComponent_ng_container_31_div_2_div_13_Template(rf, ctx) { if (rf & 1) {
    const _r15 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 22);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p", 23);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "button", 24);
    core["qc" /* ɵɵlistener */]("click", function CurrentTabComponent_ng_container_31_div_2_div_13_Template_button_click_6_listener() { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r14 = core["uc" /* ɵɵnextContext */](3); return ctx_r14.addCipher(); });
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "autoFillInfo"));
    core["Sb" /* ɵɵadvance */](4);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](8, 4, "addLogin"), " ");
} }
function CurrentTabComponent_ng_container_31_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "span", 17);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 18);
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, CurrentTabComponent_ng_container_31_div_2_app_cipher_row_11_Template, 3, 5, "app-cipher-row", 19);
    core["Qc" /* ɵɵtext */](12, " ");
    core["Oc" /* ɵɵtemplate */](13, CurrentTabComponent_ng_container_31_div_2_div_13_Template, 10, 6, "div", 20);
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 4, "typeLogins"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r5.loginCiphers.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r5.loginCiphers);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r5.loginCiphers.length);
} }
function CurrentTabComponent_ng_container_31_div_4_app_cipher_row_11_Template(rf, ctx) { if (rf & 1) {
    const _r19 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "app-cipher-row", 21);
    core["qc" /* ɵɵlistener */]("onSelected", function CurrentTabComponent_ng_container_31_div_4_app_cipher_row_11_Template_app_cipher_row_onSelected_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r19); const ctx_r18 = core["uc" /* ɵɵnextContext */](3); return ctx_r18.fillCipher($event); })("onView", function CurrentTabComponent_ng_container_31_div_4_app_cipher_row_11_Template_app_cipher_row_onView_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r19); const ctx_r20 = core["uc" /* ɵɵnextContext */](3); return ctx_r20.viewCipher($event); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const cardCipher_r17 = ctx.$implicit;
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 3, "autoFill"));
    core["Bc" /* ɵɵproperty */]("cipher", cardCipher_r17)("showView", true);
} }
function CurrentTabComponent_ng_container_31_div_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "span", 17);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 18);
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, CurrentTabComponent_ng_container_31_div_4_app_cipher_row_11_Template, 2, 5, "app-cipher-row", 19);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r6 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "cards"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r6.cardCiphers.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r6.cardCiphers);
} }
function CurrentTabComponent_ng_container_31_div_6_app_cipher_row_11_Template(rf, ctx) { if (rf & 1) {
    const _r24 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "app-cipher-row", 21);
    core["qc" /* ɵɵlistener */]("onSelected", function CurrentTabComponent_ng_container_31_div_6_app_cipher_row_11_Template_app_cipher_row_onSelected_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r23 = core["uc" /* ɵɵnextContext */](3); return ctx_r23.fillCipher($event); })("onView", function CurrentTabComponent_ng_container_31_div_6_app_cipher_row_11_Template_app_cipher_row_onView_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r24); const ctx_r25 = core["uc" /* ɵɵnextContext */](3); return ctx_r25.viewCipher($event); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const identityCipher_r22 = ctx.$implicit;
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 3, "autoFill"));
    core["Bc" /* ɵɵproperty */]("cipher", identityCipher_r22)("showView", true);
} }
function CurrentTabComponent_ng_container_31_div_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "span", 17);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 18);
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, CurrentTabComponent_ng_container_31_div_6_app_cipher_row_11_Template, 2, 5, "app-cipher-row", 19);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r7 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "identities"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r7.identityCiphers.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r7.identityCiphers);
} }
function CurrentTabComponent_ng_container_31_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, CurrentTabComponent_ng_container_31_div_2_Template, 16, 6, "div", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, CurrentTabComponent_ng_container_31_div_4_Template, 14, 5, "div", 14);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, CurrentTabComponent_ng_container_31_div_6_Template, 14, 5, "div", 14);
    core["Qc" /* ɵɵtext */](7, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.loginCiphers);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.cardCiphers && ctx_r2.cardCiphers.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.identityCiphers && ctx_r2.identityCiphers.length);
} }
const current_tab_component_BroadcasterSubscriptionId = 'CurrentTabComponent';
class current_tab_component_CurrentTabComponent {
    constructor(platformUtilsService, cipherService, popupUtilsService, autofillService, toasterService, i18nService, router, ngZone, broadcasterService, changeDetectorRef, syncService, searchService, storageService, passwordRepromptService) {
        this.platformUtilsService = platformUtilsService;
        this.cipherService = cipherService;
        this.popupUtilsService = popupUtilsService;
        this.autofillService = autofillService;
        this.toasterService = toasterService;
        this.i18nService = i18nService;
        this.router = router;
        this.ngZone = ngZone;
        this.broadcasterService = broadcasterService;
        this.changeDetectorRef = changeDetectorRef;
        this.syncService = syncService;
        this.searchService = searchService;
        this.storageService = storageService;
        this.passwordRepromptService = passwordRepromptService;
        this.pageDetails = [];
        this.inSidebar = false;
        this.searchTypeSearch = false;
        this.loaded = false;
    }
    ngOnInit() {
        return current_tab_component_awaiter(this, void 0, void 0, function* () {
            this.searchTypeSearch = !this.platformUtilsService.isSafari();
            this.inSidebar = this.popupUtilsService.inSidebar(window);
            this.broadcasterService.subscribe(current_tab_component_BroadcasterSubscriptionId, (message) => {
                this.ngZone.run(() => current_tab_component_awaiter(this, void 0, void 0, function* () {
                    switch (message.command) {
                        case 'syncCompleted':
                            if (this.loaded) {
                                window.setTimeout(() => {
                                    this.load();
                                }, 500);
                            }
                            break;
                        case 'collectPageDetailsResponse':
                            if (message.sender === current_tab_component_BroadcasterSubscriptionId) {
                                this.pageDetails.push({
                                    frameId: message.webExtSender.frameId,
                                    tab: message.tab,
                                    details: message.details,
                                });
                            }
                            break;
                        default:
                            break;
                    }
                    this.changeDetectorRef.detectChanges();
                }));
            });
            if (!this.syncService.syncInProgress) {
                yield this.load();
            }
            else {
                this.loadedTimeout = window.setTimeout(() => current_tab_component_awaiter(this, void 0, void 0, function* () {
                    if (!this.loaded) {
                        yield this.load();
                    }
                }), 5000);
            }
            window.setTimeout(() => {
                document.getElementById('search').focus();
            }, 100);
        });
    }
    ngOnDestroy() {
        window.clearTimeout(this.loadedTimeout);
        this.broadcasterService.unsubscribe(current_tab_component_BroadcasterSubscriptionId);
    }
    refresh() {
        return current_tab_component_awaiter(this, void 0, void 0, function* () {
            yield this.load();
        });
    }
    addCipher() {
        this.router.navigate(['/add-cipher'], { queryParams: { name: this.hostname, uri: this.url } });
    }
    viewCipher(cipher) {
        this.router.navigate(['/view-cipher'], { queryParams: { cipherId: cipher.id } });
    }
    fillCipher(cipher) {
        return current_tab_component_awaiter(this, void 0, void 0, function* () {
            if (cipher.reprompt !== cipherRepromptType["a" /* CipherRepromptType */].None && !(yield this.passwordRepromptService.showPasswordPrompt())) {
                return;
            }
            this.totpCode = null;
            if (this.totpTimeout != null) {
                window.clearTimeout(this.totpTimeout);
            }
            if (this.pageDetails == null || this.pageDetails.length === 0) {
                this.toasterService.popAsync('error', null, this.i18nService.t('autofillError'));
                return;
            }
            try {
                this.totpCode = yield this.autofillService.doAutoFill({
                    cipher: cipher,
                    pageDetails: this.pageDetails,
                    doc: window.document,
                    fillNewPassword: true,
                });
                if (this.totpCode != null) {
                    this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });
                }
                if (this.popupUtilsService.inPopup(window)) {
                    if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {
                        browserApi["a" /* BrowserApi */].closePopup(window);
                    }
                    else {
                        // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard
                        setTimeout(() => browserApi["a" /* BrowserApi */].closePopup(window), 50);
                    }
                }
            }
            catch (_a) {
                this.ngZone.run(() => {
                    this.toasterService.popAsync('error', null, this.i18nService.t('autofillError'));
                    this.changeDetectorRef.detectChanges();
                });
            }
        });
    }
    searchVault() {
        if (this.searchTimeout != null) {
            clearTimeout(this.searchTimeout);
        }
        if (!this.searchService.isSearchable(this.searchText)) {
            return;
        }
        this.searchTimeout = window.setTimeout(() => current_tab_component_awaiter(this, void 0, void 0, function* () {
            this.router.navigate(['/tabs/vault'], { queryParams: { searchText: this.searchText } });
        }), 200);
    }
    closeOnEsc(e) {
        // If input not empty, use browser default behavior of clearing input instead
        if (e.key === 'Escape' && (this.searchText == null || this.searchText === '')) {
            browserApi["a" /* BrowserApi */].closePopup(window);
        }
    }
    load() {
        return current_tab_component_awaiter(this, void 0, void 0, function* () {
            const tab = yield browserApi["a" /* BrowserApi */].getTabFromCurrentWindow();
            if (tab != null) {
                this.url = tab.url;
            }
            else {
                this.loginCiphers = [];
                this.loaded = true;
                return;
            }
            this.hostname = utils["a" /* Utils */].getHostname(this.url);
            this.pageDetails = [];
            browserApi["a" /* BrowserApi */].tabSendMessage(tab, {
                command: 'collectPageDetails',
                tab: tab,
                sender: current_tab_component_BroadcasterSubscriptionId,
            });
            const otherTypes = [];
            const dontShowCards = yield this.storageService.get(constants_service["a" /* ConstantsService */].dontShowCardsCurrentTab);
            const dontShowIdentities = yield this.storageService.get(constants_service["a" /* ConstantsService */].dontShowIdentitiesCurrentTab);
            if (!dontShowCards) {
                otherTypes.push(cipherType["a" /* CipherType */].Card);
            }
            if (!dontShowIdentities) {
                otherTypes.push(cipherType["a" /* CipherType */].Identity);
            }
            const ciphers = yield this.cipherService.getAllDecryptedForUrl(this.url, otherTypes.length > 0 ? otherTypes : null);
            this.loginCiphers = [];
            this.cardCiphers = [];
            this.identityCiphers = [];
            ciphers.forEach(c => {
                switch (c.type) {
                    case cipherType["a" /* CipherType */].Login:
                        this.loginCiphers.push(c);
                        break;
                    case cipherType["a" /* CipherType */].Card:
                        this.cardCiphers.push(c);
                        break;
                    case cipherType["a" /* CipherType */].Identity:
                        this.identityCiphers.push(c);
                        break;
                    default:
                        break;
                }
            });
            this.loginCiphers = this.loginCiphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));
            this.loaded = true;
        });
    }
}
current_tab_component_CurrentTabComponent.ɵfac = function CurrentTabComponent_Factory(t) { return new (t || current_tab_component_CurrentTabComponent)(core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](AutofillService), core["dc" /* ɵɵdirectiveInject */](angular2_toaster["e" /* ToasterService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](SearchService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](passwordReprompt_service_PasswordRepromptService)); };
current_tab_component_CurrentTabComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: current_tab_component_CurrentTabComponent, selectors: [["app-current-tab"]], decls: 34, vars: 12, consts: [[1, "left"], [3, "show"], ["type", "button", "appBlurClick", "", 3, "appA11yTitle", "click", 4, "ngIf"], [1, "search"], ["id", "search", "autocomplete", "off", 3, "type", "placeholder", "ngModel", "ngModelChange", "input", "keydown"], ["aria-hidden", "true", 1, "fa", "fa-search"], [1, "right"], ["type", "button", "appBlurClick", "", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-plus", "fa-lg", "fa-fw"], ["class", "no-items", 4, "ngIf"], [4, "ngIf"], ["aria-hidden", "true", 1, "fa", "fa-retweet", "fa-lg", "fa-fw"], [1, "no-items"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-spin", "fa-3x"], ["class", "box list", 4, "ngIf"], [1, "box", "list"], [1, "box-header"], [1, "flex-right"], [1, "box-content"], [3, "cipher", "title", "showView", "onSelected", "onView", 4, "ngFor", "ngForOf"], ["class", "box-content-row padded no-hover", 4, "ngIf"], [3, "cipher", "title", "showView", "onSelected", "onView"], [1, "box-content-row", "padded", "no-hover"], [1, "text-center"], ["type", "button", 1, "btn", "primary", "link", "block", 3, "click"]], template: function CurrentTabComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["ec" /* ɵɵelement */](4, "app-pop-out", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["Oc" /* ɵɵtemplate */](6, CurrentTabComponent_button_6_Template, 5, 3, "button", 2);
        core["Qc" /* ɵɵtext */](7, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "div", 3);
        core["Qc" /* ɵɵtext */](10, " ");
        core["jc" /* ɵɵelementStart */](11, "input", 4);
        core["qc" /* ɵɵlistener */]("ngModelChange", function CurrentTabComponent_Template_input_ngModelChange_11_listener($event) { return ctx.searchText = $event; })("input", function CurrentTabComponent_Template_input_input_11_listener() { return ctx.searchVault(); })("keydown", function CurrentTabComponent_Template_input_keydown_11_listener($event) { return ctx.closeOnEsc($event); });
        core["vc" /* ɵɵpipe */](12, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ec" /* ɵɵelement */](14, "i", 5);
        core["Qc" /* ɵɵtext */](15, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "div", 6);
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "button", 7);
        core["qc" /* ɵɵlistener */]("click", function CurrentTabComponent_Template_button_click_19_listener() { return ctx.addCipher(); });
        core["vc" /* ɵɵpipe */](20, "i18n");
        core["Qc" /* ɵɵtext */](21, " ");
        core["ec" /* ɵɵelement */](22, "i", 8);
        core["Qc" /* ɵɵtext */](23, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](25, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "content");
        core["Qc" /* ɵɵtext */](28, " ");
        core["Oc" /* ɵɵtemplate */](29, CurrentTabComponent_div_29_Template, 4, 0, "div", 9);
        core["Qc" /* ɵɵtext */](30, " ");
        core["Oc" /* ɵɵtemplate */](31, CurrentTabComponent_ng_container_31_Template, 8, 3, "ng-container", 10);
        core["Qc" /* ɵɵtext */](32, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("show", !ctx.inSidebar);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.inSidebar);
        core["Sb" /* ɵɵadvance */](5);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.searchTypeSearch ? "search" : "text");
        core["Cc" /* ɵɵpropertyInterpolate */]("placeholder", core["wc" /* ɵɵpipeBind1 */](12, 8, "searchVault"));
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.searchText);
        core["Sb" /* ɵɵadvance */](8);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](20, 10, "addItem"));
        core["Sb" /* ɵɵadvance */](10);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.loaded);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.loaded);
    } }, directives: [PopOutComponent, common["l" /* NgIf */], fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], BlurClickDirective, A11yTitleDirective, common["k" /* NgForOf */], cipher_row_component_CipherRowComponent], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](current_tab_component_CurrentTabComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-current-tab',
                templateUrl: 'current-tab.component.html',
            }]
    }], function () { return [{ type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: CipherService }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: AutofillService }, { type: angular2_toaster["e" /* ToasterService */] }, { type: I18nService }, { type: fesm2015_router["e" /* Router */] }, { type: core["M" /* NgZone */] }, { type: services_broadcaster_service_BroadcasterService }, { type: core["j" /* ChangeDetectorRef */] }, { type: SyncService }, { type: SearchService }, { type: StorageService }, { type: passwordReprompt_service_PasswordRepromptService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/groupings.component.ts
var groupings_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};












class groupings_component_GroupingsComponent {
    constructor(collectionService, folderService, storageService, userService) {
        this.collectionService = collectionService;
        this.folderService = folderService;
        this.storageService = storageService;
        this.userService = userService;
        this.showFolders = true;
        this.showCollections = true;
        this.showFavorites = true;
        this.showTrash = true;
        this.onAllClicked = new core["t" /* EventEmitter */]();
        this.onFavoritesClicked = new core["t" /* EventEmitter */]();
        this.onTrashClicked = new core["t" /* EventEmitter */]();
        this.onCipherTypeClicked = new core["t" /* EventEmitter */]();
        this.onFolderClicked = new core["t" /* EventEmitter */]();
        this.onAddFolder = new core["t" /* EventEmitter */]();
        this.onEditFolder = new core["t" /* EventEmitter */]();
        this.onCollectionClicked = new core["t" /* EventEmitter */]();
        this.loaded = false;
        this.cipherType = cipherType["a" /* CipherType */];
        this.selectedAll = false;
        this.selectedFavorites = false;
        this.selectedTrash = false;
        this.selectedType = null;
        this.selectedFolder = false;
        this.selectedFolderId = null;
        this.selectedCollectionId = null;
    }
    load(setLoaded = true) {
        return groupings_component_awaiter(this, void 0, void 0, function* () {
            const userId = yield this.userService.getUserId();
            this.collapsedGroupingsKey = constants_service["a" /* ConstantsService */].collapsedGroupingsKey + '_' + userId;
            const collapsedGroupings = yield this.storageService.get(this.collapsedGroupingsKey);
            if (collapsedGroupings == null) {
                this.collapsedGroupings = new Set();
            }
            else {
                this.collapsedGroupings = new Set(collapsedGroupings);
            }
            yield this.loadFolders();
            yield this.loadCollections();
            if (setLoaded) {
                this.loaded = true;
            }
        });
    }
    loadCollections(organizationId) {
        return groupings_component_awaiter(this, void 0, void 0, function* () {
            if (!this.showCollections) {
                return;
            }
            const collections = yield this.collectionService.getAllDecrypted();
            if (organizationId != null) {
                this.collections = collections.filter(c => c.organizationId === organizationId);
            }
            else {
                this.collections = collections;
            }
            this.nestedCollections = yield this.collectionService.getAllNested(this.collections);
        });
    }
    loadFolders() {
        return groupings_component_awaiter(this, void 0, void 0, function* () {
            if (!this.showFolders) {
                return;
            }
            this.folders = yield this.folderService.getAllDecrypted();
            this.nestedFolders = yield this.folderService.getAllNested();
        });
    }
    selectAll() {
        this.clearSelections();
        this.selectedAll = true;
        this.onAllClicked.emit();
    }
    selectFavorites() {
        this.clearSelections();
        this.selectedFavorites = true;
        this.onFavoritesClicked.emit();
    }
    selectTrash() {
        this.clearSelections();
        this.selectedTrash = true;
        this.onTrashClicked.emit();
    }
    selectType(type) {
        this.clearSelections();
        this.selectedType = type;
        this.onCipherTypeClicked.emit(type);
    }
    selectFolder(folder) {
        this.clearSelections();
        this.selectedFolder = true;
        this.selectedFolderId = folder.id;
        this.onFolderClicked.emit(folder);
    }
    addFolder() {
        this.onAddFolder.emit();
    }
    editFolder(folder) {
        this.onEditFolder.emit(folder);
    }
    selectCollection(collection) {
        this.clearSelections();
        this.selectedCollectionId = collection.id;
        this.onCollectionClicked.emit(collection);
    }
    clearSelections() {
        this.selectedAll = false;
        this.selectedFavorites = false;
        this.selectedTrash = false;
        this.selectedType = null;
        this.selectedFolder = false;
        this.selectedFolderId = null;
        this.selectedCollectionId = null;
    }
    collapse(grouping, idPrefix = '') {
        if (grouping.id == null) {
            return;
        }
        const id = idPrefix + grouping.id;
        if (this.isCollapsed(grouping, idPrefix)) {
            this.collapsedGroupings.delete(id);
        }
        else {
            this.collapsedGroupings.add(id);
        }
        this.storageService.save(this.collapsedGroupingsKey, this.collapsedGroupings);
    }
    isCollapsed(grouping, idPrefix = '') {
        return this.collapsedGroupings.has(idPrefix + grouping.id);
    }
}
groupings_component_GroupingsComponent.ɵfac = function GroupingsComponent_Factory(t) { return new (t || groupings_component_GroupingsComponent)(core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](FolderService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](UserService)); };
groupings_component_GroupingsComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: groupings_component_GroupingsComponent, inputs: { showFolders: "showFolders", showCollections: "showCollections", showFavorites: "showFavorites", showTrash: "showTrash" }, outputs: { onAllClicked: "onAllClicked", onFavoritesClicked: "onFavoritesClicked", onTrashClicked: "onTrashClicked", onCipherTypeClicked: "onCipherTypeClicked", onFolderClicked: "onFolderClicked", onAddFolder: "onAddFolder", onEditFolder: "onEditFolder", onCollectionClicked: "onCollectionClicked" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](groupings_component_GroupingsComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: CollectionService }, { type: FolderService }, { type: StorageService }, { type: UserService }]; }, { showFolders: [{
            type: core["D" /* Input */]
        }], showCollections: [{
            type: core["D" /* Input */]
        }], showFavorites: [{
            type: core["D" /* Input */]
        }], showTrash: [{
            type: core["D" /* Input */]
        }], onAllClicked: [{
            type: core["O" /* Output */]
        }], onFavoritesClicked: [{
            type: core["O" /* Output */]
        }], onTrashClicked: [{
            type: core["O" /* Output */]
        }], onCipherTypeClicked: [{
            type: core["O" /* Output */]
        }], onFolderClicked: [{
            type: core["O" /* Output */]
        }], onAddFolder: [{
            type: core["O" /* Output */]
        }], onEditFolder: [{
            type: core["O" /* Output */]
        }], onCollectionClicked: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/vault/groupings.component.ts
var vault_groupings_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










































function GroupingsComponent_div_27_i_2_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 11);
} }
function GroupingsComponent_div_27_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r6 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 12);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "p");
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "button", 13);
    core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_div_27_ng_container_4_Template_button_click_8_listener() { core["Jc" /* ɵɵrestoreView */](_r6); const ctx_r5 = core["uc" /* ɵɵnextContext */](2); return ctx_r5.addCipher(); });
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 2, "noItemsInList"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 4, "addItem"));
} }
function GroupingsComponent_div_27_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 9);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, GroupingsComponent_div_27_i_2_Template, 1, 0, "i", 10);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, GroupingsComponent_div_27_ng_container_4_Template, 12, 6, "ng-container", 8);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r0.loaded);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r0.loaded);
} }
function GroupingsComponent_ng_container_29_div_2_app_cipher_row_11_Template(rf, ctx) { if (rf & 1) {
    const _r15 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "app-cipher-row", 31);
    core["qc" /* ɵɵlistener */]("onSelected", function GroupingsComponent_ng_container_29_div_2_app_cipher_row_11_Template_app_cipher_row_onSelected_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r14 = core["uc" /* ɵɵnextContext */](3); return ctx_r14.selectCipher($event); })("launchEvent", function GroupingsComponent_ng_container_29_div_2_app_cipher_row_11_Template_app_cipher_row_launchEvent_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r15); const ctx_r16 = core["uc" /* ɵɵnextContext */](3); return ctx_r16.launchCipher($event); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const favoriteCipher_r13 = ctx.$implicit;
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "viewItem"));
    core["Bc" /* ɵɵproperty */]("cipher", favoriteCipher_r13);
} }
function GroupingsComponent_ng_container_29_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "span", 17);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 29);
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, GroupingsComponent_ng_container_29_div_2_app_cipher_row_11_Template, 2, 4, "app-cipher-row", 30);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r7 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "favorites"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r7.favoriteCiphers.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r7.favoriteCiphers);
} }
const groupings_component_c0 = function (a0, a1) { return { "fa-folder-open": a0, "fa-folder-open-o": a1 }; };
function GroupingsComponent_ng_container_29_div_93_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r20 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_ng_container_29_div_93_button_11_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r20); const f_r18 = ctx.$implicit; const ctx_r19 = core["uc" /* ɵɵnextContext */](3); return ctx_r19.selectFolder(f_r18.node); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 20);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 21);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 33);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span", 23);
    core["Qc" /* ɵɵtext */](10);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "span", 24);
    core["Qc" /* ɵɵtext */](14);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "span");
    core["ec" /* ɵɵelement */](17, "i", 25);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const f_r18 = ctx.$implicit;
    const ctx_r17 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](3, groupings_component_c0, f_r18.node.id, !f_r18.node.id));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](f_r18.node.name);
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r17.folderCounts.get(f_r18.node.id) || 0);
} }
function GroupingsComponent_ng_container_29_div_93_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "span", 17);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 18);
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, GroupingsComponent_ng_container_29_div_93_button_11_Template, 19, 6, "button", 32);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r8 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "folders"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r8.folderCount);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r8.nestedFolders);
} }
function GroupingsComponent_ng_container_29_div_95_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r24 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_ng_container_29_div_95_button_11_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r24); const nestedCollection_r22 = ctx.$implicit; const ctx_r23 = core["uc" /* ɵɵnextContext */](3); return ctx_r23.selectCollection(nestedCollection_r22.node); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 20);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 21);
    core["ec" /* ɵɵelement */](5, "i", 34);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["jc" /* ɵɵelementStart */](7, "span", 23);
    core["Qc" /* ɵɵtext */](8);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "span", 24);
    core["Qc" /* ɵɵtext */](12);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "span");
    core["ec" /* ɵɵelement */](15, "i", 25);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const nestedCollection_r22 = ctx.$implicit;
    const ctx_r21 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](nestedCollection_r22.node.name);
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r21.collectionCounts.get(nestedCollection_r22.node.id) || 0);
} }
function GroupingsComponent_ng_container_29_div_95_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "span", 17);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 18);
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, GroupingsComponent_ng_container_29_div_95_button_11_Template, 17, 2, "button", 32);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r9 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "collections"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r9.nestedCollections.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r9.nestedCollections);
} }
function GroupingsComponent_ng_container_29_div_97_app_cipher_row_11_Template(rf, ctx) { if (rf & 1) {
    const _r28 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "app-cipher-row", 31);
    core["qc" /* ɵɵlistener */]("onSelected", function GroupingsComponent_ng_container_29_div_97_app_cipher_row_11_Template_app_cipher_row_onSelected_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r28); const ctx_r27 = core["uc" /* ɵɵnextContext */](3); return ctx_r27.selectCipher($event); })("launchEvent", function GroupingsComponent_ng_container_29_div_97_app_cipher_row_11_Template_app_cipher_row_launchEvent_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r28); const ctx_r29 = core["uc" /* ɵɵnextContext */](3); return ctx_r29.launchCipher($event); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const noFolderCipher_r26 = ctx.$implicit;
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "viewItem"));
    core["Bc" /* ɵɵproperty */]("cipher", noFolderCipher_r26);
} }
function GroupingsComponent_ng_container_29_div_97_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "div", 17);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 29);
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, GroupingsComponent_ng_container_29_div_97_app_cipher_row_11_Template, 2, 4, "app-cipher-row", 30);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r10 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "noneFolder"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r10.noFolderCiphers.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r10.noFolderCiphers);
} }
function GroupingsComponent_ng_container_29_div_99_Template(rf, ctx) { if (rf & 1) {
    const _r31 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "span", 17);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 18);
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_ng_container_29_div_99_Template_button_click_11_listener() { core["Jc" /* ɵɵrestoreView */](_r31); const ctx_r30 = core["uc" /* ɵɵnextContext */](2); return ctx_r30.selectTrash(); });
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "div", 20);
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 21);
    core["ec" /* ɵɵelement */](16, "i", 35);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](17, " ");
    core["jc" /* ɵɵelementStart */](18, "span", 23);
    core["Qc" /* ɵɵtext */](19);
    core["vc" /* ɵɵpipe */](20, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["jc" /* ɵɵelementStart */](23, "span", 24);
    core["Qc" /* ɵɵtext */](24);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](25, " ");
    core["jc" /* ɵɵelementStart */](26, "span");
    core["ec" /* ɵɵelement */](27, "i", 25);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](30, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r11 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 4, "trash"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r11.deletedCount);
    core["Sb" /* ɵɵadvance */](13);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](20, 6, "trash"));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r11.deletedCount);
} }
function GroupingsComponent_ng_container_29_Template(rf, ctx) { if (rf & 1) {
    const _r33 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, GroupingsComponent_ng_container_29_div_2_Template, 14, 5, "div", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 15);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 16);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["jc" /* ɵɵelementStart */](9, "span", 17);
    core["Qc" /* ɵɵtext */](10, "4");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "div", 18);
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_ng_container_29_Template_button_click_15_listener() { core["Jc" /* ɵɵrestoreView */](_r33); const ctx_r32 = core["uc" /* ɵɵnextContext */](); return ctx_r32.selectType(ctx_r32.cipherType.Login); });
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "div", 20);
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "div", 21);
    core["ec" /* ɵɵelement */](20, "i", 22);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "span", 23);
    core["Qc" /* ɵɵtext */](23);
    core["vc" /* ɵɵpipe */](24, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](25, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](26, " ");
    core["jc" /* ɵɵelementStart */](27, "span", 24);
    core["Qc" /* ɵɵtext */](28);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["jc" /* ɵɵelementStart */](30, "span");
    core["ec" /* ɵɵelement */](31, "i", 25);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](32, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](33, " ");
    core["jc" /* ɵɵelementStart */](34, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_ng_container_29_Template_button_click_34_listener() { core["Jc" /* ɵɵrestoreView */](_r33); const ctx_r34 = core["uc" /* ɵɵnextContext */](); return ctx_r34.selectType(ctx_r34.cipherType.Card); });
    core["Qc" /* ɵɵtext */](35, " ");
    core["jc" /* ɵɵelementStart */](36, "div", 20);
    core["Qc" /* ɵɵtext */](37, " ");
    core["jc" /* ɵɵelementStart */](38, "div", 21);
    core["ec" /* ɵɵelement */](39, "i", 26);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](40, " ");
    core["jc" /* ɵɵelementStart */](41, "span", 23);
    core["Qc" /* ɵɵtext */](42);
    core["vc" /* ɵɵpipe */](43, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](44, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](45, " ");
    core["jc" /* ɵɵelementStart */](46, "span", 24);
    core["Qc" /* ɵɵtext */](47);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](48, " ");
    core["jc" /* ɵɵelementStart */](49, "span");
    core["ec" /* ɵɵelement */](50, "i", 25);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](51, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](52, " ");
    core["jc" /* ɵɵelementStart */](53, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_ng_container_29_Template_button_click_53_listener() { core["Jc" /* ɵɵrestoreView */](_r33); const ctx_r35 = core["uc" /* ɵɵnextContext */](); return ctx_r35.selectType(ctx_r35.cipherType.Identity); });
    core["Qc" /* ɵɵtext */](54, " ");
    core["jc" /* ɵɵelementStart */](55, "div", 20);
    core["Qc" /* ɵɵtext */](56, " ");
    core["jc" /* ɵɵelementStart */](57, "div", 21);
    core["ec" /* ɵɵelement */](58, "i", 27);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](59, " ");
    core["jc" /* ɵɵelementStart */](60, "span", 23);
    core["Qc" /* ɵɵtext */](61);
    core["vc" /* ɵɵpipe */](62, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](63, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](64, " ");
    core["jc" /* ɵɵelementStart */](65, "span", 24);
    core["Qc" /* ɵɵtext */](66);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](67, " ");
    core["jc" /* ɵɵelementStart */](68, "span");
    core["ec" /* ɵɵelement */](69, "i", 25);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](70, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](71, " ");
    core["jc" /* ɵɵelementStart */](72, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_ng_container_29_Template_button_click_72_listener() { core["Jc" /* ɵɵrestoreView */](_r33); const ctx_r36 = core["uc" /* ɵɵnextContext */](); return ctx_r36.selectType(ctx_r36.cipherType.SecureNote); });
    core["Qc" /* ɵɵtext */](73, " ");
    core["jc" /* ɵɵelementStart */](74, "div", 20);
    core["Qc" /* ɵɵtext */](75, " ");
    core["jc" /* ɵɵelementStart */](76, "div", 21);
    core["ec" /* ɵɵelement */](77, "i", 28);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](78, " ");
    core["jc" /* ɵɵelementStart */](79, "span", 23);
    core["Qc" /* ɵɵtext */](80);
    core["vc" /* ɵɵpipe */](81, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](82, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](83, " ");
    core["jc" /* ɵɵelementStart */](84, "span", 24);
    core["Qc" /* ɵɵtext */](85);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](86, " ");
    core["jc" /* ɵɵelementStart */](87, "span");
    core["ec" /* ɵɵelement */](88, "i", 25);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](89, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](90, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](91, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](92, " ");
    core["Oc" /* ɵɵtemplate */](93, GroupingsComponent_ng_container_29_div_93_Template, 14, 5, "div", 14);
    core["Qc" /* ɵɵtext */](94, " ");
    core["Oc" /* ɵɵtemplate */](95, GroupingsComponent_ng_container_29_div_95_Template, 14, 5, "div", 14);
    core["Qc" /* ɵɵtext */](96, " ");
    core["Oc" /* ɵɵtemplate */](97, GroupingsComponent_ng_container_29_div_97_Template, 14, 5, "div", 14);
    core["Qc" /* ɵɵtext */](98, " ");
    core["Oc" /* ɵɵtemplate */](99, GroupingsComponent_ng_container_29_div_99_Template, 31, 8, "div", 14);
    core["Qc" /* ɵɵtext */](100, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.favoriteCiphers);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](8, 14, "types"), " ");
    core["Sb" /* ɵɵadvance */](16);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](24, 16, "typeLogin"));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r1.typeCounts.get(ctx_r1.cipherType.Login) || 0);
    core["Sb" /* ɵɵadvance */](14);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](43, 18, "typeCard"));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r1.typeCounts.get(ctx_r1.cipherType.Card) || 0);
    core["Sb" /* ɵɵadvance */](14);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](62, 20, "typeIdentity"));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r1.typeCounts.get(ctx_r1.cipherType.Identity) || 0);
    core["Sb" /* ɵɵadvance */](14);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](81, 22, "typeSecureNote"));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r1.typeCounts.get(ctx_r1.cipherType.SecureNote) || 0);
    core["Sb" /* ɵɵadvance */](8);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.nestedFolders == null ? null : ctx_r1.nestedFolders.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.nestedCollections && ctx_r1.nestedCollections.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.showNoFolderCiphers);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.deletedCount);
} }
function GroupingsComponent_ng_container_31_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 9);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 1, "noItemsInList"));
} }
function GroupingsComponent_ng_container_31_cdk_virtual_scroll_viewport_4_app_cipher_row_6_Template(rf, ctx) { if (rf & 1) {
    const _r42 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "app-cipher-row", 31);
    core["qc" /* ɵɵlistener */]("onSelected", function GroupingsComponent_ng_container_31_cdk_virtual_scroll_viewport_4_app_cipher_row_6_Template_app_cipher_row_onSelected_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r42); const ctx_r41 = core["uc" /* ɵɵnextContext */](3); return ctx_r41.selectCipher($event); })("launchEvent", function GroupingsComponent_ng_container_31_cdk_virtual_scroll_viewport_4_app_cipher_row_6_Template_app_cipher_row_launchEvent_0_listener($event) { core["Jc" /* ɵɵrestoreView */](_r42); const ctx_r43 = core["uc" /* ɵɵnextContext */](3); return ctx_r43.launchCipher($event); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const searchedCipher_r40 = ctx.$implicit;
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "viewItem"));
    core["Bc" /* ɵɵproperty */]("cipher", searchedCipher_r40);
} }
function GroupingsComponent_ng_container_31_cdk_virtual_scroll_viewport_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "cdk-virtual-scroll-viewport", 37);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 38);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 29);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, GroupingsComponent_ng_container_31_cdk_virtual_scroll_viewport_4_app_cipher_row_6_Template, 2, 4, "app-cipher-row", 39);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r38 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("cdkVirtualForOf", ctx_r38.ciphers);
} }
function GroupingsComponent_ng_container_31_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, GroupingsComponent_ng_container_31_div_2_Template, 6, 3, "div", 7);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, GroupingsComponent_ng_container_31_cdk_virtual_scroll_viewport_4_Template, 10, 1, "cdk-virtual-scroll-viewport", 36);
    core["Qc" /* ɵɵtext */](5, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r2.ciphers || !ctx_r2.ciphers.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.ciphers && ctx_r2.ciphers.length > 0);
} }
const groupings_component_ComponentId = 'GroupingsComponent';
const ScopeStateId = groupings_component_ComponentId + 'Scope';
class vault_groupings_component_GroupingsComponent extends groupings_component_GroupingsComponent {
    constructor(collectionService, folderService, storageService, userService, cipherService, router, ngZone, broadcasterService, changeDetectorRef, route, stateService, popupUtils, syncService, platformUtilsService, searchService, location) {
        super(collectionService, folderService, storageService, userService);
        this.cipherService = cipherService;
        this.router = router;
        this.ngZone = ngZone;
        this.broadcasterService = broadcasterService;
        this.changeDetectorRef = changeDetectorRef;
        this.route = route;
        this.stateService = stateService;
        this.popupUtils = popupUtils;
        this.syncService = syncService;
        this.platformUtilsService = platformUtilsService;
        this.searchService = searchService;
        this.location = location;
        this.folderCounts = new Map();
        this.collectionCounts = new Map();
        this.typeCounts = new Map();
        this.showLeftHeader = true;
        this.searchPending = false;
        this.searchTypeSearch = false;
        this.deletedCount = 0;
        this.preventSelected = false;
        this.noFolderListSize = 100;
        this.searchTimeout = null;
        this.hasSearched = false;
        this.hasLoadedAllCiphers = false;
        this.allCiphers = null;
        this.noFolderListSize = 100;
    }
    get showNoFolderCiphers() {
        return this.noFolderCiphers != null && this.noFolderCiphers.length < this.noFolderListSize &&
            this.collections.length === 0;
    }
    get folderCount() {
        return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);
    }
    ngOnInit() {
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.searchTypeSearch = !this.platformUtilsService.isSafari();
            this.showLeftHeader = !(this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox());
            this.stateService.remove('CiphersComponent');
            this.broadcasterService.subscribe(groupings_component_ComponentId, (message) => {
                this.ngZone.run(() => vault_groupings_component_awaiter(this, void 0, void 0, function* () {
                    switch (message.command) {
                        case 'syncCompleted':
                            window.setTimeout(() => {
                                this.load();
                            }, 500);
                            break;
                        default:
                            break;
                    }
                    this.changeDetectorRef.detectChanges();
                }));
            });
            const restoredScopeState = yield this.restoreState();
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => vault_groupings_component_awaiter(this, void 0, void 0, function* () {
                this.state = (yield this.stateService.get(groupings_component_ComponentId)) || {};
                if (this.state.searchText) {
                    this.searchText = this.state.searchText;
                }
                else if (params.searchText) {
                    this.searchText = params.searchText;
                    this.location.replaceState('vault');
                }
                if (!this.syncService.syncInProgress) {
                    this.load();
                }
                else {
                    this.loadedTimeout = window.setTimeout(() => {
                        if (!this.loaded) {
                            this.load();
                        }
                    }, 5000);
                }
                if (!this.syncService.syncInProgress || restoredScopeState) {
                    window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state.scrollY), 0);
                }
            }));
        });
    }
    ngOnDestroy() {
        if (this.loadedTimeout != null) {
            window.clearTimeout(this.loadedTimeout);
        }
        if (this.selectedTimeout != null) {
            window.clearTimeout(this.selectedTimeout);
        }
        this.saveState();
        this.broadcasterService.unsubscribe(groupings_component_ComponentId);
    }
    load() {
        const _super = Object.create(null, {
            load: { get: () => super.load, set: v => super.load = v },
            loaded: { get: () => super.loaded, set: v => super.loaded = v }
        });
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            yield _super.load.call(this, false);
            yield this.loadCiphers();
            if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {
                // Remove "No Folder" from folder listing
                this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);
            }
            _super.loaded = true;
        });
    }
    loadCiphers() {
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.allCiphers = yield this.cipherService.getAllDecrypted();
            if (!this.hasLoadedAllCiphers) {
                this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);
            }
            this.deletedCount = this.allCiphers.filter(c => c.isDeleted).length;
            yield this.search(null);
            let favoriteCiphers = null;
            let noFolderCiphers = null;
            const folderCounts = new Map();
            const collectionCounts = new Map();
            const typeCounts = new Map();
            this.ciphers.forEach(c => {
                if (c.isDeleted) {
                    return;
                }
                if (c.favorite) {
                    if (favoriteCiphers == null) {
                        favoriteCiphers = [];
                    }
                    favoriteCiphers.push(c);
                }
                if (c.folderId == null) {
                    if (noFolderCiphers == null) {
                        noFolderCiphers = [];
                    }
                    noFolderCiphers.push(c);
                }
                if (typeCounts.has(c.type)) {
                    typeCounts.set(c.type, typeCounts.get(c.type) + 1);
                }
                else {
                    typeCounts.set(c.type, 1);
                }
                if (folderCounts.has(c.folderId)) {
                    folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);
                }
                else {
                    folderCounts.set(c.folderId, 1);
                }
                if (c.collectionIds != null) {
                    c.collectionIds.forEach(colId => {
                        if (collectionCounts.has(colId)) {
                            collectionCounts.set(colId, collectionCounts.get(colId) + 1);
                        }
                        else {
                            collectionCounts.set(colId, 1);
                        }
                    });
                }
            });
            this.favoriteCiphers = favoriteCiphers;
            this.noFolderCiphers = noFolderCiphers;
            this.typeCounts = typeCounts;
            this.folderCounts = folderCounts;
            this.collectionCounts = collectionCounts;
        });
    }
    search(timeout = null) {
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.searchPending = false;
            if (this.searchTimeout != null) {
                clearTimeout(this.searchTimeout);
            }
            const filterDeleted = (c) => !c.isDeleted;
            if (timeout == null) {
                this.hasSearched = this.searchService.isSearchable(this.searchText);
                this.ciphers = yield this.searchService.searchCiphers(this.searchText, filterDeleted, this.allCiphers);
                return;
            }
            this.searchPending = true;
            this.searchTimeout = setTimeout(() => vault_groupings_component_awaiter(this, void 0, void 0, function* () {
                this.hasSearched = this.searchService.isSearchable(this.searchText);
                if (!this.hasLoadedAllCiphers && !this.hasSearched) {
                    yield this.loadCiphers();
                }
                else {
                    this.ciphers = yield this.searchService.searchCiphers(this.searchText, filterDeleted, this.allCiphers);
                }
                this.searchPending = false;
            }), timeout);
        });
    }
    selectType(type) {
        const _super = Object.create(null, {
            selectType: { get: () => super.selectType }
        });
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            _super.selectType.call(this, type);
            this.router.navigate(['/ciphers'], { queryParams: { type: type } });
        });
    }
    selectFolder(folder) {
        const _super = Object.create(null, {
            selectFolder: { get: () => super.selectFolder }
        });
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            _super.selectFolder.call(this, folder);
            this.router.navigate(['/ciphers'], { queryParams: { folderId: folder.id || 'none' } });
        });
    }
    selectCollection(collection) {
        const _super = Object.create(null, {
            selectCollection: { get: () => super.selectCollection }
        });
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            _super.selectCollection.call(this, collection);
            this.router.navigate(['/ciphers'], { queryParams: { collectionId: collection.id } });
        });
    }
    selectTrash() {
        const _super = Object.create(null, {
            selectTrash: { get: () => super.selectTrash }
        });
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            _super.selectTrash.call(this);
            this.router.navigate(['/ciphers'], { queryParams: { deleted: true } });
        });
    }
    selectCipher(cipher) {
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.selectedTimeout = window.setTimeout(() => {
                if (!this.preventSelected) {
                    this.router.navigate(['/view-cipher'], { queryParams: { cipherId: cipher.id } });
                }
                this.preventSelected = false;
            }, 200);
        });
    }
    launchCipher(cipher) {
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            if (cipher.type !== cipherType["a" /* CipherType */].Login || !cipher.login.canLaunch) {
                return;
            }
            if (this.selectedTimeout != null) {
                window.clearTimeout(this.selectedTimeout);
            }
            this.preventSelected = true;
            yield this.cipherService.updateLastLaunchedDate(cipher.id);
            browserApi["a" /* BrowserApi */].createNewTab(cipher.login.launchUri);
            if (this.popupUtils.inPopup(window)) {
                browserApi["a" /* BrowserApi */].closePopup(window);
            }
        });
    }
    addCipher() {
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.router.navigate(['/add-cipher']);
        });
    }
    showSearching() {
        return this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText));
    }
    closeOnEsc(e) {
        // If input not empty, use browser default behavior of clearing input instead
        if (e.key === 'Escape' && (this.searchText == null || this.searchText === '')) {
            browserApi["a" /* BrowserApi */].closePopup(window);
        }
    }
    saveState() {
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.state = {
                scrollY: this.popupUtils.getContentScrollY(window),
                searchText: this.searchText,
            };
            yield this.stateService.save(groupings_component_ComponentId, this.state);
            this.scopeState = {
                favoriteCiphers: this.favoriteCiphers,
                noFolderCiphers: this.noFolderCiphers,
                ciphers: this.ciphers,
                collectionCounts: this.collectionCounts,
                folderCounts: this.folderCounts,
                typeCounts: this.typeCounts,
                folders: this.folders,
                collections: this.collections,
                deletedCount: this.deletedCount,
            };
            yield this.stateService.save(ScopeStateId, this.scopeState);
        });
    }
    restoreState() {
        return vault_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.scopeState = yield this.stateService.get(ScopeStateId);
            if (this.scopeState == null) {
                return false;
            }
            if (this.scopeState.favoriteCiphers != null) {
                this.favoriteCiphers = this.scopeState.favoriteCiphers;
            }
            if (this.scopeState.noFolderCiphers != null) {
                this.noFolderCiphers = this.scopeState.noFolderCiphers;
            }
            if (this.scopeState.ciphers != null) {
                this.ciphers = this.scopeState.ciphers;
            }
            if (this.scopeState.collectionCounts != null) {
                this.collectionCounts = this.scopeState.collectionCounts;
            }
            if (this.scopeState.folderCounts != null) {
                this.folderCounts = this.scopeState.folderCounts;
            }
            if (this.scopeState.typeCounts != null) {
                this.typeCounts = this.scopeState.typeCounts;
            }
            if (this.scopeState.folders != null) {
                this.folders = this.scopeState.folders;
            }
            if (this.scopeState.collections != null) {
                this.collections = this.scopeState.collections;
            }
            if (this.scopeState.deletedCiphers != null) {
                this.deletedCount = this.scopeState.deletedCount;
            }
            return true;
        });
    }
}
vault_groupings_component_GroupingsComponent.ɵfac = function GroupingsComponent_Factory(t) { return new (t || vault_groupings_component_GroupingsComponent)(core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](FolderService), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](SearchService), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */])); };
vault_groupings_component_GroupingsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_groupings_component_GroupingsComponent, selectors: [["app-vault-groupings"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 34, vars: 11, consts: [[1, "left"], [1, "search"], ["id", "search", "autocomplete", "off", "appAutofocus", "", 3, "type", "placeholder", "ngModel", "ngModelChange", "input", "keydown"], [1, "fa", "fa-search"], [1, "right"], ["type", "button", "appBlurClick", "", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-plus", "fa-lg", "fa-fw"], ["class", "no-items", 4, "ngIf"], [4, "ngIf"], [1, "no-items"], ["class", "fa fa-spinner fa-spin fa-3x", 4, "ngIf"], [1, "fa", "fa-spinner", "fa-spin", "fa-3x"], [1, "fa", "fa-frown-o", "fa-4x"], ["type", "button", 1, "btn", "block", "primary", "link", 3, "click"], ["class", "box list", 4, "ngIf"], [1, "box", "list"], [1, "box-header"], [1, "flex-right"], [1, "box-content", "single-line"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", 3, "click"], [1, "row-main"], [1, "icon"], [1, "fa", "fa-fw", "fa-lg", "fa-globe"], [1, "text"], [1, "row-sub-label"], [1, "fa", "fa-chevron-right", "fa-lg", "row-sub-icon"], [1, "fa", "fa-fw", "fa-lg", "fa-credit-card"], [1, "fa", "fa-fw", "fa-lg", "fa-id-card-o"], [1, "fa", "fa-fw", "fa-lg", "fa-sticky-note-o"], [1, "box-content"], [3, "cipher", "title", "onSelected", "launchEvent", 4, "ngFor", "ngForOf"], [3, "cipher", "title", "onSelected", "launchEvent"], ["type", "button", "class", "box-content-row", "appStopClick", "", "appBlurClick", "", 3, "click", 4, "ngFor", "ngForOf"], [1, "fa", "fa-fw", "fa-lg", 3, "ngClass"], [1, "fa", "fa-fw", "fa-lg", "fa-cube"], [1, "fa", "fa-fw", "fa-lg", "fa-trash-o"], ["itemSize", "46", "minBufferPx", "400", "maxBufferPx", "600", 4, "ngIf"], ["itemSize", "46", "minBufferPx", "400", "maxBufferPx", "600"], [1, "box", "list", "full-list"], [3, "cipher", "title", "onSelected", "launchEvent", 4, "cdkVirtualFor", "cdkVirtualForOf"]], template: function GroupingsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["ec" /* ɵɵelement */](4, "app-pop-out");
        core["Qc" /* ɵɵtext */](5, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "div", 1);
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "input", 2);
        core["qc" /* ɵɵlistener */]("ngModelChange", function GroupingsComponent_Template_input_ngModelChange_9_listener($event) { return ctx.searchText = $event; })("input", function GroupingsComponent_Template_input_input_9_listener() { return ctx.search(200); })("keydown", function GroupingsComponent_Template_input_keydown_9_listener($event) { return ctx.closeOnEsc($event); });
        core["vc" /* ɵɵpipe */](10, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["ec" /* ɵɵelement */](12, "i", 3);
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 4);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "button", 5);
        core["qc" /* ɵɵlistener */]("click", function GroupingsComponent_Template_button_click_17_listener() { return ctx.addCipher(); });
        core["vc" /* ɵɵpipe */](18, "i18n");
        core["Qc" /* ɵɵtext */](19, " ");
        core["ec" /* ɵɵelement */](20, "i", 6);
        core["Qc" /* ɵɵtext */](21, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](22, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](23, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "content");
        core["Qc" /* ɵɵtext */](26, " ");
        core["Oc" /* ɵɵtemplate */](27, GroupingsComponent_div_27_Template, 6, 2, "div", 7);
        core["Qc" /* ɵɵtext */](28, " ");
        core["Oc" /* ɵɵtemplate */](29, GroupingsComponent_ng_container_29_Template, 101, 24, "ng-container", 8);
        core["Qc" /* ɵɵtext */](30, " ");
        core["Oc" /* ɵɵtemplate */](31, GroupingsComponent_ng_container_31_Template, 6, 2, "ng-container", 8);
        core["Qc" /* ɵɵtext */](32, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](9);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.searchTypeSearch ? "search" : "text");
        core["Cc" /* ɵɵpropertyInterpolate */]("placeholder", core["wc" /* ɵɵpipeBind1 */](10, 7, "searchVault"));
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.searchText);
        core["Sb" /* ɵɵadvance */](8);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](18, 9, "addItem"));
        core["Sb" /* ɵɵadvance */](10);
        core["Bc" /* ɵɵproperty */]("ngIf", (!ctx.ciphers || !ctx.ciphers.length) && !ctx.showSearching());
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.ciphers && ctx.ciphers.length && !ctx.showSearching());
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showSearching());
    } }, directives: [PopOutComponent, fesm2015_forms["c" /* DefaultValueAccessor */], autofocus_directive_AutofocusDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], BlurClickDirective, A11yTitleDirective, common["l" /* NgIf */], StopClickDirective, common["k" /* NgForOf */], cipher_row_component_CipherRowComponent, common["j" /* NgClass */], scrolling["d" /* CdkVirtualScrollViewport */], scrolling["a" /* CdkFixedSizeVirtualScroll */], cipherListVirtualScroll_directive_CipherListVirtualScroll, scrolling["c" /* CdkVirtualForOf */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_groupings_component_GroupingsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-groupings',
                templateUrl: 'groupings.component.html',
            }]
    }], function () { return [{ type: CollectionService }, { type: FolderService }, { type: StorageService }, { type: UserService }, { type: CipherService }, { type: fesm2015_router["e" /* Router */] }, { type: core["M" /* NgZone */] }, { type: services_broadcaster_service_BroadcasterService }, { type: core["j" /* ChangeDetectorRef */] }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: StateService }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: SyncService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: SearchService }, { type: common["h" /* Location */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/password-history.component.ts
var password_history_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};








class password_history_component_PasswordHistoryComponent {
    constructor(cipherService, platformUtilsService, i18nService, win) {
        this.cipherService = cipherService;
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.win = win;
        this.history = [];
    }
    ngOnInit() {
        return password_history_component_awaiter(this, void 0, void 0, function* () {
            yield this.init();
        });
    }
    copy(password) {
        const copyOptions = this.win != null ? { window: this.win } : null;
        this.platformUtilsService.copyToClipboard(password, copyOptions);
        this.platformUtilsService.showToast('info', null, this.i18nService.t('valueCopied', this.i18nService.t('password')));
    }
    init() {
        return password_history_component_awaiter(this, void 0, void 0, function* () {
            const cipher = yield this.cipherService.get(this.cipherId);
            const decCipher = yield cipher.decrypt();
            this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;
        });
    }
}
password_history_component_PasswordHistoryComponent.ɵfac = function PasswordHistoryComponent_Factory(t) { return new (t || password_history_component_PasswordHistoryComponent)(core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](Window)); };
password_history_component_PasswordHistoryComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: password_history_component_PasswordHistoryComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](password_history_component_PasswordHistoryComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: CipherService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: Window }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/vault/password-history.component.ts
var vault_password_history_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


















function PasswordHistoryComponent_div_21_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 10);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 11);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 12);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "span", 13);
    core["Qc" /* ɵɵtext */](7);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span", 14);
    core["Qc" /* ɵɵtext */](10);
    core["vc" /* ɵɵpipe */](11, "date");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 15);
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "button", 16);
    core["qc" /* ɵɵlistener */]("click", function PasswordHistoryComponent_div_21_div_4_Template_button_click_17_listener() { core["Jc" /* ɵɵrestoreView */](_r5); const h_r3 = ctx.$implicit; const ctx_r4 = core["uc" /* ɵɵnextContext */](2); return ctx_r4.copy(h_r3.password); });
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["Qc" /* ɵɵtext */](19, " ");
    core["ec" /* ɵɵelement */](20, "i", 17);
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const h_r3 = ctx.$implicit;
    core["Sb" /* ɵɵadvance */](7);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", h_r3.password, " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["xc" /* ɵɵpipeBind2 */](11, 3, h_r3.lastUsedDate, "medium"));
    core["Sb" /* ɵɵadvance */](7);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](18, 6, "copyPassword"));
} }
function PasswordHistoryComponent_div_21_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 7);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 8);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, PasswordHistoryComponent_div_21_div_4_Template, 24, 8, "div", 9);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r0.history);
} }
function PasswordHistoryComponent_div_23_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 18);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 1, "noPasswordsInList"));
} }
class vault_password_history_component_PasswordHistoryComponent extends password_history_component_PasswordHistoryComponent {
    constructor(cipherService, platformUtilsService, i18nService, location, route) {
        super(cipherService, platformUtilsService, i18nService, window);
        this.location = location;
        this.route = route;
    }
    ngOnInit() {
        return vault_password_history_component_awaiter(this, void 0, void 0, function* () {
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => vault_password_history_component_awaiter(this, void 0, void 0, function* () {
                if (params.cipherId) {
                    this.cipherId = params.cipherId;
                }
                else {
                    this.close();
                }
                yield this.init();
            }));
        });
    }
    close() {
        this.location.back();
    }
}
vault_password_history_component_PasswordHistoryComponent.ɵfac = function PasswordHistoryComponent_Factory(t) { return new (t || vault_password_history_component_PasswordHistoryComponent)(core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */])); };
vault_password_history_component_PasswordHistoryComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_password_history_component_PasswordHistoryComponent, selectors: [["app-password-history"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 26, vars: 8, consts: [[1, "left"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "center"], [1, "title"], [1, "right"], ["class", "box list full-list", 4, "ngIf"], ["class", "no-items", 4, "ngIf"], [1, "box", "list", "full-list"], [1, "box-content"], ["class", "box-content-row box-content-row-flex", 4, "ngFor", "ngForOf"], [1, "box-content-row", "box-content-row-flex"], [1, "row-main"], [1, "row-main-content"], [1, "text", "monospaced", "no-ellipsis"], [1, "detail"], [1, "action-buttons"], ["type", "button", "appStopClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-clone"], [1, "no-items"]], template: function PasswordHistoryComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "button", 1);
        core["qc" /* ɵɵlistener */]("click", function PasswordHistoryComponent_Template_button_click_4_listener() { return ctx.close(); });
        core["Qc" /* ɵɵtext */](5);
        core["vc" /* ɵɵpipe */](6, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](7, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "div", 2);
        core["Qc" /* ɵɵtext */](10, " ");
        core["jc" /* ɵɵelementStart */](11, "span", 3);
        core["Qc" /* ɵɵtext */](12);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](15, " ");
        core["ec" /* ɵɵelement */](16, "div", 4);
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "content");
        core["Qc" /* ɵɵtext */](20, " ");
        core["Oc" /* ɵɵtemplate */](21, PasswordHistoryComponent_div_21_Template, 7, 1, "div", 5);
        core["Qc" /* ɵɵtext */](22, " ");
        core["Oc" /* ɵɵtemplate */](23, PasswordHistoryComponent_div_23_Template, 6, 3, "div", 6);
        core["Qc" /* ɵɵtext */](24, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](25, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 4, "close"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 6, "passwordHistory"));
        core["Sb" /* ɵɵadvance */](9);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.history && ctx.history.length);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.history || !ctx.history.length);
    } }, directives: [BlurClickDirective, common["l" /* NgIf */], common["k" /* NgForOf */], StopClickDirective, A11yTitleDirective], pipes: [I18nPipe, common["e" /* DatePipe */]], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_password_history_component_PasswordHistoryComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-password-history',
                templateUrl: 'password-history.component.html',
            }]
    }], function () { return [{ type: CipherService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: common["h" /* Location */] }, { type: fesm2015_router["a" /* ActivatedRoute */] }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/share.component.ts
var share_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
















class share_component_ShareComponent {
    constructor(collectionService, platformUtilsService, i18nService, userService, cipherService, logService) {
        this.collectionService = collectionService;
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.userService = userService;
        this.cipherService = cipherService;
        this.logService = logService;
        this.onSharedCipher = new core["t" /* EventEmitter */]();
        this.collections = [];
        this.organizations = [];
        this.writeableCollections = [];
    }
    ngOnInit() {
        return share_component_awaiter(this, void 0, void 0, function* () {
            yield this.load();
        });
    }
    load() {
        return share_component_awaiter(this, void 0, void 0, function* () {
            const allCollections = yield this.collectionService.getAllDecrypted();
            this.writeableCollections = allCollections.map(c => c).filter(c => !c.readOnly);
            const orgs = yield this.userService.getAllOrganizations();
            this.organizations = orgs.sort(utils["a" /* Utils */].getSortFunction(this.i18nService, 'name'))
                .filter(o => o.enabled && o.status === organizationUserStatusType["a" /* OrganizationUserStatusType */].Confirmed);
            const cipherDomain = yield this.cipherService.get(this.cipherId);
            this.cipher = yield cipherDomain.decrypt();
            if (this.organizationId == null && this.organizations.length > 0) {
                this.organizationId = this.organizations[0].id;
            }
            this.filterCollections();
        });
    }
    filterCollections() {
        this.writeableCollections.forEach(c => c.checked = false);
        if (this.organizationId == null || this.writeableCollections.length === 0) {
            this.collections = [];
        }
        else {
            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);
        }
    }
    submit() {
        var _a, _b;
        return share_component_awaiter(this, void 0, void 0, function* () {
            const selectedCollectionIds = this.collections
                .filter(c => !!c.checked)
                .map(c => c.id);
            if (selectedCollectionIds.length === 0) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('selectOneCollection'));
                return;
            }
            const cipherDomain = yield this.cipherService.get(this.cipherId);
            const cipherView = yield cipherDomain.decrypt();
            const orgName = (_b = (_a = this.organizations.find(o => o.id === this.organizationId)) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : this.i18nService.t('organization');
            try {
                this.formPromise = this.cipherService.shareWithServer(cipherView, this.organizationId, selectedCollectionIds).then(() => share_component_awaiter(this, void 0, void 0, function* () {
                    this.onSharedCipher.emit();
                    this.platformUtilsService.showToast('success', null, this.i18nService.t('movedItemToOrg', cipherView.name, orgName));
                }));
                yield this.formPromise;
                return true;
            }
            catch (e) {
                this.logService.error(e);
            }
            return false;
        });
    }
    get canSave() {
        if (this.collections != null) {
            for (let i = 0; i < this.collections.length; i++) {
                if (this.collections[i].checked) {
                    return true;
                }
            }
        }
        return false;
    }
}
share_component_ShareComponent.ɵfac = function ShareComponent_Factory(t) { return new (t || share_component_ShareComponent)(core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
share_component_ShareComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: share_component_ShareComponent, inputs: { cipherId: "cipherId", organizationId: "organizationId" }, outputs: { onSharedCipher: "onSharedCipher" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](share_component_ShareComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: CollectionService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: UserService }, { type: CipherService }, { type: LogService }]; }, { cipherId: [{
            type: core["D" /* Input */]
        }], organizationId: [{
            type: core["D" /* Input */]
        }], onSharedCipher: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/vault/share.component.ts
var vault_share_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
























function ShareComponent_button_21_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "button", 12);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 13);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 14);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    const _r0 = core["Ic" /* ɵɵreference */](1);
    core["Bc" /* ɵɵproperty */]("disabled", _r0.loading || !ctx_r1.canSave);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 4, "move"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
} }
function ShareComponent_div_29_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 1, "noOrganizationsList"), " ");
} }
function ShareComponent_div_31_option_10_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 21);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r6 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r6.id);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](o_r6.name);
} }
function ShareComponent_div_31_Template(rf, ctx) { if (rf & 1) {
    const _r8 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 17);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 18);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "select", 19);
    core["qc" /* ɵɵlistener */]("ngModelChange", function ShareComponent_div_31_Template_select_ngModelChange_8_listener($event) { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r7 = core["uc" /* ɵɵnextContext */](); return ctx_r7.organizationId = $event; })("change", function ShareComponent_div_31_Template_select_change_8_listener() { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r9 = core["uc" /* ɵɵnextContext */](); return ctx_r9.filterCollections(); });
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, ShareComponent_div_31_option_10_Template, 2, 2, "option", 20);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 3, "organization"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r3.organizationId);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r3.organizations);
} }
function ShareComponent_div_38_div_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 16);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 1, "noCollectionsInList"), " ");
} }
function ShareComponent_div_38_div_8_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 24);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 25);
    core["Qc" /* ɵɵtext */](3);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "input", 26);
    core["qc" /* ɵɵlistener */]("ngModelChange", function ShareComponent_div_38_div_8_div_2_Template_input_ngModelChange_5_listener($event) { const c_r13 = ctx.$implicit; return c_r13.checked = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const c_r13 = ctx.$implicit;
    const i_r14 = ctx.index;
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "collection_", i_r14, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](c_r13.name);
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "collection_", i_r14, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Collection[", i_r14, "].Checked");
    core["Bc" /* ɵɵproperty */]("ngModel", c_r13.checked);
} }
function ShareComponent_div_38_div_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, ShareComponent_div_38_div_8_div_2_Template, 7, 5, "div", 23);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r11 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r11.collections);
} }
function ShareComponent_div_38_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 22);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, ShareComponent_div_38_div_6_Template, 6, 3, "div", 9);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, ShareComponent_div_38_div_8_Template, 4, 1, "div", 9);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 3, "collections"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r4.collections || !ctx_r4.collections.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r4.collections && ctx_r4.collections.length);
} }
class vault_share_component_ShareComponent extends share_component_ShareComponent {
    constructor(collectionService, platformUtilsService, i18nService, userService, cipherService, route, router, logService) {
        super(collectionService, platformUtilsService, i18nService, userService, cipherService, logService);
        this.route = route;
        this.router = router;
    }
    ngOnInit() {
        return vault_share_component_awaiter(this, void 0, void 0, function* () {
            this.onSharedCipher.subscribe(() => {
                this.router.navigate(['view-cipher', { cipherId: this.cipherId }]);
            });
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => vault_share_component_awaiter(this, void 0, void 0, function* () {
                this.cipherId = params.cipherId;
                yield this.load();
            }));
        });
    }
    submit() {
        const _super = Object.create(null, {
            submit: { get: () => super.submit }
        });
        return vault_share_component_awaiter(this, void 0, void 0, function* () {
            const success = yield _super.submit.call(this);
            if (success) {
                this.cancel();
            }
            return success;
        });
    }
    cancel() {
        this.router.navigate(['/view-cipher'], { replaceUrl: true, queryParams: { cipherId: this.cipher.id } });
    }
}
vault_share_component_ShareComponent.ɵfac = function ShareComponent_Factory(t) { return new (t || vault_share_component_ShareComponent)(core["dc" /* ɵɵdirectiveInject */](CollectionService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
vault_share_component_ShareComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_share_component_ShareComponent, selectors: [["app-vault-share"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 42, vars: 14, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled", 4, "ngIf"], [1, "box"], ["class", "box-content", 4, "ngIf"], [1, "box-footer"], ["class", "box", 4, "ngIf"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [1, "box-content"], [1, "box-content-row", "padded", "no-hover"], ["appBoxRow", "", 1, "box-content-row"], ["for", "organization"], ["id", "organization", "name", "OrganizationId", 3, "ngModel", "ngModelChange", "change"], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], [1, "box-header"], ["class", "box-content-row box-content-row-checkbox", "appBoxRow", "", 4, "ngFor", "ngForOf"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox"], [3, "for"], ["type", "checkbox", 3, "id", "ngModel", "name", "ngModelChange"]], template: function ShareComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function ShareComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "button", 3);
        core["qc" /* ɵɵlistener */]("click", function ShareComponent_Template_button_click_7_listener() { return ctx.cancel(); });
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["vc" /* ɵɵpipe */](16, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 6);
        core["Qc" /* ɵɵtext */](20, " ");
        core["Oc" /* ɵɵtemplate */](21, ShareComponent_button_21_Template, 8, 6, "button", 7);
        core["Qc" /* ɵɵtext */](22, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](23, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "content");
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "div", 8);
        core["Qc" /* ɵɵtext */](28, " ");
        core["Oc" /* ɵɵtemplate */](29, ShareComponent_div_29_Template, 6, 3, "div", 9);
        core["Qc" /* ɵɵtext */](30, " ");
        core["Oc" /* ɵɵtemplate */](31, ShareComponent_div_31_Template, 14, 5, "div", 9);
        core["Qc" /* ɵɵtext */](32, " ");
        core["jc" /* ɵɵelementStart */](33, "div", 10);
        core["Qc" /* ɵɵtext */](34);
        core["vc" /* ɵɵpipe */](35, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](36, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](37, " ");
        core["Oc" /* ɵɵtemplate */](38, ShareComponent_div_38_Template, 10, 5, "div", 11);
        core["Qc" /* ɵɵtext */](39, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](40, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](41, " ");
    } if (rf & 2) {
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 8, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 10, "moveToOrganization"));
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.organizations && ctx.organizations.length);
        core["Sb" /* ɵɵadvance */](8);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.organizations || !ctx.organizations.length);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.organizations && ctx.organizations.length);
        core["Sb" /* ɵɵadvance */](3);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](35, 12, "moveToOrgDesc"), " ");
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.organizations && ctx.organizations.length);
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, BlurClickDirective, common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["y" /* SelectControlValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], common["k" /* NgForOf */], fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */], fesm2015_forms["a" /* CheckboxControlValueAccessor */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_share_component_ShareComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-share',
                templateUrl: 'share.component.html',
            }]
    }], function () { return [{ type: CollectionService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }, { type: UserService }, { type: CipherService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: fesm2015_router["e" /* Router */] }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/token.service.ts
class TokenService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/broadcaster.service.ts
class abstractions_broadcaster_service_BroadcasterService {
}

// CONCATENATED MODULE: ./jslib/angular/src/components/view.component.ts
var view_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

































const view_component_BroadcasterSubscriptionId = 'ViewComponent';
class view_component_ViewComponent {
    constructor(cipherService, totpService, tokenService, i18nService, cryptoService, platformUtilsService, auditService, win, broadcasterService, ngZone, changeDetectorRef, userService, eventService, apiService, passwordRepromptService, logService) {
        this.cipherService = cipherService;
        this.totpService = totpService;
        this.tokenService = tokenService;
        this.i18nService = i18nService;
        this.cryptoService = cryptoService;
        this.platformUtilsService = platformUtilsService;
        this.auditService = auditService;
        this.win = win;
        this.broadcasterService = broadcasterService;
        this.ngZone = ngZone;
        this.changeDetectorRef = changeDetectorRef;
        this.userService = userService;
        this.eventService = eventService;
        this.apiService = apiService;
        this.passwordRepromptService = passwordRepromptService;
        this.logService = logService;
        this.onEditCipher = new core["t" /* EventEmitter */]();
        this.onCloneCipher = new core["t" /* EventEmitter */]();
        this.onShareCipher = new core["t" /* EventEmitter */]();
        this.onDeletedCipher = new core["t" /* EventEmitter */]();
        this.onRestoredCipher = new core["t" /* EventEmitter */]();
        this.fieldType = fieldType["a" /* FieldType */];
        this.passwordReprompted = false;
    }
    ngOnInit() {
        this.broadcasterService.subscribe(view_component_BroadcasterSubscriptionId, (message) => {
            this.ngZone.run(() => view_component_awaiter(this, void 0, void 0, function* () {
                switch (message.command) {
                    case 'syncCompleted':
                        if (message.successfully) {
                            yield this.load();
                            this.changeDetectorRef.detectChanges();
                        }
                        break;
                }
            }));
        });
    }
    ngOnDestroy() {
        this.broadcasterService.unsubscribe(view_component_BroadcasterSubscriptionId);
        this.cleanUp();
    }
    load() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            this.cleanUp();
            const cipher = yield this.cipherService.get(this.cipherId);
            this.cipher = yield cipher.decrypt();
            this.canAccessPremium = yield this.userService.canAccessPremium();
            if (this.cipher.type === cipherType["a" /* CipherType */].Login && this.cipher.login.totp &&
                (cipher.organizationUseTotp || this.canAccessPremium)) {
                yield this.totpUpdateCode();
                const interval = this.totpService.getTimeInterval(this.cipher.login.totp);
                yield this.totpTick(interval);
                this.totpInterval = setInterval(() => view_component_awaiter(this, void 0, void 0, function* () {
                    yield this.totpTick(interval);
                }), 1000);
            }
            if (this.previousCipherId !== this.cipherId) {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientViewed, this.cipherId);
            }
            this.previousCipherId = this.cipherId;
        });
    }
    edit() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (yield this.promptPassword()) {
                this.onEditCipher.emit(this.cipher);
                return true;
            }
            return false;
        });
    }
    clone() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (yield this.promptPassword()) {
                this.onCloneCipher.emit(this.cipher);
                return true;
            }
            return false;
        });
    }
    share() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (yield this.promptPassword()) {
                this.onShareCipher.emit(this.cipher);
                return true;
            }
            return false;
        });
    }
    delete() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.promptPassword())) {
                return;
            }
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'), this.i18nService.t('deleteItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                yield this.deleteCipher();
                this.platformUtilsService.showToast('success', null, this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeletedItem' : 'deletedItem'));
                this.onDeletedCipher.emit(this.cipher);
            }
            catch (e) {
                this.logService.error(e);
            }
            return true;
        });
    }
    restore() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (!this.cipher.isDeleted) {
                return false;
            }
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('restoreItemConfirmation'), this.i18nService.t('restoreItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                yield this.restoreCipher();
                this.platformUtilsService.showToast('success', null, this.i18nService.t('restoredItem'));
                this.onRestoredCipher.emit(this.cipher);
            }
            catch (e) {
                this.logService.error(e);
            }
            return true;
        });
    }
    togglePassword() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.promptPassword())) {
                return;
            }
            this.showPassword = !this.showPassword;
            if (this.showPassword) {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledPasswordVisible, this.cipherId);
            }
        });
    }
    toggleCardNumber() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.promptPassword())) {
                return;
            }
            this.showCardNumber = !this.showCardNumber;
            if (this.showCardNumber) {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledCardCodeVisible, this.cipherId);
            }
        });
    }
    toggleCardCode() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.promptPassword())) {
                return;
            }
            this.showCardCode = !this.showCardCode;
            if (this.showCardCode) {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledCardCodeVisible, this.cipherId);
            }
        });
    }
    checkPassword() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {
                return;
            }
            this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);
            const matches = yield this.checkPasswordPromise;
            if (matches > 0) {
                this.platformUtilsService.showToast('warning', null, this.i18nService.t('passwordExposed', matches.toString()));
            }
            else {
                this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));
            }
        });
    }
    launch(uri, cipherId) {
        if (!uri.canLaunch) {
            return;
        }
        if (cipherId) {
            this.cipherService.updateLastLaunchedDate(cipherId);
        }
        this.platformUtilsService.launchUri(uri.launchUri);
    }
    copy(value, typeI18nKey, aType) {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (value == null) {
                return;
            }
            if (this.passwordRepromptService.protectedFields().includes(aType) && !(yield this.promptPassword())) {
                return;
            }
            const copyOptions = this.win != null ? { window: this.win } : null;
            this.platformUtilsService.copyToClipboard(value, copyOptions);
            this.platformUtilsService.showToast('info', null, this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));
            if (typeI18nKey === 'password') {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledHiddenFieldVisible, this.cipherId);
            }
            else if (typeI18nKey === 'securityCode') {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientCopiedCardCode, this.cipherId);
            }
            else if (aType === 'H_Field') {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientCopiedHiddenField, this.cipherId);
            }
        });
    }
    setTextDataOnDrag(event, data) {
        event.dataTransfer.setData('text', data);
    }
    downloadAttachment(attachment) {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.promptPassword())) {
                return;
            }
            const a = attachment;
            if (a.downloading) {
                return;
            }
            if (this.cipher.organizationId == null && !this.canAccessPremium) {
                this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'), this.i18nService.t('premiumRequiredDesc'));
                return;
            }
            let url;
            try {
                const attachmentDownloadResponse = yield this.apiService.getAttachmentData(this.cipher.id, attachment.id);
                url = attachmentDownloadResponse.url;
            }
            catch (e) {
                if (e instanceof errorResponse["a" /* ErrorResponse */] && e.statusCode === 404) {
                    url = attachment.url;
                }
                else if (e instanceof errorResponse["a" /* ErrorResponse */]) {
                    throw new Error(e.getSingleMessage());
                }
                else {
                    throw e;
                }
            }
            a.downloading = true;
            const response = yield fetch(new Request(url, { cache: 'no-store' }));
            if (response.status !== 200) {
                this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));
                a.downloading = false;
                return;
            }
            try {
                const buf = yield response.arrayBuffer();
                const key = attachment.key != null ? attachment.key :
                    yield this.cryptoService.getOrgKey(this.cipher.organizationId);
                const decBuf = yield this.cryptoService.decryptFromBytes(buf, key);
                this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);
            }
            catch (e) {
                this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));
            }
            a.downloading = false;
        });
    }
    deleteCipher() {
        return this.cipher.isDeleted ? this.cipherService.deleteWithServer(this.cipher.id)
            : this.cipherService.softDeleteWithServer(this.cipher.id);
    }
    restoreCipher() {
        return this.cipherService.restoreWithServer(this.cipher.id);
    }
    promptPassword() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (this.cipher.reprompt === cipherRepromptType["a" /* CipherRepromptType */].None || this.passwordReprompted) {
                return true;
            }
            return this.passwordReprompted = yield this.passwordRepromptService.showPasswordPrompt();
        });
    }
    cleanUp() {
        this.totpCode = null;
        this.cipher = null;
        this.showPassword = false;
        this.showCardNumber = false;
        this.showCardCode = false;
        this.passwordReprompted = false;
        if (this.totpInterval) {
            clearInterval(this.totpInterval);
        }
    }
    totpUpdateCode() {
        return view_component_awaiter(this, void 0, void 0, function* () {
            if (this.cipher == null || this.cipher.type !== cipherType["a" /* CipherType */].Login || this.cipher.login.totp == null) {
                if (this.totpInterval) {
                    clearInterval(this.totpInterval);
                }
                return;
            }
            this.totpCode = yield this.totpService.getCode(this.cipher.login.totp);
            if (this.totpCode != null) {
                if (this.totpCode.length > 4) {
                    const half = Math.floor(this.totpCode.length / 2);
                    this.totpCodeFormatted = this.totpCode.substring(0, half) + ' ' + this.totpCode.substring(half);
                }
                else {
                    this.totpCodeFormatted = this.totpCode;
                }
            }
            else {
                this.totpCodeFormatted = null;
                if (this.totpInterval) {
                    clearInterval(this.totpInterval);
                }
            }
        });
    }
    totpTick(intervalSeconds) {
        return view_component_awaiter(this, void 0, void 0, function* () {
            const epoch = Math.round(new Date().getTime() / 1000.0);
            const mod = epoch % intervalSeconds;
            this.totpSec = intervalSeconds - mod;
            this.totpDash = +(Math.round((((78.6 / intervalSeconds) * mod) + 'e+2')) + 'e-2');
            this.totpLow = this.totpSec <= 7;
            if (mod === 0) {
                yield this.totpUpdateCode();
            }
        });
    }
}
view_component_ViewComponent.ɵfac = function ViewComponent_Factory(t) { return new (t || view_component_ViewComponent)(core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](TotpService), core["dc" /* ɵɵdirectiveInject */](TokenService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](AuditService), core["dc" /* ɵɵdirectiveInject */](Window), core["dc" /* ɵɵdirectiveInject */](abstractions_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](EventService), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](passwordReprompt_service_PasswordRepromptService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
view_component_ViewComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: view_component_ViewComponent, inputs: { cipherId: "cipherId" }, outputs: { onEditCipher: "onEditCipher", onCloneCipher: "onCloneCipher", onShareCipher: "onShareCipher", onDeletedCipher: "onDeletedCipher", onRestoredCipher: "onRestoredCipher" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](view_component_ViewComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: CipherService }, { type: TotpService }, { type: TokenService }, { type: I18nService }, { type: CryptoService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: AuditService }, { type: Window }, { type: abstractions_broadcaster_service_BroadcasterService }, { type: core["M" /* NgZone */] }, { type: core["j" /* ChangeDetectorRef */] }, { type: UserService }, { type: EventService }, { type: ApiService }, { type: passwordReprompt_service_PasswordRepromptService }, { type: LogService }]; }, { cipherId: [{
            type: core["D" /* Input */]
        }], onEditCipher: [{
            type: core["O" /* Output */]
        }], onCloneCipher: [{
            type: core["O" /* Output */]
        }], onShareCipher: [{
            type: core["O" /* Output */]
        }], onDeletedCipher: [{
            type: core["O" /* Output */]
        }], onRestoredCipher: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/view-custom-fields.component.ts
var view_custom_fields_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







class view_custom_fields_component_ViewCustomFieldsComponent {
    constructor(eventService) {
        this.eventService = eventService;
        this.fieldType = fieldType["a" /* FieldType */];
    }
    toggleFieldValue(field) {
        return view_custom_fields_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.promptPassword())) {
                return;
            }
            const f = field;
            f.showValue = !f.showValue;
            if (f.showValue) {
                this.eventService.collect(eventType["a" /* EventType */].Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);
            }
        });
    }
}
view_custom_fields_component_ViewCustomFieldsComponent.ɵfac = function ViewCustomFieldsComponent_Factory(t) { return new (t || view_custom_fields_component_ViewCustomFieldsComponent)(core["dc" /* ɵɵdirectiveInject */](EventService)); };
view_custom_fields_component_ViewCustomFieldsComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: view_custom_fields_component_ViewCustomFieldsComponent, inputs: { cipher: "cipher", promptPassword: "promptPassword", copy: "copy" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](view_custom_fields_component_ViewCustomFieldsComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: EventService }]; }, { cipher: [{
            type: core["D" /* Input */]
        }], promptPassword: [{
            type: core["D" /* Input */]
        }], copy: [{
            type: core["D" /* Input */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/vault/view-custom-fields.component.ts









function ViewCustomFieldsComponent_div_8_div_7_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const field_r1 = core["uc" /* ɵɵnextContext */]().$implicit;
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", field_r1.value || "\u00A0", " ");
} }
function ViewCustomFieldsComponent_div_8_div_9_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 10);
    core["Qc" /* ɵɵtext */](3);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 11);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const field_r1 = core["uc" /* ɵɵnextContext */]().$implicit;
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !field_r1.showValue);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](field_r1.value);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", field_r1.showValue);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](field_r1.maskedValue);
} }
function ViewCustomFieldsComponent_div_8_div_11_i_2_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 15);
} }
function ViewCustomFieldsComponent_div_8_div_11_i_4_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 16);
} }
function ViewCustomFieldsComponent_div_8_div_11_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, ViewCustomFieldsComponent_div_8_div_11_i_2_Template, 1, 0, "i", 12);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, ViewCustomFieldsComponent_div_8_div_11_i_4_Template, 1, 0, "i", 13);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "span", 14);
    core["Qc" /* ɵɵtext */](7);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const field_r1 = core["uc" /* ɵɵnextContext */]().$implicit;
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", field_r1.value === "true");
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", field_r1.value !== "true");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](field_r1.value);
} }
function ViewCustomFieldsComponent_div_8_div_13_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 17);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 18);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ec" /* ɵɵelement */](4, "i", 19);
    core["vc" /* ɵɵpipe */](5, "i18n");
    core["Qc" /* ɵɵtext */](6, " ");
    core["jc" /* ɵɵelementStart */](7, "span", 14);
    core["Qc" /* ɵɵtext */](8);
    core["vc" /* ɵɵpipe */](9, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "span");
    core["Qc" /* ɵɵtext */](13);
    core["vc" /* ɵɵpipe */](14, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const field_r1 = core["uc" /* ɵɵnextContext */]().$implicit;
    const ctx_r5 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](4);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](5, 3, "linkedValue"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 5, "linkedValue"));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](14, 7, ctx_r5.cipher.linkedFieldI18nKey(field_r1.linkedId)));
} }
const view_custom_fields_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
function ViewCustomFieldsComponent_div_8_button_18_Template(rf, ctx) { if (rf & 1) {
    const _r16 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 20);
    core["qc" /* ɵɵlistener */]("click", function ViewCustomFieldsComponent_div_8_button_18_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r16); const field_r1 = core["uc" /* ɵɵnextContext */]().$implicit; const ctx_r14 = core["uc" /* ɵɵnextContext */](); return ctx_r14.toggleFieldValue(field_r1); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 21);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const field_r1 = core["uc" /* ɵɵnextContext */]().$implicit;
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 2, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](4, view_custom_fields_component_c0, !field_r1.showValue, field_r1.showValue));
} }
function ViewCustomFieldsComponent_div_8_button_20_Template(rf, ctx) { if (rf & 1) {
    const _r20 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 20);
    core["qc" /* ɵɵlistener */]("click", function ViewCustomFieldsComponent_div_8_button_20_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r20); const field_r1 = core["uc" /* ɵɵnextContext */]().$implicit; const ctx_r18 = core["uc" /* ɵɵnextContext */](); return ctx_r18.copy(field_r1.value, "value", field_r1.type === ctx_r18.fieldType.Hidden ? "H_Field" : "Field"); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 22);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 1, "copyValue"));
} }
function ViewCustomFieldsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 3);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 4);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "span", 5);
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["Oc" /* ɵɵtemplate */](7, ViewCustomFieldsComponent_div_8_div_7_Template, 2, 1, "div", 6);
    core["Qc" /* ɵɵtext */](8, " ");
    core["Oc" /* ɵɵtemplate */](9, ViewCustomFieldsComponent_div_8_div_9_Template, 8, 4, "div", 6);
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, ViewCustomFieldsComponent_div_8_div_11_Template, 9, 3, "div", 6);
    core["Qc" /* ɵɵtext */](12, " ");
    core["Oc" /* ɵɵtemplate */](13, ViewCustomFieldsComponent_div_8_div_13_Template, 16, 9, "div", 7);
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "div", 8);
    core["Qc" /* ɵɵtext */](17, " ");
    core["Oc" /* ɵɵtemplate */](18, ViewCustomFieldsComponent_div_8_button_18_Template, 5, 7, "button", 9);
    core["Qc" /* ɵɵtext */](19, " ");
    core["Oc" /* ɵɵtemplate */](20, ViewCustomFieldsComponent_div_8_button_20_Template, 5, 3, "button", 9);
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const field_r1 = ctx.$implicit;
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](field_r1.name);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", field_r1.type === ctx_r0.fieldType.Text);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", field_r1.type === ctx_r0.fieldType.Hidden);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", field_r1.type === ctx_r0.fieldType.Boolean);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", field_r1.type === ctx_r0.fieldType.Linked);
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngIf", field_r1.type === ctx_r0.fieldType.Hidden && ctx_r0.cipher.viewPassword);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", field_r1.value && field_r1.type !== ctx_r0.fieldType.Boolean && field_r1.type !== ctx_r0.fieldType.Linked && !(field_r1.type === ctx_r0.fieldType.Hidden && !ctx_r0.cipher.viewPassword));
} }
class vault_view_custom_fields_component_ViewCustomFieldsComponent extends view_custom_fields_component_ViewCustomFieldsComponent {
    constructor(eventService) {
        super(eventService);
    }
}
vault_view_custom_fields_component_ViewCustomFieldsComponent.ɵfac = function ViewCustomFieldsComponent_Factory(t) { return new (t || vault_view_custom_fields_component_ViewCustomFieldsComponent)(core["dc" /* ɵɵdirectiveInject */](EventService)); };
vault_view_custom_fields_component_ViewCustomFieldsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_view_custom_fields_component_ViewCustomFieldsComponent, selectors: [["app-vault-view-custom-fields"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 12, vars: 4, consts: [[1, "box-header"], [1, "box-content"], ["class", "box-content-row box-content-row-flex", 4, "ngFor", "ngForOf"], [1, "box-content-row", "box-content-row-flex"], [1, "row-main"], [1, "row-label"], [4, "ngIf"], ["class", "box-content-row-flex", 4, "ngIf"], [1, "action-buttons"], ["type", "button", "class", "row-btn", "appStopClick", "", 3, "appA11yTitle", "click", 4, "ngIf"], [1, "monospaced", "show-whitespace", 3, "hidden"], [1, "monospaced", 3, "hidden"], ["class", "fa fa-check-square-o", "aria-hidden", "true", 4, "ngIf"], ["class", "fa fa-square-o", "aria-hidden", "true", 4, "ngIf"], [1, "sr-only"], ["aria-hidden", "true", 1, "fa", "fa-check-square-o"], ["aria-hidden", "true", 1, "fa", "fa-square-o"], [1, "box-content-row-flex"], [1, "icon", "icon-small"], ["aria-hidden", "true", 1, "fa", "fa-link", 3, "appA11yTitle"], ["type", "button", "appStopClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-clone"]], template: function ViewCustomFieldsComponent_Template(rf, ctx) { if (rf & 1) {
        core["hc" /* ɵɵelementContainerStart */](0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3);
        core["vc" /* ɵɵpipe */](4, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "div", 1);
        core["Qc" /* ɵɵtext */](7, " ");
        core["Oc" /* ɵɵtemplate */](8, ViewCustomFieldsComponent_div_8_Template, 23, 7, "div", 2);
        core["Qc" /* ɵɵtext */](9, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["gc" /* ɵɵelementContainerEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](3);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 2, "customFields"), " ");
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngForOf", ctx.cipher.fields);
    } }, directives: [common["k" /* NgForOf */], common["l" /* NgIf */], A11yTitleDirective, StopClickDirective, common["j" /* NgClass */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_view_custom_fields_component_ViewCustomFieldsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-view-custom-fields',
                templateUrl: 'view-custom-fields.component.html',
            }]
    }], function () { return [{ type: EventService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/vault/view.component.ts
var vault_view_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



















































function ViewComponent_div_16_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r4 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 1);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_div_16_button_2_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r4); const ctx_r3 = core["uc" /* ɵɵnextContext */](2); return ctx_r3.edit(); });
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "edit"));
} }
function ViewComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 6);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, ViewComponent_div_16_button_2_Template, 3, 3, "button", 7);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r0.cipher.isDeleted);
} }
function ViewComponent_content_19_div_19_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r23 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 26);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 27);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "span", 28);
    core["qc" /* ɵɵlistener */]("dragstart", function ViewComponent_content_19_div_19_div_2_Template_span_dragstart_4_listener($event) { core["Jc" /* ɵɵrestoreView */](_r23); const ctx_r22 = core["uc" /* ɵɵnextContext */](3); return ctx_r22.setTextDataOnDrag($event, ctx_r22.cipher.login.username); });
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ec" /* ɵɵelement */](8, "input", 13);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "div", 29);
    core["Qc" /* ɵɵtext */](12, " ");
    core["jc" /* ɵɵelementStart */](13, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_19_div_2_Template_button_click_13_listener() { core["Jc" /* ɵɵrestoreView */](_r23); const ctx_r24 = core["uc" /* ɵɵnextContext */](3); return ctx_r24.copy(ctx_r24.cipher.login.username, "username", "Username"); });
    core["vc" /* ɵɵpipe */](14, "i18n");
    core["Qc" /* ɵɵtext */](15, " ");
    core["ec" /* ɵɵelement */](16, "i", 31);
    core["Qc" /* ɵɵtext */](17, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r19 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](6, 3, "username"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("value", ctx_r19.cipher.login.username);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](14, 5, "copyUsername"));
} }
function ViewComponent_content_19_div_19_div_4_button_17_Template(rf, ctx) { if (rf & 1) {
    const _r30 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 36, 37);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_19_div_4_button_17_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r30); const ctx_r29 = core["uc" /* ɵɵnextContext */](4); return ctx_r29.checkPassword(); });
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["Qc" /* ɵɵtext */](3, " ");
    core["ec" /* ɵɵelement */](4, "i", 38);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 39);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const _r28 = core["Ic" /* ɵɵreference */](1);
    const ctx_r25 = core["uc" /* ɵɵnextContext */](4);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](2, 5, "checkPassword"));
    core["Bc" /* ɵɵproperty */]("appApiAction", ctx_r25.checkPasswordPromise)("disabled", _r28.loading);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("hidden", _r28.loading);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !_r28.loading);
} }
const view_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
function ViewComponent_content_19_div_19_div_4_button_19_Template(rf, ctx) { if (rf & 1) {
    const _r32 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_19_div_4_button_19_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r32); const ctx_r31 = core["uc" /* ɵɵnextContext */](4); return ctx_r31.togglePassword(); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 40);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r26 = core["uc" /* ɵɵnextContext */](4);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 2, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](4, view_component_c0, !ctx_r26.showPassword, ctx_r26.showPassword));
} }
function ViewComponent_content_19_div_19_div_4_button_21_Template(rf, ctx) { if (rf & 1) {
    const _r34 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_19_div_4_button_21_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r34); const ctx_r33 = core["uc" /* ɵɵnextContext */](4); return ctx_r33.copy(ctx_r33.cipher.login.password, "password", "Password"); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 31);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 1, "copyPassword"));
} }
function ViewComponent_content_19_div_19_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r36 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 26);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 27);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "span", 28);
    core["qc" /* ɵɵlistener */]("dragstart", function ViewComponent_content_19_div_19_div_4_Template_span_dragstart_4_listener($event) { core["Jc" /* ɵɵrestoreView */](_r36); const ctx_r35 = core["uc" /* ɵɵnextContext */](3); return ctx_r35.setTextDataOnDrag($event, ctx_r35.cipher.login.password); });
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 32);
    core["Qc" /* ɵɵtext */](9);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ec" /* ɵɵelement */](11, "div", 33);
    core["vc" /* ɵɵpipe */](12, "colorPassword");
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 29);
    core["Qc" /* ɵɵtext */](16, " ");
    core["Oc" /* ɵɵtemplate */](17, ViewComponent_content_19_div_19_div_4_button_17_Template, 8, 7, "button", 34);
    core["Qc" /* ɵɵtext */](18, " ");
    core["Oc" /* ɵɵtemplate */](19, ViewComponent_content_19_div_19_div_4_button_19_Template, 5, 7, "button", 35);
    core["Qc" /* ɵɵtext */](20, " ");
    core["Oc" /* ɵɵtemplate */](21, ViewComponent_content_19_div_19_div_4_button_21_Template, 5, 3, "button", 35);
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r20 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 8, "password"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("hidden", ctx_r20.showPassword);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r20.cipher.login.maskedPassword, "");
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !ctx_r20.showPassword)("innerHTML", core["wc" /* ɵɵpipeBind1 */](12, 10, ctx_r20.cipher.login.password), core["Kc" /* ɵɵsanitizeHtml */]);
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r20.cipher.viewPassword);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r20.cipher.viewPassword);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r20.cipher.viewPassword);
} }
const view_component_c1 = function (a0) { return { "low": a0 }; };
const _c2 = function (a0) { return { "stroke-dashoffset.px": a0 }; };
function ViewComponent_content_19_div_19_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r38 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 41);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 27);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "span", 28);
    core["qc" /* ɵɵlistener */]("dragstart", function ViewComponent_content_19_div_19_div_6_Template_span_dragstart_4_listener($event) { core["Jc" /* ɵɵrestoreView */](_r38); const ctx_r37 = core["uc" /* ɵɵnextContext */](3); return ctx_r37.setTextDataOnDrag($event, ctx_r37.totpCode); });
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "span", 42);
    core["Qc" /* ɵɵtext */](9);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "span", 43);
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "span", 44);
    core["Qc" /* ɵɵtext */](15);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["tc" /* ɵɵnamespaceSVG */]();
    core["jc" /* ɵɵelementStart */](17, "svg");
    core["Qc" /* ɵɵtext */](18, " ");
    core["jc" /* ɵɵelementStart */](19, "g");
    core["Qc" /* ɵɵtext */](20, " ");
    core["ec" /* ɵɵelement */](21, "circle", 45);
    core["Qc" /* ɵɵtext */](22, " ");
    core["ec" /* ɵɵelement */](23, "circle", 46);
    core["Qc" /* ɵɵtext */](24, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](25, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](26, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](27, " ");
    core["sc" /* ɵɵnamespaceHTML */]();
    core["jc" /* ɵɵelementStart */](28, "div", 29);
    core["Qc" /* ɵɵtext */](29, " ");
    core["jc" /* ɵɵelementStart */](30, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_19_div_6_Template_button_click_30_listener() { core["Jc" /* ɵɵrestoreView */](_r38); const ctx_r39 = core["uc" /* ɵɵnextContext */](3); return ctx_r39.copy(ctx_r39.totpCode, "verificationCodeTotp", "TOTP"); });
    core["vc" /* ɵɵpipe */](31, "i18n");
    core["Qc" /* ɵɵtext */](32, " ");
    core["ec" /* ɵɵelement */](33, "i", 31);
    core["Qc" /* ɵɵtext */](34, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](35, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](36, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r21 = core["uc" /* ɵɵnextContext */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](10, view_component_c1, ctx_r21.totpLow));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 6, "verificationCodeTotp"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r21.totpCodeFormatted);
    core["Sb" /* ɵɵadvance */](6);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r21.totpSec);
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngStyle", core["Fc" /* ɵɵpureFunction1 */](12, _c2, ctx_r21.totpDash));
    core["Sb" /* ɵɵadvance */](9);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](31, 8, "copyVerificationCode"));
} }
function ViewComponent_content_19_div_19_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, ViewComponent_content_19_div_19_div_2_Template, 20, 7, "div", 24);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, ViewComponent_content_19_div_19_div_4_Template, 24, 12, "div", 24);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, ViewComponent_content_19_div_19_div_6_Template, 37, 14, "div", 25);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r5.cipher.login.username);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r5.cipher.login.password);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r5.cipher.login.totp && ctx_r5.totpCode);
} }
function ViewComponent_content_19_div_21_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r40 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "cardholderName"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r40.cipher.card.cardholderName, " ");
} }
function ViewComponent_content_19_div_21_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r46 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 26);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 27);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "span", 12);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "span", 32);
    core["Qc" /* ɵɵtext */](9);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "span", 32);
    core["Qc" /* ɵɵtext */](12);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 29);
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_21_div_4_Template_button_click_17_listener() { core["Jc" /* ɵɵrestoreView */](_r46); const ctx_r45 = core["uc" /* ɵɵnextContext */](3); return ctx_r45.toggleCardNumber(); });
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["Qc" /* ɵɵtext */](19, " ");
    core["ec" /* ɵɵelement */](20, "i", 40);
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["jc" /* ɵɵelementStart */](23, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_21_div_4_Template_button_click_23_listener() { core["Jc" /* ɵɵrestoreView */](_r46); const ctx_r47 = core["uc" /* ɵɵnextContext */](3); return ctx_r47.copy(ctx_r47.cipher.card.number, "number", "Card Number"); });
    core["vc" /* ɵɵpipe */](24, "i18n");
    core["Qc" /* ɵɵtext */](25, " ");
    core["ec" /* ɵɵelement */](26, "i", 31);
    core["Qc" /* ɵɵtext */](27, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r41 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 8, "number"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("hidden", ctx_r41.showCardNumber);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r41.cipher.card.maskedNumber);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !ctx_r41.showCardNumber);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r41.cipher.card.number);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](18, 10, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](14, view_component_c0, !ctx_r41.showCardNumber, ctx_r41.showCardNumber));
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](24, 12, "copyNumber"));
} }
function ViewComponent_content_19_div_21_div_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r42 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "brand"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r42.cipher.card.brand, " ");
} }
function ViewComponent_content_19_div_21_div_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r43 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "expiration"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r43.cipher.card.expiration, " ");
} }
function ViewComponent_content_19_div_21_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r49 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 26);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 27);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "span", 12);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "span", 32);
    core["Qc" /* ɵɵtext */](9);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["jc" /* ɵɵelementStart */](11, "span", 32);
    core["Qc" /* ɵɵtext */](12);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["jc" /* ɵɵelementStart */](15, "div", 29);
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_21_div_10_Template_button_click_17_listener() { core["Jc" /* ɵɵrestoreView */](_r49); const ctx_r48 = core["uc" /* ɵɵnextContext */](3); return ctx_r48.toggleCardCode(); });
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["Qc" /* ɵɵtext */](19, " ");
    core["ec" /* ɵɵelement */](20, "i", 40);
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["jc" /* ɵɵelementStart */](23, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_21_div_10_Template_button_click_23_listener() { core["Jc" /* ɵɵrestoreView */](_r49); const ctx_r50 = core["uc" /* ɵɵnextContext */](3); return ctx_r50.copy(ctx_r50.cipher.card.code, "securityCode", "Security Code"); });
    core["vc" /* ɵɵpipe */](24, "i18n");
    core["Qc" /* ɵɵtext */](25, " ");
    core["ec" /* ɵɵelement */](26, "i", 31);
    core["Qc" /* ɵɵtext */](27, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r44 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 8, "securityCode"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("hidden", ctx_r44.showCardCode);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r44.cipher.card.maskedCode);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !ctx_r44.showCardCode);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r44.cipher.card.code);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](18, 10, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](14, view_component_c0, !ctx_r44.showCardCode, ctx_r44.showCardCode));
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](24, 12, "copySecurityCode"));
} }
function ViewComponent_content_19_div_21_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, ViewComponent_content_19_div_21_div_2_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, ViewComponent_content_19_div_21_div_4_Template, 30, 17, "div", 24);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, ViewComponent_content_19_div_21_div_6_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, ViewComponent_content_19_div_21_div_8_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, ViewComponent_content_19_div_21_div_10_Template, 30, 17, "div", 24);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r6 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r6.cipher.card.cardholderName);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r6.cipher.card.number);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r6.cipher.card.brand);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r6.cipher.card.expiration);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r6.cipher.card.code);
} }
function ViewComponent_content_19_div_23_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r51 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "identityName"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r51.cipher.identity.fullName, " ");
} }
function ViewComponent_content_19_div_23_div_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r52 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "username"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r52.cipher.identity.username, " ");
} }
function ViewComponent_content_19_div_23_div_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r53 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "company"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r53.cipher.identity.company, " ");
} }
function ViewComponent_content_19_div_23_div_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r54 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "ssn"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r54.cipher.identity.ssn, " ");
} }
function ViewComponent_content_19_div_23_div_10_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r55 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "passportNumber"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r55.cipher.identity.passportNumber, " ");
} }
function ViewComponent_content_19_div_23_div_12_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r56 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "licenseNumber"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r56.cipher.identity.licenseNumber, " ");
} }
function ViewComponent_content_19_div_23_div_14_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r57 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "email"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r57.cipher.identity.email, " ");
} }
function ViewComponent_content_19_div_23_div_16_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r58 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "phone"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r58.cipher.identity.phone, " ");
} }
function ViewComponent_content_19_div_23_div_18_div_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r60 = core["uc" /* ɵɵnextContext */](4);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r60.cipher.identity.address1);
} }
function ViewComponent_content_19_div_23_div_18_div_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r61 = core["uc" /* ɵɵnextContext */](4);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r61.cipher.identity.address2);
} }
function ViewComponent_content_19_div_23_div_18_div_10_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r62 = core["uc" /* ɵɵnextContext */](4);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r62.cipher.identity.address3);
} }
function ViewComponent_content_19_div_23_div_18_div_12_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r63 = core["uc" /* ɵɵnextContext */](4);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r63.cipher.identity.fullAddressPart2);
} }
function ViewComponent_content_19_div_23_div_18_div_14_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r64 = core["uc" /* ɵɵnextContext */](4);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r64.cipher.identity.country);
} }
function ViewComponent_content_19_div_23_div_18_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 12);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, ViewComponent_content_19_div_23_div_18_div_6_Template, 2, 1, "div", 5);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, ViewComponent_content_19_div_23_div_18_div_8_Template, 2, 1, "div", 5);
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, ViewComponent_content_19_div_23_div_18_div_10_Template, 2, 1, "div", 5);
    core["Qc" /* ɵɵtext */](11, " ");
    core["Oc" /* ɵɵtemplate */](12, ViewComponent_content_19_div_23_div_18_div_12_Template, 2, 1, "div", 5);
    core["Qc" /* ɵɵtext */](13, " ");
    core["Oc" /* ɵɵtemplate */](14, ViewComponent_content_19_div_23_div_18_div_14_Template, 2, 1, "div", 5);
    core["Qc" /* ɵɵtext */](15, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r59 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 6, "address"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r59.cipher.identity.address1);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r59.cipher.identity.address2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r59.cipher.identity.address3);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r59.cipher.identity.fullAddressPart2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r59.cipher.identity.country);
} }
function ViewComponent_content_19_div_23_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, ViewComponent_content_19_div_23_div_2_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, ViewComponent_content_19_div_23_div_4_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, ViewComponent_content_19_div_23_div_6_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, ViewComponent_content_19_div_23_div_8_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, ViewComponent_content_19_div_23_div_10_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](11, " ");
    core["Oc" /* ɵɵtemplate */](12, ViewComponent_content_19_div_23_div_12_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](13, " ");
    core["Oc" /* ɵɵtemplate */](14, ViewComponent_content_19_div_23_div_14_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](15, " ");
    core["Oc" /* ɵɵtemplate */](16, ViewComponent_content_19_div_23_div_16_Template, 6, 4, "div", 47);
    core["Qc" /* ɵɵtext */](17, " ");
    core["Oc" /* ɵɵtemplate */](18, ViewComponent_content_19_div_23_div_18_Template, 16, 8, "div", 47);
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r7 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.fullName);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.username);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.company);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.ssn);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.passportNumber);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.licenseNumber);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.email);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.phone);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r7.cipher.identity.address1 || ctx_r7.cipher.identity.city || ctx_r7.cipher.identity.country);
} }
function ViewComponent_content_19_div_27_div_4_span_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "span", 12);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "uri"));
} }
function ViewComponent_content_19_div_27_div_4_span_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "span", 12);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "website"));
} }
function ViewComponent_content_19_div_27_div_4_button_16_Template(rf, ctx) { if (rf & 1) {
    const _r73 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_27_div_4_button_16_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r73); const u_r66 = core["uc" /* ɵɵnextContext */]().$implicit; const ctx_r71 = core["uc" /* ɵɵnextContext */](3); return ctx_r71.launch(u_r66); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 51);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 1, "launch"));
} }
function ViewComponent_content_19_div_27_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r75 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 26);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 27);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, ViewComponent_content_19_div_27_div_4_span_4_Template, 3, 3, "span", 49);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, ViewComponent_content_19_div_27_div_4_span_6_Template, 3, 3, "span", 49);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "span", 50);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ec" /* ɵɵelement */](10, "input", 13);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "div", 29);
    core["Qc" /* ɵɵtext */](15, " ");
    core["Oc" /* ɵɵtemplate */](16, ViewComponent_content_19_div_27_div_4_button_16_Template, 5, 3, "button", 35);
    core["Qc" /* ɵɵtext */](17, " ");
    core["jc" /* ɵɵelementStart */](18, "button", 30);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_27_div_4_Template_button_click_18_listener() { core["Jc" /* ɵɵrestoreView */](_r75); const u_r66 = ctx.$implicit; const ctx_r74 = core["uc" /* ɵɵnextContext */](3); return ctx_r74.copy(u_r66.uri, u_r66.isWebsite ? "website" : "uri", "URI"); });
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["Qc" /* ɵɵtext */](20, " ");
    core["ec" /* ɵɵelement */](21, "i", 31);
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](23, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](24, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const u_r66 = ctx.$implicit;
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", !u_r66.isWebsite);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", u_r66.isWebsite);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", u_r66.uri);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("value", u_r66.hostOrUri);
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngIf", u_r66.canLaunch);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](19, 6, "copyUri"));
} }
function ViewComponent_content_19_div_27_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 10);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, ViewComponent_content_19_div_27_div_4_Template, 25, 8, "div", 48);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r8 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r8.cipher.login.uris);
} }
function ViewComponent_content_19_div_29_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 9);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 10);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 11);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ec" /* ɵɵelement */](10, "textarea", 52);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r9 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 2, "notes"), " ");
    core["Sb" /* ɵɵadvance */](7);
    core["Bc" /* ɵɵproperty */]("value", ctx_r9.cipher.notes);
} }
function ViewComponent_content_19_div_31_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "app-vault-view-custom-fields", 53);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r10 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("cipher", ctx_r10.cipher)("promptPassword", ctx_r10.promptPassword.bind(ctx_r10))("copy", ctx_r10.copy.bind(ctx_r10));
} }
function ViewComponent_content_19_div_33_button_8_i_8_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 59);
} }
function ViewComponent_content_19_div_33_button_8_i_10_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 60);
} }
function ViewComponent_content_19_div_33_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r81 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 55);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_div_33_button_8_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r81); const attachment_r77 = ctx.$implicit; const ctx_r80 = core["uc" /* ɵɵnextContext */](3); return ctx_r80.downloadAttachment(attachment_r77); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "span", 27);
    core["Qc" /* ɵɵtext */](3);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "small", 56);
    core["Qc" /* ɵɵtext */](6);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, ViewComponent_content_19_div_33_button_8_i_8_Template, 1, 0, "i", 57);
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, ViewComponent_content_19_div_33_button_8_i_10_Template, 1, 0, "i", 58);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const attachment_r77 = ctx.$implicit;
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](attachment_r77.fileName);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](attachment_r77.sizeName);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !attachment_r77.downloading);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", attachment_r77.downloading);
} }
function ViewComponent_content_19_div_33_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 9);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 10);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, ViewComponent_content_19_div_33_button_8_Template, 12, 4, "button", 54);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r11 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](4, 2, "attachments"), " ");
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r11.cipher.attachments);
} }
function ViewComponent_content_19_button_39_Template(rf, ctx) { if (rf & 1) {
    const _r83 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_button_39_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r83); const ctx_r82 = core["uc" /* ɵɵnextContext */](2); return ctx_r82.fillCipher(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 61);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 62);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 63);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span");
    core["Qc" /* ɵɵtext */](10);
    core["vc" /* ɵɵpipe */](11, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](10);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 1, "autoFill"));
} }
function ViewComponent_content_19_button_41_Template(rf, ctx) { if (rf & 1) {
    const _r85 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_button_41_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r85); const ctx_r84 = core["uc" /* ɵɵnextContext */](2); return ctx_r84.fillCipherAndSave(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 61);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 62);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 64);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span");
    core["Qc" /* ɵɵtext */](10);
    core["vc" /* ɵɵpipe */](11, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](10);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 1, "autoFillAndSave"));
} }
function ViewComponent_content_19_button_43_Template(rf, ctx) { if (rf & 1) {
    const _r87 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_button_43_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r87); const ctx_r86 = core["uc" /* ɵɵnextContext */](2); return ctx_r86.clone(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 61);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 62);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 65);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span");
    core["Qc" /* ɵɵtext */](10);
    core["vc" /* ɵɵpipe */](11, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](10);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 1, "cloneItem"));
} }
function ViewComponent_content_19_button_45_Template(rf, ctx) { if (rf & 1) {
    const _r89 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_button_45_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r89); const ctx_r88 = core["uc" /* ɵɵnextContext */](2); return ctx_r88.share(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 61);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 62);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 66);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span");
    core["Qc" /* ɵɵtext */](10);
    core["vc" /* ɵɵpipe */](11, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](10);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 1, "moveToOrganization"));
} }
function ViewComponent_content_19_button_47_Template(rf, ctx) { if (rf & 1) {
    const _r91 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_button_47_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r91); const ctx_r90 = core["uc" /* ɵɵnextContext */](2); return ctx_r90.restore(); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 61);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 62);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "i", 67);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "span");
    core["Qc" /* ɵɵtext */](10);
    core["vc" /* ɵɵpipe */](11, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](10);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 1, "restoreItem"));
} }
function ViewComponent_content_19_div_78_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "b", 23);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "date");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r17 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](4, 2, "datePasswordUpdated"), ":");
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["xc" /* ɵɵpipeBind2 */](6, 4, ctx_r17.cipher.passwordRevisionDisplayDate, "medium"), " ");
} }
const _c3 = function (a0) { return { cipherId: a0 }; };
function ViewComponent_content_19_div_80_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "b", 23);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "a", 68);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["Qc" /* ɵɵtext */](8);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r18 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](4, 4, "passwordHistory"), ":");
    core["Sb" /* ɵɵadvance */](3);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](7, 6, "passwordHistory"));
    core["Bc" /* ɵɵproperty */]("queryParams", core["Fc" /* ɵɵpureFunction1 */](8, _c3, ctx_r18.cipher.id));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r18.cipher.passwordHistory.length, " ");
} }
function ViewComponent_content_19_Template(rf, ctx) { if (rf & 1) {
    const _r93 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "content");
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 8);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 9);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 10);
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "div", 11);
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "span", 12);
    core["Qc" /* ɵɵtext */](13);
    core["vc" /* ɵɵpipe */](14, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["ec" /* ɵɵelement */](16, "input", 13);
    core["Qc" /* ɵɵtext */](17, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](18, " ");
    core["Oc" /* ɵɵtemplate */](19, ViewComponent_content_19_div_19_Template, 8, 3, "div", 5);
    core["Qc" /* ɵɵtext */](20, " ");
    core["Oc" /* ɵɵtemplate */](21, ViewComponent_content_19_div_21_Template, 12, 5, "div", 5);
    core["Qc" /* ɵɵtext */](22, " ");
    core["Oc" /* ɵɵtemplate */](23, ViewComponent_content_19_div_23_Template, 20, 9, "div", 5);
    core["Qc" /* ɵɵtext */](24, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](25, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](26, " ");
    core["Oc" /* ɵɵtemplate */](27, ViewComponent_content_19_div_27_Template, 7, 1, "div", 14);
    core["Qc" /* ɵɵtext */](28, " ");
    core["Oc" /* ɵɵtemplate */](29, ViewComponent_content_19_div_29_Template, 14, 4, "div", 14);
    core["Qc" /* ɵɵtext */](30, " ");
    core["Oc" /* ɵɵtemplate */](31, ViewComponent_content_19_div_31_Template, 4, 3, "div", 14);
    core["Qc" /* ɵɵtext */](32, " ");
    core["Oc" /* ɵɵtemplate */](33, ViewComponent_content_19_div_33_Template, 11, 4, "div", 14);
    core["Qc" /* ɵɵtext */](34, " ");
    core["jc" /* ɵɵelementStart */](35, "div", 15);
    core["Qc" /* ɵɵtext */](36, " ");
    core["jc" /* ɵɵelementStart */](37, "div", 16);
    core["Qc" /* ɵɵtext */](38, " ");
    core["Oc" /* ɵɵtemplate */](39, ViewComponent_content_19_button_39_Template, 14, 3, "button", 17);
    core["Qc" /* ɵɵtext */](40, " ");
    core["Oc" /* ɵɵtemplate */](41, ViewComponent_content_19_button_41_Template, 14, 3, "button", 17);
    core["Qc" /* ɵɵtext */](42, " ");
    core["Oc" /* ɵɵtemplate */](43, ViewComponent_content_19_button_43_Template, 14, 3, "button", 17);
    core["Qc" /* ɵɵtext */](44, " ");
    core["Oc" /* ɵɵtemplate */](45, ViewComponent_content_19_button_45_Template, 14, 3, "button", 17);
    core["Qc" /* ɵɵtext */](46, " ");
    core["Oc" /* ɵɵtemplate */](47, ViewComponent_content_19_button_47_Template, 14, 3, "button", 17);
    core["Qc" /* ɵɵtext */](48, " ");
    core["jc" /* ɵɵelementStart */](49, "button", 18);
    core["qc" /* ɵɵlistener */]("click", function ViewComponent_content_19_Template_button_click_49_listener() { core["Jc" /* ɵɵrestoreView */](_r93); const ctx_r92 = core["uc" /* ɵɵnextContext */](); return ctx_r92.delete(); });
    core["Qc" /* ɵɵtext */](50, " ");
    core["jc" /* ɵɵelementStart */](51, "div", 19);
    core["Qc" /* ɵɵtext */](52, " ");
    core["jc" /* ɵɵelementStart */](53, "div", 20);
    core["Qc" /* ɵɵtext */](54, " ");
    core["ec" /* ɵɵelement */](55, "i", 21);
    core["Qc" /* ɵɵtext */](56, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](57, " ");
    core["jc" /* ɵɵelementStart */](58, "span");
    core["Qc" /* ɵɵtext */](59);
    core["vc" /* ɵɵpipe */](60, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](61, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](62, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](63, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](64, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](65, " ");
    core["jc" /* ɵɵelementStart */](66, "div", 8);
    core["Qc" /* ɵɵtext */](67, " ");
    core["jc" /* ɵɵelementStart */](68, "div", 22);
    core["Qc" /* ɵɵtext */](69, " ");
    core["jc" /* ɵɵelementStart */](70, "div");
    core["Qc" /* ɵɵtext */](71, " ");
    core["jc" /* ɵɵelementStart */](72, "b", 23);
    core["Qc" /* ɵɵtext */](73);
    core["vc" /* ɵɵpipe */](74, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](75);
    core["vc" /* ɵɵpipe */](76, "date");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](77, " ");
    core["Oc" /* ɵɵtemplate */](78, ViewComponent_content_19_div_78_Template, 7, 7, "div", 5);
    core["Qc" /* ɵɵtext */](79, " ");
    core["Oc" /* ɵɵtemplate */](80, ViewComponent_content_19_div_80_Template, 10, 10, "div", 5);
    core["Qc" /* ɵɵtext */](81, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](82, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](83, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](6, 20, "itemInformation"), " ");
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](14, 22, "name"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("value", ctx_r1.cipher.name);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.login);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.card);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.identity);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.login && ctx_r1.cipher.login.hasUris);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.notes);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.hasFields);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.hasAttachments && (ctx_r1.canAccessPremium || ctx_r1.cipher.organizationId) && ctx_r1.showAttachments);
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.type !== ctx_r1.cipherType.SecureNote && !ctx_r1.cipher.isDeleted && !ctx_r1.inPopout);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.type === ctx_r1.cipherType.Login && !ctx_r1.cipher.isDeleted && !ctx_r1.inPopout);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.cipher.organizationId && !ctx_r1.cipher.isDeleted);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.cipher.organizationId);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.isDeleted);
    core["Sb" /* ɵɵadvance */](12);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](60, 24, ctx_r1.cipher.isDeleted ? "permanentlyDeleteItem" : "deleteItem"));
    core["Sb" /* ɵɵadvance */](14);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](74, 26, "dateUpdated"), ":");
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["xc" /* ɵɵpipeBind2 */](76, 28, ctx_r1.cipher.revisionDate, "medium"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.passwordRevisionDisplayDate);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.cipher.hasPasswordHistory);
} }
const vault_view_component_BroadcasterSubscriptionId = 'ChildViewComponent';
class vault_view_component_ViewComponent extends view_component_ViewComponent {
    constructor(cipherService, totpService, tokenService, i18nService, cryptoService, platformUtilsService, auditService, route, router, location, broadcasterService, ngZone, changeDetectorRef, userService, eventService, autofillService, messagingService, popupUtilsService, apiService, passwordRepromptService, logService) {
        super(cipherService, totpService, tokenService, i18nService, cryptoService, platformUtilsService, auditService, window, broadcasterService, ngZone, changeDetectorRef, userService, eventService, apiService, passwordRepromptService, logService);
        this.route = route;
        this.router = router;
        this.location = location;
        this.autofillService = autofillService;
        this.messagingService = messagingService;
        this.popupUtilsService = popupUtilsService;
        this.showAttachments = true;
        this.pageDetails = [];
        this.inPopout = false;
        this.cipherType = cipherType["a" /* CipherType */];
    }
    ngOnInit() {
        this.inPopout = this.popupUtilsService.inPopout(window);
        this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => vault_view_component_awaiter(this, void 0, void 0, function* () {
            if (params.cipherId) {
                this.cipherId = params.cipherId;
            }
            else {
                this.close();
            }
            yield this.load();
        }));
        super.ngOnInit();
        this.broadcasterService.subscribe(vault_view_component_BroadcasterSubscriptionId, (message) => {
            this.ngZone.run(() => vault_view_component_awaiter(this, void 0, void 0, function* () {
                switch (message.command) {
                    case 'collectPageDetailsResponse':
                        if (message.sender === vault_view_component_BroadcasterSubscriptionId) {
                            this.pageDetails.push({
                                frameId: message.webExtSender.frameId,
                                tab: message.tab,
                                details: message.details,
                            });
                        }
                        break;
                    case 'tabChanged':
                    case 'windowChanged':
                        if (this.loadPageDetailsTimeout != null) {
                            window.clearTimeout(this.loadPageDetailsTimeout);
                        }
                        this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);
                        break;
                    default:
                        break;
                }
            }));
        });
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        this.broadcasterService.unsubscribe(vault_view_component_BroadcasterSubscriptionId);
    }
    load() {
        const _super = Object.create(null, {
            load: { get: () => super.load }
        });
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            yield _super.load.call(this);
            yield this.loadPageDetails();
        });
    }
    edit() {
        const _super = Object.create(null, {
            edit: { get: () => super.edit }
        });
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            if (this.cipher.isDeleted) {
                return false;
            }
            if (!(yield _super.edit.call(this))) {
                return false;
            }
            this.router.navigate(['/edit-cipher'], { queryParams: { cipherId: this.cipher.id } });
            return true;
        });
    }
    clone() {
        const _super = Object.create(null, {
            clone: { get: () => super.clone }
        });
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            if (this.cipher.isDeleted) {
                return false;
            }
            if (!(yield _super.clone.call(this))) {
                return false;
            }
            this.router.navigate(['/clone-cipher'], {
                queryParams: {
                    cloneMode: true,
                    cipherId: this.cipher.id,
                },
            });
            return true;
        });
    }
    share() {
        const _super = Object.create(null, {
            share: { get: () => super.share }
        });
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield _super.share.call(this))) {
                return false;
            }
            if (this.cipher.organizationId == null) {
                this.router.navigate(['/share-cipher'], { replaceUrl: true, queryParams: { cipherId: this.cipher.id } });
            }
            return true;
        });
    }
    fillCipher() {
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            const didAutofill = yield this.doAutofill();
            if (didAutofill) {
                this.platformUtilsService.showToast('success', null, this.i18nService.t('autoFillSuccess'));
            }
        });
    }
    fillCipherAndSave() {
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            const didAutofill = yield this.doAutofill();
            if (didAutofill) {
                if (this.tab == null) {
                    throw new Error('No tab found.');
                }
                if (this.cipher.login.uris == null) {
                    this.cipher.login.uris = [];
                }
                else {
                    if (this.cipher.login.uris.some(uri => uri.uri === this.tab.url)) {
                        this.platformUtilsService.showToast('success', null, this.i18nService.t('autoFillSuccessAndSavedUri'));
                        return;
                    }
                }
                const loginUri = new loginUriView["a" /* LoginUriView */]();
                loginUri.uri = this.tab.url;
                this.cipher.login.uris.push(loginUri);
                try {
                    const cipher = yield this.cipherService.encrypt(this.cipher);
                    yield this.cipherService.saveWithServer(cipher);
                    this.platformUtilsService.showToast('success', null, this.i18nService.t('autoFillSuccessAndSavedUri'));
                    this.messagingService.send('editedCipher');
                }
                catch (_a) {
                    this.platformUtilsService.showToast('error', null, this.i18nService.t('unexpectedError'));
                }
            }
        });
    }
    restore() {
        const _super = Object.create(null, {
            restore: { get: () => super.restore }
        });
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            if (!this.cipher.isDeleted) {
                return false;
            }
            if (yield _super.restore.call(this)) {
                this.close();
                return true;
            }
            return false;
        });
    }
    delete() {
        const _super = Object.create(null, {
            delete: { get: () => super.delete }
        });
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            if (yield _super.delete.call(this)) {
                this.close();
                return true;
            }
            return false;
        });
    }
    close() {
        this.location.back();
    }
    loadPageDetails() {
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            this.pageDetails = [];
            this.tab = yield browserApi["a" /* BrowserApi */].getTabFromCurrentWindow();
            if (this.tab == null) {
                return;
            }
            browserApi["a" /* BrowserApi */].tabSendMessage(this.tab, {
                command: 'collectPageDetails',
                tab: this.tab,
                sender: vault_view_component_BroadcasterSubscriptionId,
            });
        });
    }
    doAutofill() {
        return vault_view_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.promptPassword())) {
                return false;
            }
            if (this.pageDetails == null || this.pageDetails.length === 0) {
                this.platformUtilsService.showToast('error', null, this.i18nService.t('autofillError'));
                return false;
            }
            try {
                this.totpCode = yield this.autofillService.doAutoFill({
                    cipher: this.cipher,
                    pageDetails: this.pageDetails,
                    doc: window.document,
                    fillNewPassword: true,
                });
                if (this.totpCode != null) {
                    this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });
                }
            }
            catch (_a) {
                this.platformUtilsService.showToast('error', null, this.i18nService.t('autofillError'));
                this.changeDetectorRef.detectChanges();
                return false;
            }
            return true;
        });
    }
}
vault_view_component_ViewComponent.ɵfac = function ViewComponent_Factory(t) { return new (t || vault_view_component_ViewComponent)(core["dc" /* ɵɵdirectiveInject */](CipherService), core["dc" /* ɵɵdirectiveInject */](TotpService), core["dc" /* ɵɵdirectiveInject */](TokenService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](AuditService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */]), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](EventService), core["dc" /* ɵɵdirectiveInject */](AutofillService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](ApiService), core["dc" /* ɵɵdirectiveInject */](passwordReprompt_service_PasswordRepromptService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
vault_view_component_ViewComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: vault_view_component_ViewComponent, selectors: [["app-vault-view"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 21, vars: 8, consts: [[1, "left"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "center"], [1, "title"], ["class", "right", 4, "ngIf"], [4, "ngIf"], [1, "right"], ["type", "button", "appBlurClick", "", 3, "click", 4, "ngIf"], [1, "box"], [1, "box-header"], [1, "box-content"], [1, "box-content-row"], [1, "row-label"], ["type", "text", "readonly", "readonly", "aria-readonly", "true", 3, "value"], ["class", "box", 4, "ngIf"], [1, "box", "list"], [1, "box-content", "single-line"], ["type", "button", "class", "box-content-row", "appStopClick", "", "appBlurClick", "", 3, "click", 4, "ngIf"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", 3, "click"], [1, "row-main", "text-danger"], ["aria-hidden", "true", 1, "icon", "text-danger"], [1, "fa", "fa-trash-o", "fa-lg", "fa-fw"], [1, "box-footer"], [1, "font-weight-semibold"], ["class", "box-content-row box-content-row-flex", 4, "ngIf"], ["class", "box-content-row box-content-row-flex totp", 3, "ngClass", 4, "ngIf"], [1, "box-content-row", "box-content-row-flex"], [1, "row-main"], ["draggable", "true", 1, "row-label", "draggable", 3, "dragstart"], [1, "action-buttons"], ["type", "button", "appStopClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-clone"], [1, "monospaced", 3, "hidden"], ["appSelectCopy", "", 1, "monospaced", "password-wrapper", 3, "hidden", "innerHTML"], ["type", "button", "class", "row-btn btn", "appBlurClick", "", 3, "appA11yTitle", "appApiAction", "disabled", "click", 4, "ngIf"], ["type", "button", "class", "row-btn", "appStopClick", "", 3, "appA11yTitle", "click", 4, "ngIf"], ["type", "button", "appBlurClick", "", 1, "row-btn", "btn", 3, "appA11yTitle", "appApiAction", "disabled", "click"], ["checkPasswordBtn", ""], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-check-circle", 3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-spinner", "fa-spin", 3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], [1, "box-content-row", "box-content-row-flex", "totp", 3, "ngClass"], [1, "totp-code"], [1, "totp-countdown"], [1, "totp-sec"], ["r", "12.6", "cy", "16", "cx", "16", 1, "totp-circle", "inner", 3, "ngStyle"], ["r", "14", "cy", "16", "cx", "16", 1, "totp-circle", "outer"], ["class", "box-content-row", 4, "ngIf"], ["class", "box-content-row box-content-row-flex", 4, "ngFor", "ngForOf"], ["class", "row-label", 4, "ngIf"], [3, "title"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-share-square-o"], ["rows", "6", "readonly", "readonly", "aria-readonly", "true", 3, "value"], [3, "cipher", "promptPassword", "copy"], ["type", "button", "class", "box-content-row box-content-row-flex text-default", "appStopClick", "", "appBlurCLick", "", 3, "click", 4, "ngFor", "ngForOf"], ["type", "button", "appStopClick", "", "appBlurCLick", "", 1, "box-content-row", "box-content-row-flex", "text-default", 3, "click"], [1, "row-sub-label"], ["class", "fa fa-download fa-fw row-sub-icon", "aria-hidden", "true", 4, "ngIf"], ["class", "fa fa-spinner fa-fw fa-spin row-sub-icon", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "fa", "fa-download", "fa-fw", "row-sub-icon"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-fw", "fa-spin", "row-sub-icon"], [1, "row-main", "text-primary"], ["aria-hidden", "true", 1, "icon", "text-primary"], [1, "fa", "fa-pencil-square-o", "fa-lg", "fa-fw"], [1, "fa", "fa-bookmark", "fa-lg", "fa-fw"], [1, "fa", "fa-files-o", "fa-lg", "fa-fw"], [1, "fa", "fa-arrow-circle-o-right", "fa-lg", "fa-fw"], [1, "fa", "fa-undo", "fa-lg", "fa-fw"], ["routerLink", "/cipher-password-history", "appStopClick", "", 3, "queryParams", "title"]], template: function ViewComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "button", 1);
        core["qc" /* ɵɵlistener */]("click", function ViewComponent_Template_button_click_4_listener() { return ctx.close(); });
        core["Qc" /* ɵɵtext */](5);
        core["vc" /* ɵɵpipe */](6, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](7, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "div", 2);
        core["Qc" /* ɵɵtext */](10, " ");
        core["jc" /* ɵɵelementStart */](11, "span", 3);
        core["Qc" /* ɵɵtext */](12);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](15, " ");
        core["Oc" /* ɵɵtemplate */](16, ViewComponent_div_16_Template, 4, 1, "div", 4);
        core["Qc" /* ɵɵtext */](17, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](18, " ");
        core["Oc" /* ɵɵtemplate */](19, ViewComponent_content_19_Template, 84, 31, "content", 5);
        core["Qc" /* ɵɵtext */](20, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](5);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 4, "close"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 6, "viewItem"));
        core["Sb" /* ɵɵadvance */](4);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher);
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.cipher);
    } }, directives: [BlurClickDirective, common["l" /* NgIf */], StopClickDirective, A11yTitleDirective, SelectCopyDirective, api_action_directive_ApiActionDirective, common["j" /* NgClass */], common["m" /* NgStyle */], common["k" /* NgForOf */], vault_view_custom_fields_component_ViewCustomFieldsComponent, fesm2015_router["g" /* RouterLinkWithHref */]], pipes: [I18nPipe, common["e" /* DatePipe */], color_password_pipe_ColorPasswordPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](vault_view_component_ViewComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-vault-view',
                templateUrl: 'view.component.html',
            }]
    }], function () { return [{ type: CipherService }, { type: TotpService }, { type: TokenService }, { type: I18nService }, { type: CryptoService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: AuditService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: fesm2015_router["e" /* Router */] }, { type: common["h" /* Location */] }, { type: services_broadcaster_service_BroadcasterService }, { type: core["M" /* NgZone */] }, { type: core["j" /* ChangeDetectorRef */] }, { type: UserService }, { type: EventService }, { type: AutofillService }, { type: messaging_service["a" /* MessagingService */] }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: ApiService }, { type: passwordReprompt_service_PasswordRepromptService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/send.service.ts
class SendService {
}

// EXTERNAL MODULE: ./jslib/common/src/enums/sendType.ts
var sendType = __webpack_require__(45);

// EXTERNAL MODULE: ./jslib/common/src/models/view/sendFileView.ts
var sendFileView = __webpack_require__(138);

// EXTERNAL MODULE: ./jslib/common/src/models/view/sendTextView.ts
var sendTextView = __webpack_require__(139);

// EXTERNAL MODULE: ./jslib/common/src/models/view/sendView.ts
var sendView = __webpack_require__(223);

// CONCATENATED MODULE: ./jslib/angular/src/components/send/add-edit.component.ts
var send_add_edit_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

























class send_add_edit_component_AddEditComponent {
    constructor(i18nService, platformUtilsService, environmentService, datePipe, sendService, userService, messagingService, policyService, logService) {
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.environmentService = environmentService;
        this.datePipe = datePipe;
        this.sendService = sendService;
        this.userService = userService;
        this.messagingService = messagingService;
        this.policyService = policyService;
        this.logService = logService;
        this.onSavedSend = new core["t" /* EventEmitter */]();
        this.onDeletedSend = new core["t" /* EventEmitter */]();
        this.onCancelled = new core["t" /* EventEmitter */]();
        this.copyLink = false;
        this.disableSend = false;
        this.disableHideEmail = false;
        this.showPassword = false;
        this.sendType = sendType["a" /* SendType */];
        this.canAccessPremium = true;
        this.emailVerified = true;
        this.alertShown = false;
        this.showOptions = false;
        this.typeOptions = [
            { name: i18nService.t('sendTypeFile'), value: sendType["a" /* SendType */].File },
            { name: i18nService.t('sendTypeText'), value: sendType["a" /* SendType */].Text },
        ];
        this.sendLinkBaseUrl = this.environmentService.getSendUrl();
    }
    get link() {
        if (this.send.id != null && this.send.accessId != null) {
            return this.sendLinkBaseUrl + this.send.accessId + '/' + this.send.urlB64Key;
        }
        return null;
    }
    get isSafari() {
        return this.platformUtilsService.isSafari();
    }
    get isDateTimeLocalSupported() {
        return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());
    }
    ngOnInit() {
        return send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            yield this.load();
        });
    }
    get editMode() {
        return this.sendId != null;
    }
    get title() {
        return this.i18nService.t(this.editMode ?
            'editSend' :
            'createSend');
    }
    setDates(event) {
        this.deletionDate = event.deletionDate;
        this.expirationDate = event.expirationDate;
    }
    load() {
        return send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            this.disableSend = yield this.policyService.policyAppliesToUser(policyType["a" /* PolicyType */].DisableSend);
            this.disableHideEmail = yield this.policyService.policyAppliesToUser(policyType["a" /* PolicyType */].SendOptions, p => p.data.disableHideEmail);
            this.canAccessPremium = yield this.userService.canAccessPremium();
            this.emailVerified = yield this.userService.getEmailVerified();
            if (!this.canAccessPremium || !this.emailVerified) {
                this.type = sendType["a" /* SendType */].Text;
            }
            if (this.send == null) {
                if (this.editMode) {
                    const send = yield this.loadSend();
                    this.send = yield send.decrypt();
                }
                else {
                    this.send = new sendView["a" /* SendView */]();
                    this.send.type = this.type == null ? sendType["a" /* SendType */].File : this.type;
                    this.send.file = new sendFileView["a" /* SendFileView */]();
                    this.send.text = new sendTextView["a" /* SendTextView */]();
                    this.send.deletionDate = new Date();
                    this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);
                }
            }
            this.hasPassword = this.send.password != null && this.send.password.trim() !== '';
        });
    }
    submit() {
        return send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (this.disableSend) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('sendDisabledWarning'));
                return false;
            }
            if (this.send.name == null || this.send.name === '') {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('nameRequired'));
                return false;
            }
            let file = null;
            if (this.send.type === sendType["a" /* SendType */].File && !this.editMode) {
                const fileEl = document.getElementById('file');
                const files = fileEl.files;
                if (files == null || files.length === 0) {
                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('selectFile'));
                    return;
                }
                file = files[0];
                if (files[0].size > 524288000) { // 500 MB
                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('maxFileSize'));
                    return;
                }
            }
            if (this.password != null && this.password.trim() === '') {
                this.password = null;
            }
            this.formPromise = this.encryptSend(file)
                .then((encSend) => send_add_edit_component_awaiter(this, void 0, void 0, function* () {
                const uploadPromise = this.sendService.saveWithServer(encSend);
                yield uploadPromise;
                if (this.send.id == null) {
                    this.send.id = encSend[0].id;
                }
                if (this.send.accessId == null) {
                    this.send.accessId = encSend[0].accessId;
                }
                this.onSavedSend.emit(this.send);
                if (this.copyLink && this.link != null) {
                    const copySuccess = yield this.copyLinkToClipboard(this.link);
                    if (copySuccess !== null && copySuccess !== void 0 ? copySuccess : true) {
                        this.platformUtilsService.showToast('success', null, this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'));
                    }
                    else {
                        yield this.platformUtilsService.showDialog(this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'), null, this.i18nService.t('ok'), null, 'success', null);
                        yield this.copyLinkToClipboard(this.link);
                    }
                }
            }));
            try {
                yield this.formPromise;
                return true;
            }
            catch (e) {
                this.logService.error(e);
            }
            return false;
        });
    }
    copyLinkToClipboard(link) {
        return send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            return Promise.resolve(this.platformUtilsService.copyToClipboard(link));
        });
    }
    delete() {
        return send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (this.deletePromise != null) {
                return false;
            }
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('deleteSendConfirmation'), this.i18nService.t('deleteSend'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                this.deletePromise = this.sendService.deleteWithServer(this.send.id);
                yield this.deletePromise;
                this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));
                yield this.load();
                this.onDeletedSend.emit(this.send);
                return true;
            }
            catch (e) {
                this.logService.error(e);
            }
            return false;
        });
    }
    typeChanged() {
        if (this.send.type === sendType["a" /* SendType */].File && !this.alertShown) {
            if (!this.canAccessPremium) {
                this.alertShown = true;
                this.messagingService.send('premiumRequired');
            }
            else if (!this.emailVerified) {
                this.alertShown = true;
                this.messagingService.send('emailVerificationRequired');
            }
        }
    }
    toggleOptions() {
        this.showOptions = !this.showOptions;
    }
    loadSend() {
        return send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            return this.sendService.get(this.sendId);
        });
    }
    encryptSend(file) {
        return send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            const sendData = yield this.sendService.encrypt(this.send, file, this.password, null);
            // Parse dates
            try {
                sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);
            }
            catch (_a) {
                sendData[0].deletionDate = null;
            }
            try {
                sendData[0].expirationDate = this.expirationDate == null ? null : new Date(this.expirationDate);
            }
            catch (_b) {
                sendData[0].expirationDate = null;
            }
            return sendData;
        });
    }
    togglePasswordVisible() {
        this.showPassword = !this.showPassword;
        document.getElementById('password').focus();
    }
}
send_add_edit_component_AddEditComponent.ɵfac = function AddEditComponent_Factory(t) { return new (t || send_add_edit_component_AddEditComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](common["e" /* DatePipe */]), core["dc" /* ɵɵdirectiveInject */](SendService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
send_add_edit_component_AddEditComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: send_add_edit_component_AddEditComponent, inputs: { sendId: "sendId", type: "type" }, outputs: { onSavedSend: "onSavedSend", onDeletedSend: "onDeletedSend", onCancelled: "onCancelled" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](send_add_edit_component_AddEditComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: EnvironmentService }, { type: common["e" /* DatePipe */] }, { type: SendService }, { type: UserService }, { type: messaging_service["a" /* MessagingService */] }, { type: PolicyService }, { type: LogService }]; }, { sendId: [{
            type: core["D" /* Input */]
        }], type: [{
            type: core["D" /* Input */]
        }], onSavedSend: [{
            type: core["O" /* Output */]
        }], onDeletedSend: [{
            type: core["O" /* Output */]
        }], onCancelled: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/send/efflux-dates.component.ts









// Different BrowserPath = different controls.
var BrowserPath;
(function (BrowserPath) {
    // Native datetime-locale.
    // We are happy.
    BrowserPath["Default"] = "default";
    // Native date and time inputs, but no datetime-locale.
    // We use individual date and time inputs and create a datetime programatically on submit.
    BrowserPath["Firefox"] = "firefox";
    // No native date, time, or datetime-locale inputs.
    // We use a polyfill for dates and a dropdown for times.
    BrowserPath["Safari"] = "safari";
})(BrowserPath || (BrowserPath = {}));
var DateField;
(function (DateField) {
    DateField["DeletionDate"] = "deletion";
    DateField["ExpriationDate"] = "expiration";
})(DateField || (DateField = {}));
// Value = hours
var DatePreset;
(function (DatePreset) {
    DatePreset[DatePreset["OneHour"] = 1] = "OneHour";
    DatePreset[DatePreset["OneDay"] = 24] = "OneDay";
    DatePreset[DatePreset["TwoDays"] = 48] = "TwoDays";
    DatePreset[DatePreset["ThreeDays"] = 72] = "ThreeDays";
    DatePreset[DatePreset["SevenDays"] = 168] = "SevenDays";
    DatePreset[DatePreset["ThirtyDays"] = 720] = "ThirtyDays";
    DatePreset[DatePreset["Custom"] = 0] = "Custom";
    DatePreset[DatePreset["Never"] = null] = "Never";
})(DatePreset || (DatePreset = {}));
class efflux_dates_component_EffluxDatesComponent {
    constructor(i18nService, platformUtilsService, datePipe) {
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.datePipe = datePipe;
        this.datesChanged = new core["t" /* EventEmitter */]();
        this.datesForm = new fesm2015_forms["h" /* FormGroup */]({
            selectedDeletionDatePreset: new fesm2015_forms["e" /* FormControl */](),
            selectedExpirationDatePreset: new fesm2015_forms["e" /* FormControl */](),
            defaultDeletionDateTime: new fesm2015_forms["e" /* FormControl */](),
            defaultExpirationDateTime: new fesm2015_forms["e" /* FormControl */](),
            fallbackDeletionDate: new fesm2015_forms["e" /* FormControl */](),
            fallbackDeletionTime: new fesm2015_forms["e" /* FormControl */](),
            fallbackExpirationDate: new fesm2015_forms["e" /* FormControl */](),
            fallbackExpirationTime: new fesm2015_forms["e" /* FormControl */](),
        });
        this.deletionDatePresets = [
            { name: this.i18nService.t('oneHour'), value: DatePreset.OneHour },
            { name: this.i18nService.t('oneDay'), value: DatePreset.OneDay },
            { name: this.i18nService.t('days', '2'), value: DatePreset.TwoDays },
            { name: this.i18nService.t('days', '3'), value: DatePreset.ThreeDays },
            { name: this.i18nService.t('days', '7'), value: DatePreset.SevenDays },
            { name: this.i18nService.t('days', '30'), value: DatePreset.ThirtyDays },
            { name: this.i18nService.t('custom'), value: DatePreset.Custom },
        ];
        this.expirationDatePresets = [
            { name: this.i18nService.t('never'), value: DatePreset.Never },
        ].concat([...this.deletionDatePresets]);
    }
    get browserPath() {
        if (this.platformUtilsService.isFirefox()) {
            return BrowserPath.Firefox;
        }
        else if (this.platformUtilsService.isSafari()) {
            return BrowserPath.Safari;
        }
        return BrowserPath.Default;
    }
    get selectedDeletionDatePreset() {
        return this.datesForm.get('selectedDeletionDatePreset');
    }
    get selectedExpirationDatePreset() {
        return this.datesForm.get('selectedExpirationDatePreset');
    }
    get defaultDeletionDateTime() {
        return this.datesForm.get('defaultDeletionDateTime');
    }
    get defaultExpirationDateTime() {
        return this.datesForm.get('defaultExpirationDateTime');
    }
    get fallbackDeletionDate() {
        return this.datesForm.get('fallbackDeletionDate');
    }
    get fallbackDeletionTime() {
        return this.datesForm.get('fallbackDeletionTime');
    }
    get fallbackExpirationDate() {
        return this.datesForm.get('fallbackExpirationDate');
    }
    get fallbackExpirationTime() {
        return this.datesForm.get('fallbackExpirationTime');
    }
    // Should be able to call these at any time and compute a submitable value
    get formattedDeletionDate() {
        switch (this.selectedDeletionDatePreset.value) {
            case DatePreset.Never:
                this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);
                return this.formattedDeletionDate;
            case DatePreset.Custom:
                switch (this.browserPath) {
                    case BrowserPath.Safari:
                    case BrowserPath.Firefox:
                        return this.fallbackDeletionDate.value + 'T' + this.fallbackDeletionTime.value;
                    default:
                        return this.defaultDeletionDateTime.value;
                }
            default:
                const now = new Date();
                const miliseconds = now.setTime(now.getTime() +
                    (this.selectedDeletionDatePreset.value * 60 * 60 * 1000));
                return new Date(miliseconds).toString();
        }
    }
    get formattedExpirationDate() {
        switch (this.selectedExpirationDatePreset.value) {
            case DatePreset.Never:
                return null;
            case DatePreset.Custom:
                switch (this.browserPath) {
                    case BrowserPath.Safari:
                    case BrowserPath.Firefox:
                        if ((!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&
                            this.editMode) {
                            return null;
                        }
                        return this.fallbackExpirationDate.value + 'T' + this.fallbackExpirationTime.value;
                    default:
                        if (!this.defaultExpirationDateTime.value) {
                            return null;
                        }
                        return this.defaultExpirationDateTime.value;
                }
            default:
                const now = new Date();
                const miliseconds = now.setTime(now.getTime() +
                    (this.selectedExpirationDatePreset.value * 60 * 60 * 1000));
                return new Date(miliseconds).toString();
        }
    }
    //
    get safariDeletionTimePresetOptions() {
        return this.safariTimePresetOptions(DateField.DeletionDate);
    }
    get safariExpirationTimePresetOptions() {
        return this.safariTimePresetOptions(DateField.ExpriationDate);
    }
    get nextWeek() {
        const nextWeek = new Date();
        nextWeek.setDate(nextWeek.getDate() + 7);
        return nextWeek;
    }
    ngOnInit() {
        this.setInitialFormValues();
        this.emitDates();
        this.datesForm.valueChanges.subscribe(() => {
            this.emitDates();
        });
    }
    onDeletionDatePresetSelect(value) {
        this.selectedDeletionDatePreset.setValue(value);
    }
    clearExpiration() {
        switch (this.browserPath) {
            case BrowserPath.Safari:
            case BrowserPath.Firefox:
                this.fallbackExpirationDate.setValue(null);
                this.fallbackExpirationTime.setValue(null);
                break;
            case BrowserPath.Default:
                this.defaultExpirationDateTime.setValue(null);
                break;
        }
    }
    emitDates() {
        this.datesChanged.emit({
            deletionDate: this.formattedDeletionDate,
            expirationDate: this.formattedExpirationDate,
        });
    }
    setInitialFormValues() {
        if (this.editMode) {
            this.selectedDeletionDatePreset.setValue(DatePreset.Custom);
            this.selectedExpirationDatePreset.setValue(DatePreset.Custom);
            switch (this.browserPath) {
                case BrowserPath.Safari:
                case BrowserPath.Firefox:
                    this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));
                    this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));
                    if (this.initialExpirationDate != null) {
                        this.fallbackExpirationDate.setValue(this.initialExpirationDate.toISOString().slice(0, 10));
                        this.fallbackExpirationTime.setValue(this.initialExpirationDate.toTimeString().slice(0, 5));
                    }
                    break;
                case BrowserPath.Default:
                    if (this.initialExpirationDate) {
                        this.defaultExpirationDateTime.setValue(this.datePipe.transform(new Date(this.initialExpirationDate), 'yyyy-MM-ddTHH:mm'));
                    }
                    this.defaultDeletionDateTime.setValue(this.datePipe.transform(new Date(this.initialDeletionDate), 'yyyy-MM-ddTHH:mm'));
                    break;
            }
        }
        else {
            this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);
            this.selectedExpirationDatePreset.setValue(DatePreset.Never);
            switch (this.browserPath) {
                case BrowserPath.Safari:
                    this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));
                    this.fallbackDeletionTime.setValue(this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour);
                    break;
                default:
                    break;
            }
        }
    }
    safariTimePresetOptions(field) {
        // init individual arrays for major sort groups
        const noon = [];
        const midnight = [];
        const ams = [];
        const pms = [];
        // determine minute skip (5 min, 10 min, 15 min, etc.)
        const minuteIncrementer = 15;
        // loop through each hour on a 12 hour system
        for (let h = 1; h <= 12; h++) {
            // loop through each minute in the hour using the skip to incriment
            for (let m = 0; m < 60; m += minuteIncrementer) {
                // init the final strings that will be added to the lists
                let hour = h.toString();
                let minutes = m.toString();
                // add prepending 0s to single digit hours/minutes
                if (h < 10) {
                    hour = '0' + hour;
                }
                if (m < 10) {
                    minutes = '0' + minutes;
                }
                // build time strings and push to relevant sort groups
                if (h === 12) {
                    const midnightOption = {
                        twelveHour: `${hour}:${minutes} AM`,
                        twentyFourHour: `00:${minutes}`,
                    };
                    midnight.push(midnightOption);
                    const noonOption = {
                        twelveHour: `${hour}:${minutes} PM`,
                        twentyFourHour: `${hour}:${minutes}`,
                    };
                    noon.push(noonOption);
                }
                else {
                    const amOption = {
                        twelveHour: `${hour}:${minutes} AM`,
                        twentyFourHour: `${hour}:${minutes}`,
                    };
                    ams.push(amOption);
                    const pmOption = {
                        twelveHour: `${hour}:${minutes} PM`,
                        twentyFourHour: `${h + 12}:${minutes}`,
                    };
                    pms.push(pmOption);
                }
            }
        }
        // bring all the arrays together in the right order
        const validTimes = [...midnight, ...ams, ...noon, ...pms];
        // determine if an unsupported value already exists on the send & add that to the top of the option list
        // example: if the Send was created with a different client
        if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {
            const previousValue = {
                twelveHour: this.datePipe.transform(this.initialExpirationDate, 'hh:mm a'),
                twentyFourHour: this.datePipe.transform(this.initialExpirationDate, 'HH:mm'),
            };
            return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];
        }
        else if (field === DateField.DeletionDate && this.initialDeletionDate != null && this.editMode) {
            const previousValue = {
                twelveHour: this.datePipe.transform(this.initialDeletionDate, 'hh:mm a'),
                twentyFourHour: this.datePipe.transform(this.initialDeletionDate, 'HH:mm'),
            };
            return [previousValue, ...validTimes];
        }
        else {
            return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];
        }
    }
}
efflux_dates_component_EffluxDatesComponent.ɵfac = function EffluxDatesComponent_Factory(t) { return new (t || efflux_dates_component_EffluxDatesComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](common["e" /* DatePipe */])); };
efflux_dates_component_EffluxDatesComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: efflux_dates_component_EffluxDatesComponent, inputs: { initialDeletionDate: "initialDeletionDate", initialExpirationDate: "initialExpirationDate", editMode: "editMode", disabled: "disabled" }, outputs: { datesChanged: "datesChanged" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](efflux_dates_component_EffluxDatesComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: common["e" /* DatePipe */] }]; }, { initialDeletionDate: [{
            type: core["D" /* Input */]
        }], initialExpirationDate: [{
            type: core["D" /* Input */]
        }], editMode: [{
            type: core["D" /* Input */]
        }], disabled: [{
            type: core["D" /* Input */]
        }], datesChanged: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/send/efflux-dates.component.ts














function EffluxDatesComponent_ng_container_6_option_10_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 12);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r12 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r12.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */]("", o_r12.name, " ");
} }
function EffluxDatesComponent_ng_container_6_div_14_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    core["fc" /* ɵɵelementContainer */](0);
} }
function EffluxDatesComponent_ng_container_6_div_14_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, EffluxDatesComponent_ng_container_6_div_14_ng_container_2_Template, 1, 0, "ng-container", 13);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["uc" /* ɵɵnextContext */](2);
    const _r6 = core["Ic" /* ɵɵreference */](35);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngTemplateOutlet", _r6);
} }
function EffluxDatesComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 8);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 9);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "select", 10);
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, EffluxDatesComponent_ng_container_6_option_10_Template, 2, 2, "option", 11);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["Oc" /* ɵɵtemplate */](14, EffluxDatesComponent_ng_container_6_div_14_Template, 4, 1, "div", 4);
    core["Qc" /* ɵɵtext */](15, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 3, "deletionDate"));
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r0.deletionDatePresets);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r0.selectedDeletionDatePreset.value === 0);
} }
function EffluxDatesComponent_div_8_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    core["fc" /* ɵɵelementContainer */](0);
} }
function EffluxDatesComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 9);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, EffluxDatesComponent_div_8_ng_container_6_Template, 1, 0, "ng-container", 13);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["uc" /* ɵɵnextContext */]();
    const _r6 = core["Ic" /* ɵɵreference */](35);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "deletionDate"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngTemplateOutlet", _r6);
} }
function EffluxDatesComponent_ng_container_14_Template(rf, ctx) { if (rf & 1) {
    const _r16 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "br");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "a", 14);
    core["qc" /* ɵɵlistener */]("click", function EffluxDatesComponent_ng_container_14_Template_a_click_5_listener() { core["Jc" /* ɵɵrestoreView */](_r16); const ctx_r15 = core["uc" /* ɵɵnextContext */](); return ctx_r15.popOutWindow.emit(); });
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8);
    core["vc" /* ɵɵpipe */](9, "i18n");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](4, 3, "sendFirefoxCustomDatePopoutMessage1"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 5, "sendFirefoxCustomDatePopoutMessage2"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](9, 7, "sendFirefoxCustomDatePopoutMessage3"), " ");
} }
function EffluxDatesComponent_ng_container_22_div_2_option_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 12);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r20 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r20.value);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */]("", o_r20.name, " ");
} }
function EffluxDatesComponent_ng_container_22_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 15);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "select", 16);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, EffluxDatesComponent_ng_container_22_div_2_option_8_Template, 2, 2, "option", 11);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r17 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "expirationDate"));
    core["Sb" /* ɵɵadvance */](5);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r17.expirationDatePresets);
} }
function EffluxDatesComponent_ng_container_22_div_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    core["fc" /* ɵɵelementContainer */](0);
} }
function EffluxDatesComponent_ng_container_22_div_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, EffluxDatesComponent_ng_container_22_div_4_ng_container_2_Template, 1, 0, "ng-container", 13);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["uc" /* ɵɵnextContext */](2);
    const _r8 = core["Ic" /* ɵɵreference */](38);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngTemplateOutlet", _r8);
} }
function EffluxDatesComponent_ng_container_22_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, EffluxDatesComponent_ng_container_22_div_2_Template, 11, 4, "div", 4);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, EffluxDatesComponent_ng_container_22_div_4_Template, 4, 1, "div", 4);
    core["Qc" /* ɵɵtext */](5, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r3.editMode);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r3.selectedExpirationDatePreset.value === 0);
} }
function EffluxDatesComponent_div_24_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r25 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function EffluxDatesComponent_div_24_button_8_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r25); const ctx_r24 = core["uc" /* ɵɵnextContext */](2); return ctx_r24.clearExpiration(); });
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "clear"), " ");
} }
function EffluxDatesComponent_div_24_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    core["fc" /* ɵɵelementContainer */](0);
} }
function EffluxDatesComponent_div_24_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 8);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 17);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label");
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, EffluxDatesComponent_div_24_button_8_Template, 3, 3, "button", 18);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["Oc" /* ɵɵtemplate */](11, EffluxDatesComponent_div_24_ng_container_11_Template, 1, 0, "ng-container", 13);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */]();
    const _r8 = core["Ic" /* ɵɵreference */](38);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 3, "expirationDate"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r4.disabled);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngTemplateOutlet", _r8);
} }
function EffluxDatesComponent_ng_container_30_Template(rf, ctx) { if (rf & 1) {
    const _r27 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "br");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["jc" /* ɵɵelementStart */](5, "a", 14);
    core["qc" /* ɵɵlistener */]("click", function EffluxDatesComponent_ng_container_30_Template_a_click_5_listener() { core["Jc" /* ɵɵrestoreView */](_r27); const ctx_r26 = core["uc" /* ɵɵnextContext */](); return ctx_r26.popOutWindow.emit(); });
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8);
    core["vc" /* ɵɵpipe */](9, "i18n");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */]("", core["wc" /* ɵɵpipeBind1 */](4, 3, "sendFirefoxCustomDatePopoutMessage1"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 5, "sendFirefoxCustomDatePopoutMessage2"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](9, 7, "sendFirefoxCustomDatePopoutMessage3"), " ");
} }
function EffluxDatesComponent_ng_template_34_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 23);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ec" /* ɵɵelement */](4, "input", 24);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "input", 25);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r28 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("readOnly", ctx_r28.disabled);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("readOnly", ctx_r28.disabled);
} }
function EffluxDatesComponent_ng_template_34_ng_container_5_option_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 12);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r32 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r32.twentyFourHour);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */]("", o_r32.twelveHour, " ");
} }
function EffluxDatesComponent_ng_template_34_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 23);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ec" /* ɵɵelement */](4, "input", 24);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "select", 26);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, EffluxDatesComponent_ng_template_34_ng_container_5_option_8_Template, 2, 2, "option", 11);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r29 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("readOnly", ctx_r29.disabled);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r29.safariDeletionTimePresetOptions);
} }
function EffluxDatesComponent_ng_template_34_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "input", 27);
    core["Qc" /* ɵɵtext */](3, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} }
function EffluxDatesComponent_ng_template_34_Template(rf, ctx) { if (rf & 1) {
    core["Qc" /* ɵɵtext */](0, " ");
    core["hc" /* ɵɵelementContainerStart */](1, 20);
    core["Qc" /* ɵɵtext */](2, " ");
    core["Oc" /* ɵɵtemplate */](3, EffluxDatesComponent_ng_template_34_ng_container_3_Template, 9, 2, "ng-container", 21);
    core["Qc" /* ɵɵtext */](4, " ");
    core["Oc" /* ɵɵtemplate */](5, EffluxDatesComponent_ng_template_34_ng_container_5_Template, 12, 2, "ng-container", 21);
    core["Qc" /* ɵɵtext */](6, " ");
    core["Oc" /* ɵɵtemplate */](7, EffluxDatesComponent_ng_template_34_ng_container_7_Template, 4, 0, "ng-container", 22);
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
} if (rf & 2) {
    const ctx_r7 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](1);
    core["Bc" /* ɵɵproperty */]("ngSwitch", ctx_r7.browserPath);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngSwitchCase", "firefox");
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngSwitchCase", "safari");
} }
function EffluxDatesComponent_ng_template_37_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 23);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ec" /* ɵɵelement */](4, "input", 28);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "input", 29);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r33 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("required", !ctx_r33.editMode)("readOnly", ctx_r33.disabled);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("required", !ctx_r33.editMode)("readOnly", ctx_r33.disabled);
} }
function EffluxDatesComponent_ng_template_37_ng_container_5_option_8_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "option", 12);
    core["Qc" /* ɵɵtext */](1);
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r37 = ctx.$implicit;
    core["Bc" /* ɵɵproperty */]("ngValue", o_r37.twentyFourHour);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", o_r37.twelveHour, " ");
} }
function EffluxDatesComponent_ng_template_37_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 23);
    core["Qc" /* ɵɵtext */](3, " ");
    core["ec" /* ɵɵelement */](4, "input", 28);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "select", 30);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, EffluxDatesComponent_ng_template_37_ng_container_5_option_8_Template, 2, 2, "option", 11);
    core["Qc" /* ɵɵtext */](9, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r34 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("required", !ctx_r34.editMode)("readOnly", ctx_r34.disabled);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r34.safariExpirationTimePresetOptions);
} }
function EffluxDatesComponent_ng_template_37_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "input", 31);
    core["Qc" /* ɵɵtext */](3, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r35 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("readOnly", ctx_r35.disabled);
} }
function EffluxDatesComponent_ng_template_37_Template(rf, ctx) { if (rf & 1) {
    core["Qc" /* ɵɵtext */](0, " ");
    core["hc" /* ɵɵelementContainerStart */](1, 20);
    core["Qc" /* ɵɵtext */](2, " ");
    core["Oc" /* ɵɵtemplate */](3, EffluxDatesComponent_ng_template_37_ng_container_3_Template, 9, 4, "ng-container", 21);
    core["Qc" /* ɵɵtext */](4, " ");
    core["Oc" /* ɵɵtemplate */](5, EffluxDatesComponent_ng_template_37_ng_container_5_Template, 12, 3, "ng-container", 21);
    core["Qc" /* ɵɵtext */](6, " ");
    core["Oc" /* ɵɵtemplate */](7, EffluxDatesComponent_ng_template_37_ng_container_7_Template, 4, 1, "ng-container", 22);
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
} if (rf & 2) {
    const ctx_r9 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](1);
    core["Bc" /* ɵɵproperty */]("ngSwitch", ctx_r9.browserPath);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngSwitchCase", "firefox");
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngSwitchCase", "safari");
} }
class send_efflux_dates_component_EffluxDatesComponent extends efflux_dates_component_EffluxDatesComponent {
    constructor(i18nService, platformUtilsService, datePipe) {
        super(i18nService, platformUtilsService, datePipe);
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.datePipe = datePipe;
        this.popOutWindow = new core["t" /* EventEmitter */]();
    }
}
send_efflux_dates_component_EffluxDatesComponent.ɵfac = function EffluxDatesComponent_Factory(t) { return new (t || send_efflux_dates_component_EffluxDatesComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](common["e" /* DatePipe */])); };
send_efflux_dates_component_EffluxDatesComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: send_efflux_dates_component_EffluxDatesComponent, selectors: [["app-send-efflux-dates"]], inputs: { inPopout: "inPopout" }, outputs: { popOutWindow: "popOutWindow" }, features: [core["Rb" /* ɵɵProvidersFeature */]([], [{ provide: fesm2015_forms["b" /* ControlContainer */], useExisting: fesm2015_forms["q" /* NgForm */] }]), core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 41, vars: 13, consts: [[3, "formGroup"], [1, "box"], [1, "box-content"], [4, "ngIf"], ["class", "box-content-row", "appBoxRow", "", 4, "ngIf"], [1, "box-footer"], ["deletionDateCustom", ""], ["expirationDateCustom", ""], ["appBoxRow", "", 1, "box-content-row"], ["for", "deletionDate"], ["id", "deletionDate", "name", "DeletionDateSelect", "formControlName", "selectedDeletionDatePreset", "required", ""], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], [4, "ngTemplateOutlet"], [3, "click"], ["for", "editExpirationDate"], ["id", "expirationDate", "name", "ExpirationDateSelect", "formControlName", "selectedExpirationDatePreset", "required", ""], [1, "flex-label"], ["type", "button", "appStopClick", "", 3, "click", 4, "ngIf"], ["type", "button", "appStopClick", "", 3, "click"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [1, "flex", "flex-grow"], ["id", "deletionDateCustomFallback", "type", "date", "name", "DeletionDateFallback", "formControlName", "fallbackDeletionDate", "required", "", "placeholder", "MM/DD/YYYY", "data-date-format", "mm/dd/yyyy", 3, "readOnly"], ["id", "deletionTimeCustomFallback", "type", "time", "name", "DeletionTimeDate", "formControlName", "fallbackDeletionTime", "required", "", "placeholder", "HH:MM AM/PM", 3, "readOnly"], ["id", "deletionTimeCustomFallback", "formControlName", "fallbackDeletionTime", "name", "SafariDeletionTime"], ["id", "deletionDateCustom", "type", "datetime-local", "name", "DeletionDate", "formControlName", "defaultDeletionDateTime", "required", "", "placeholder", "MM/DD/YYYY HH:MM AM/PM"], ["id", "expirationDateCustomFallback", "type", "date", "name", "ExpirationDateFallback", "formControlName", "fallbackExpirationDate", "placeholder", "MM/DD/YYYY", "data-date-format", "mm/dd/yyyy", 3, "required", "readOnly"], ["id", "expirationTimeCustomFallback", "type", "time", "name", "ExpirationTimeFallback", "formControlName", "fallbackExpirationTime", "placeholder", "HH:MM AM/PM", 3, "required", "readOnly"], ["id", "expirationTimeCustomFallback", "formControlName", "fallbackExpirationTime", "name", "SafariExpirationTime"], ["id", "expirationDateCustom", "type", "datetime-local", "name", "ExpirationDate", "formControlName", "defaultExpirationDateTime", "required", "", "placeholder", "MM/DD/YYYY HH:MM AM/PM", 3, "readOnly"]], template: function EffluxDatesComponent_Template(rf, ctx) { if (rf & 1) {
        core["hc" /* ɵɵelementContainerStart */](0, 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 1);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "div", 2);
        core["Qc" /* ɵɵtext */](5, " ");
        core["Oc" /* ɵɵtemplate */](6, EffluxDatesComponent_ng_container_6_Template, 16, 5, "ng-container", 3);
        core["Qc" /* ɵɵtext */](7, " ");
        core["Oc" /* ɵɵtemplate */](8, EffluxDatesComponent_div_8_Template, 8, 4, "div", 4);
        core["Qc" /* ɵɵtext */](9, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["jc" /* ɵɵelementStart */](11, "div", 5);
        core["Qc" /* ɵɵtext */](12);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["Oc" /* ɵɵtemplate */](14, EffluxDatesComponent_ng_container_14_Template, 10, 9, "ng-container", 3);
        core["Qc" /* ɵɵtext */](15, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["jc" /* ɵɵelementStart */](18, "div", 1);
        core["Qc" /* ɵɵtext */](19, " ");
        core["jc" /* ɵɵelementStart */](20, "div", 2);
        core["Qc" /* ɵɵtext */](21, " ");
        core["Oc" /* ɵɵtemplate */](22, EffluxDatesComponent_ng_container_22_Template, 6, 2, "ng-container", 3);
        core["Qc" /* ɵɵtext */](23, " ");
        core["Oc" /* ɵɵtemplate */](24, EffluxDatesComponent_div_24_Template, 13, 5, "div", 4);
        core["Qc" /* ɵɵtext */](25, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["jc" /* ɵɵelementStart */](27, "div", 5);
        core["Qc" /* ɵɵtext */](28);
        core["vc" /* ɵɵpipe */](29, "i18n");
        core["Oc" /* ɵɵtemplate */](30, EffluxDatesComponent_ng_container_30_Template, 10, 9, "ng-container", 3);
        core["Qc" /* ɵɵtext */](31, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](32, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33, " ");
        core["Oc" /* ɵɵtemplate */](34, EffluxDatesComponent_ng_template_34_Template, 10, 3, "ng-template", null, 6, core["Pc" /* ɵɵtemplateRefExtractor */]);
        core["Qc" /* ɵɵtext */](36, " ");
        core["Oc" /* ɵɵtemplate */](37, EffluxDatesComponent_ng_template_37_Template, 10, 3, "ng-template", null, 7, core["Pc" /* ɵɵtemplateRefExtractor */]);
        core["Qc" /* ɵɵtext */](39, " ");
        core["gc" /* ɵɵelementContainerEnd */]();
        core["Qc" /* ɵɵtext */](40, " ");
    } if (rf & 2) {
        core["Bc" /* ɵɵproperty */]("formGroup", ctx.datesForm);
        core["Sb" /* ɵɵadvance */](6);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.editMode);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.editMode);
        core["Sb" /* ɵɵadvance */](4);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](13, 9, "deletionDateDesc"), " ");
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.inPopout && ctx.browserPath == "firefox" && (ctx.editMode || ctx.selectedDeletionDatePreset.value === 0 && !ctx.editMode));
        core["Sb" /* ɵɵadvance */](8);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.editMode);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.editMode);
        core["Sb" /* ɵɵadvance */](4);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](29, 11, "expirationDateDesc"), " ");
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.inPopout && ctx.browserPath == "firefox" && (ctx.editMode || ctx.selectedExpirationDatePreset.value === 0 && !ctx.editMode));
    } }, directives: [fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["i" /* FormGroupDirective */], common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["y" /* SelectControlValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["g" /* FormControlName */], fesm2015_forms["x" /* RequiredValidator */], common["k" /* NgForOf */], fesm2015_forms["s" /* NgSelectOption */], fesm2015_forms["A" /* ɵangular_packages_forms_forms_z */], common["q" /* NgTemplateOutlet */], StopClickDirective, common["n" /* NgSwitch */], common["o" /* NgSwitchCase */], common["p" /* NgSwitchDefault */], fesm2015_forms["c" /* DefaultValueAccessor */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](send_efflux_dates_component_EffluxDatesComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-send-efflux-dates',
                templateUrl: 'efflux-dates.component.html',
                viewProviders: [{ provide: fesm2015_forms["b" /* ControlContainer */], useExisting: fesm2015_forms["q" /* NgForm */] }],
            }]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: common["e" /* DatePipe */] }]; }, { inPopout: [{
            type: core["D" /* Input */]
        }], popOutWindow: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/send/send-add-edit.component.ts
var send_send_add_edit_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




































function SendAddEditComponent_content_31_app_callout_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 43);
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "sendDisabled"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](3, 4, "sendDisabledWarning"), " ");
} }
function SendAddEditComponent_content_31_app_callout_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 44);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 1, "sendOptionsPolicyInEffect"), " ");
} }
function SendAddEditComponent_content_31_app_callout_6_div_3_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "sendLinuxChromiumFileWarning"));
} }
function SendAddEditComponent_content_31_app_callout_6_div_5_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "sendFirefoxFileWarning"));
} }
function SendAddEditComponent_content_31_app_callout_6_div_7_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div");
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "sendSafariFileWarning"));
} }
function SendAddEditComponent_content_31_app_callout_6_Template(rf, ctx) { if (rf & 1) {
    const _r19 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "app-callout", 45);
    core["qc" /* ɵɵlistener */]("click", function SendAddEditComponent_content_31_app_callout_6_Template_app_callout_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r19); const ctx_r18 = core["uc" /* ɵɵnextContext */](2); return ctx_r18.popOutWindow(); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["Oc" /* ɵɵtemplate */](3, SendAddEditComponent_content_31_app_callout_6_div_3_Template, 3, 3, "div", 10);
    core["Qc" /* ɵɵtext */](4, " ");
    core["Oc" /* ɵɵtemplate */](5, SendAddEditComponent_content_31_app_callout_6_div_5_Template, 3, 3, "div", 10);
    core["Qc" /* ɵɵtext */](6, " ");
    core["Oc" /* ɵɵtemplate */](7, SendAddEditComponent_content_31_app_callout_6_div_7_Template, 3, 3, "div", 10);
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 5, "sendFileCalloutHeader"));
    core["Bc" /* ɵɵproperty */]("clickable", true);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r4.showChromiumFileWarning);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r4.showFirefoxFileWarning);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r4.showSafariFileWarning);
} }
function SendAddEditComponent_content_31_div_27_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r23 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 50);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "input", 51);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_div_27_div_10_Template_input_ngModelChange_2_listener($event) { core["Jc" /* ɵɵrestoreView */](_r23); const ctx_r22 = core["uc" /* ɵɵnextContext */](3); return ctx_r22.send.type = $event; })("change", function SendAddEditComponent_content_31_div_27_div_10_Template_input_change_2_listener() { core["Jc" /* ɵɵrestoreView */](_r23); const ctx_r24 = core["uc" /* ɵɵnextContext */](3); return ctx_r24.typeChanged(); });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "label", 52);
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const o_r21 = ctx.$implicit;
    const ctx_r20 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("name", "Type_", o_r21.value, "");
    core["Dc" /* ɵɵpropertyInterpolate1 */]("id", "type_", o_r21.value, "");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r20.send.type)("value", o_r21.value)("checked", ctx_r20.send.type === o_r21.value)("readonly", ctx_r20.disableSend);
    core["Sb" /* ɵɵadvance */](2);
    core["Dc" /* ɵɵpropertyInterpolate1 */]("for", "type_", o_r21.value, "");
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", o_r21.name, " ");
} }
function SendAddEditComponent_content_31_div_27_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 46);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 47);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "label", 48);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, SendAddEditComponent_content_31_div_27_div_10_Template, 7, 8, "div", 49);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r5 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 2, "sendTypeHeader"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngForOf", ctx_r5.typeOptions);
} }
function SendAddEditComponent_content_31_div_29_div_4_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 47);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 55);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 32);
    core["Qc" /* ɵɵtext */](7);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r25 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "file"));
    core["Sb" /* ɵɵadvance */](4);
    core["Tc" /* ɵɵtextInterpolate2 */]("", ctx_r25.send.file.fileName, " (", ctx_r25.send.file.sizeName, ")");
} }
function SendAddEditComponent_content_31_div_29_div_6_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 47);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "label", 55);
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ec" /* ɵɵelement */](6, "input", 56);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r26 = core["uc" /* ɵɵnextContext */](3);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 2, "file"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("readonly", ctx_r26.disableSend);
} }
function SendAddEditComponent_content_31_div_29_div_9_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 19);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Tc" /* ɵɵtextInterpolate2 */](" ", core["wc" /* ɵɵpipeBind1 */](2, 2, "sendFileDesc"), " ", core["wc" /* ɵɵpipeBind1 */](3, 4, "maxFileSize"), " ");
} }
function SendAddEditComponent_content_31_div_29_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 46);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, SendAddEditComponent_content_31_div_29_div_4_Template, 9, 5, "div", 53);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, SendAddEditComponent_content_31_div_29_div_6_Template, 8, 4, "div", 53);
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["Oc" /* ɵɵtemplate */](9, SendAddEditComponent_content_31_div_29_div_9_Template, 4, 6, "div", 54);
    core["Qc" /* ɵɵtext */](10, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r6 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r6.editMode);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r6.showFileSelector);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r6.showFileSelector);
} }
function SendAddEditComponent_content_31_div_31_Template(rf, ctx) { if (rf & 1) {
    const _r29 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 15);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 16);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "label", 57);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "textarea", 58);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_div_31_Template_textarea_ngModelChange_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r29); const ctx_r28 = core["uc" /* ɵɵnextContext */](2); return ctx_r28.send.text.text = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "div", 19);
    core["Qc" /* ɵɵtext */](15);
    core["vc" /* ɵɵpipe */](16, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](17, " ");
    core["jc" /* ɵɵelementStart */](18, "div", 15);
    core["Qc" /* ɵɵtext */](19, " ");
    core["jc" /* ɵɵelementStart */](20, "div", 22);
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "label", 59);
    core["Qc" /* ɵɵtext */](23);
    core["vc" /* ɵɵpipe */](24, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](25, " ");
    core["jc" /* ɵɵelementStart */](26, "input", 60);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_div_31_Template_input_ngModelChange_26_listener($event) { core["Jc" /* ɵɵrestoreView */](_r29); const ctx_r30 = core["uc" /* ɵɵnextContext */](2); return ctx_r30.send.text.hidden = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](27, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](29, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r7 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 7, "sendTypeText"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r7.send.text.text)("readonly", ctx_r7.disableSend);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](16, 9, "sendTextDesc"), " ");
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](24, 11, "sendHideText"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r7.send.text.hidden)("disabled", ctx_r7.disableSend);
} }
function SendAddEditComponent_content_31_i_57_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 61);
} }
function SendAddEditComponent_content_31_i_59_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 62);
} }
function SendAddEditComponent_content_31_div_87_Template(rf, ctx) { if (rf & 1) {
    const _r32 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 14);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 15);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 16);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "label", 63);
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "input", 64);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_div_87_Template_input_ngModelChange_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r32); const ctx_r31 = core["uc" /* ɵɵnextContext */](2); return ctx_r31.send.accessCount = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r10 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](7);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](8, 2, "currentAccessCount"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r10.send.accessCount);
} }
function SendAddEditComponent_content_31_label_97_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "label", 65);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "newPassword"));
} }
function SendAddEditComponent_content_31_label_99_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "label", 65);
    core["Qc" /* ɵɵtext */](1);
    core["vc" /* ɵɵpipe */](2, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](2, 1, "password"));
} }
const send_add_edit_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
function SendAddEditComponent_content_31_div_104_Template(rf, ctx) { if (rf & 1) {
    const _r34 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 66);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "button", 67);
    core["qc" /* ɵɵlistener */]("click", function SendAddEditComponent_content_31_div_104_Template_button_click_2_listener() { core["Jc" /* ɵɵrestoreView */](_r34); const ctx_r33 = core["uc" /* ɵɵnextContext */](2); return ctx_r33.togglePasswordVisible(); });
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["ec" /* ɵɵelement */](5, "i", 68);
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r13 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](3, 2, "toggleVisibility"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](4, send_add_edit_component_c0, !ctx_r13.showPassword, ctx_r13.showPassword));
} }
function SendAddEditComponent_content_31_div_163_Template(rf, ctx) { if (rf & 1) {
    const _r37 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 69);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 70);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "button", 71, 72);
    core["qc" /* ɵɵlistener */]("click", function SendAddEditComponent_content_31_div_163_Template_button_click_4_listener() { core["Jc" /* ɵɵrestoreView */](_r37); const ctx_r36 = core["uc" /* ɵɵnextContext */](2); return ctx_r36.delete(); });
    core["Qc" /* ɵɵtext */](6, " ");
    core["jc" /* ɵɵelementStart */](7, "div", 73);
    core["Qc" /* ɵɵtext */](8, " ");
    core["jc" /* ɵɵelementStart */](9, "div", 74);
    core["Qc" /* ɵɵtext */](10, " ");
    core["ec" /* ɵɵelement */](11, "i", 75);
    core["Qc" /* ɵɵtext */](12, " ");
    core["ec" /* ɵɵelement */](13, "i", 76);
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "span");
    core["Qc" /* ɵɵtext */](17);
    core["vc" /* ɵɵpipe */](18, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](22, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const _r35 = core["Ic" /* ɵɵreference */](5);
    const ctx_r14 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("appApiAction", ctx_r14.deletePromise);
    core["Sb" /* ɵɵadvance */](7);
    core["Bc" /* ɵɵproperty */]("hidden", _r35.loading);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("hidden", !_r35.loading);
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](18, 4, "deleteSend"));
} }
function SendAddEditComponent_content_31_Template(rf, ctx) { if (rf & 1) {
    const _r39 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "content");
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, SendAddEditComponent_content_31_app_callout_2_Template, 4, 6, "app-callout", 11);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, SendAddEditComponent_content_31_app_callout_4_Template, 3, 3, "app-callout", 12);
    core["Qc" /* ɵɵtext */](5, " ");
    core["Oc" /* ɵɵtemplate */](6, SendAddEditComponent_content_31_app_callout_6_Template, 9, 7, "app-callout", 13);
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 14);
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "div", 15);
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "div", 16);
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "label", 17);
    core["Qc" /* ɵɵtext */](15);
    core["vc" /* ɵɵpipe */](16, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](17, " ");
    core["jc" /* ɵɵelementStart */](18, "input", 18);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_Template_input_ngModelChange_18_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r38 = core["uc" /* ɵɵnextContext */](); return ctx_r38.send.name = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](19, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "div", 19);
    core["Qc" /* ɵɵtext */](23);
    core["vc" /* ɵɵpipe */](24, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](25, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](26, " ");
    core["Oc" /* ɵɵtemplate */](27, SendAddEditComponent_content_31_div_27_Template, 14, 4, "div", 20);
    core["Qc" /* ɵɵtext */](28, " ");
    core["Oc" /* ɵɵtemplate */](29, SendAddEditComponent_content_31_div_29_Template, 11, 3, "div", 20);
    core["Qc" /* ɵɵtext */](30, " ");
    core["Oc" /* ɵɵtemplate */](31, SendAddEditComponent_content_31_div_31_Template, 30, 13, "div", 20);
    core["Qc" /* ɵɵtext */](32, " ");
    core["jc" /* ɵɵelementStart */](33, "div", 14);
    core["Qc" /* ɵɵtext */](34, " ");
    core["jc" /* ɵɵelementStart */](35, "div", 21);
    core["Qc" /* ɵɵtext */](36);
    core["vc" /* ɵɵpipe */](37, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](38, " ");
    core["jc" /* ɵɵelementStart */](39, "div", 15);
    core["Qc" /* ɵɵtext */](40, " ");
    core["jc" /* ɵɵelementStart */](41, "div", 22);
    core["Qc" /* ɵɵtext */](42, " ");
    core["jc" /* ɵɵelementStart */](43, "label", 23);
    core["Qc" /* ɵɵtext */](44);
    core["vc" /* ɵɵpipe */](45, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](46, " ");
    core["jc" /* ɵɵelementStart */](47, "input", 24);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_Template_input_ngModelChange_47_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r40 = core["uc" /* ɵɵnextContext */](); return ctx_r40.copyLink = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](48, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](49, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](50, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](51, " ");
    core["jc" /* ɵɵelementStart */](52, "div", 14);
    core["Qc" /* ɵɵtext */](53, " ");
    core["jc" /* ɵɵelementStart */](54, "div", 25);
    core["qc" /* ɵɵlistener */]("click", function SendAddEditComponent_content_31_Template_div_click_54_listener() { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r41 = core["uc" /* ɵɵnextContext */](); return ctx_r41.showOptions = !ctx_r41.showOptions; });
    core["Qc" /* ɵɵtext */](55);
    core["vc" /* ɵɵpipe */](56, "i18n");
    core["Oc" /* ɵɵtemplate */](57, SendAddEditComponent_content_31_i_57_Template, 1, 0, "i", 26);
    core["Qc" /* ɵɵtext */](58, " ");
    core["Oc" /* ɵɵtemplate */](59, SendAddEditComponent_content_31_i_59_Template, 1, 0, "i", 27);
    core["Qc" /* ɵɵtext */](60, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](61, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](62, " ");
    core["jc" /* ɵɵelementStart */](63, "div", 8);
    core["Qc" /* ɵɵtext */](64, " ");
    core["jc" /* ɵɵelementStart */](65, "app-send-efflux-dates", 28);
    core["qc" /* ɵɵlistener */]("datesChanged", function SendAddEditComponent_content_31_Template_app_send_efflux_dates_datesChanged_65_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r42 = core["uc" /* ɵɵnextContext */](); return ctx_r42.setDates($event); })("popOutWindow", function SendAddEditComponent_content_31_Template_app_send_efflux_dates_popOutWindow_65_listener() { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r43 = core["uc" /* ɵɵnextContext */](); return ctx_r43.popOutWindow(); });
    core["Qc" /* ɵɵtext */](66, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](67, " ");
    core["jc" /* ɵɵelementStart */](68, "div", 14);
    core["Qc" /* ɵɵtext */](69, " ");
    core["jc" /* ɵɵelementStart */](70, "div", 15);
    core["Qc" /* ɵɵtext */](71, " ");
    core["jc" /* ɵɵelementStart */](72, "div", 16);
    core["Qc" /* ɵɵtext */](73, " ");
    core["jc" /* ɵɵelementStart */](74, "label", 29);
    core["Qc" /* ɵɵtext */](75);
    core["vc" /* ɵɵpipe */](76, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](77, " ");
    core["jc" /* ɵɵelementStart */](78, "input", 30);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_Template_input_ngModelChange_78_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r44 = core["uc" /* ɵɵnextContext */](); return ctx_r44.send.maxAccessCount = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](79, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](80, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](81, " ");
    core["jc" /* ɵɵelementStart */](82, "div", 19);
    core["Qc" /* ɵɵtext */](83);
    core["vc" /* ɵɵpipe */](84, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](85, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](86, " ");
    core["Oc" /* ɵɵtemplate */](87, SendAddEditComponent_content_31_div_87_Template, 14, 4, "div", 20);
    core["Qc" /* ɵɵtext */](88, " ");
    core["jc" /* ɵɵelementStart */](89, "div", 14);
    core["Qc" /* ɵɵtext */](90, " ");
    core["jc" /* ɵɵelementStart */](91, "div", 15);
    core["Qc" /* ɵɵtext */](92, " ");
    core["jc" /* ɵɵelementStart */](93, "div", 31);
    core["Qc" /* ɵɵtext */](94, " ");
    core["jc" /* ɵɵelementStart */](95, "div", 32);
    core["Qc" /* ɵɵtext */](96, " ");
    core["Oc" /* ɵɵtemplate */](97, SendAddEditComponent_content_31_label_97_Template, 3, 3, "label", 33);
    core["Qc" /* ɵɵtext */](98, " ");
    core["Oc" /* ɵɵtemplate */](99, SendAddEditComponent_content_31_label_99_Template, 3, 3, "label", 33);
    core["Qc" /* ɵɵtext */](100, " ");
    core["jc" /* ɵɵelementStart */](101, "input", 34);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_Template_input_ngModelChange_101_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r45 = core["uc" /* ɵɵnextContext */](); return ctx_r45.password = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](102, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](103, " ");
    core["Oc" /* ɵɵtemplate */](104, SendAddEditComponent_content_31_div_104_Template, 8, 7, "div", 35);
    core["Qc" /* ɵɵtext */](105, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](106, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](107, " ");
    core["jc" /* ɵɵelementStart */](108, "div", 19);
    core["Qc" /* ɵɵtext */](109);
    core["vc" /* ɵɵpipe */](110, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](111, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](112, " ");
    core["jc" /* ɵɵelementStart */](113, "div", 14);
    core["Qc" /* ɵɵtext */](114, " ");
    core["jc" /* ɵɵelementStart */](115, "div", 15);
    core["Qc" /* ɵɵtext */](116, " ");
    core["jc" /* ɵɵelementStart */](117, "div", 16);
    core["Qc" /* ɵɵtext */](118, " ");
    core["jc" /* ɵɵelementStart */](119, "label", 36);
    core["Qc" /* ɵɵtext */](120);
    core["vc" /* ɵɵpipe */](121, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](122, " ");
    core["jc" /* ɵɵelementStart */](123, "textarea", 37);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_Template_textarea_ngModelChange_123_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r46 = core["uc" /* ɵɵnextContext */](); return ctx_r46.send.notes = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](124, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](125, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](126, " ");
    core["jc" /* ɵɵelementStart */](127, "div", 19);
    core["Qc" /* ɵɵtext */](128);
    core["vc" /* ɵɵpipe */](129, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](130, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](131, " ");
    core["jc" /* ɵɵelementStart */](132, "div", 14);
    core["Qc" /* ɵɵtext */](133, " ");
    core["jc" /* ɵɵelementStart */](134, "div", 15);
    core["Qc" /* ɵɵtext */](135, " ");
    core["jc" /* ɵɵelementStart */](136, "div", 22);
    core["Qc" /* ɵɵtext */](137, " ");
    core["jc" /* ɵɵelementStart */](138, "label", 38);
    core["Qc" /* ɵɵtext */](139);
    core["vc" /* ɵɵpipe */](140, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](141, " ");
    core["jc" /* ɵɵelementStart */](142, "input", 39);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_Template_input_ngModelChange_142_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r47 = core["uc" /* ɵɵnextContext */](); return ctx_r47.send.hideEmail = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](143, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](144, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](145, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](146, " ");
    core["jc" /* ɵɵelementStart */](147, "div", 14);
    core["Qc" /* ɵɵtext */](148, " ");
    core["jc" /* ɵɵelementStart */](149, "div", 15);
    core["Qc" /* ɵɵtext */](150, " ");
    core["jc" /* ɵɵelementStart */](151, "div", 22);
    core["Qc" /* ɵɵtext */](152, " ");
    core["jc" /* ɵɵelementStart */](153, "label", 40);
    core["Qc" /* ɵɵtext */](154);
    core["vc" /* ɵɵpipe */](155, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](156, " ");
    core["jc" /* ɵɵelementStart */](157, "input", 41);
    core["qc" /* ɵɵlistener */]("ngModelChange", function SendAddEditComponent_content_31_Template_input_ngModelChange_157_listener($event) { core["Jc" /* ɵɵrestoreView */](_r39); const ctx_r48 = core["uc" /* ɵɵnextContext */](); return ctx_r48.send.disabled = $event; });
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](158, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](159, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](160, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](161, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](162, " ");
    core["Oc" /* ɵɵtemplate */](163, SendAddEditComponent_content_31_div_163_Template, 23, 6, "div", 42);
    core["Qc" /* ɵɵtext */](164, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.disableHideEmail && !ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.showFilePopoutMessage && ctx_r1.send.type === ctx_r1.sendType.File && !ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](9);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](16, 45, "name"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.send.name)("readonly", ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](24, 47, "sendNameDesc"), " ");
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.editMode);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.send.type === ctx_r1.sendType.File && (ctx_r1.editMode || ctx_r1.showFileSelector));
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.send.type === ctx_r1.sendType.Text);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](37, 49, "share"), " ");
    core["Sb" /* ɵɵadvance */](8);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](45, 51, "sendShareDesc"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.copyLink)("disabled", ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](8);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](56, 53, "options"), " ");
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.showOptions);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.showOptions);
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("hidden", !ctx_r1.showOptions);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("initialDeletionDate", ctx_r1.send.deletionDate)("initialExpirationDate", ctx_r1.send.expirationDate)("editMode", ctx_r1.editMode)("disabled", ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](10);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](76, 55, "maximumAccessCount"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.send.maxAccessCount)("readonly", ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](84, 57, "maximumAccessCountDesc"), " ");
    core["Sb" /* ɵɵadvance */](4);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.editMode);
    core["Sb" /* ɵɵadvance */](10);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.hasPassword);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.hasPassword);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx_r1.showPassword ? "text" : "password");
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.password)("readonly", ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](110, 59, "sendPasswordDesc"), " ");
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](121, 61, "notes"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.send.notes)("readonly", ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](129, 63, "sendNotesDesc"), " ");
    core["Sb" /* ɵɵadvance */](11);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](140, 65, "hideEmail"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.send.hideEmail)("disabled", ctx_r1.disableHideEmail && !ctx_r1.send.hideEmail || ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](12);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](155, 67, "sendDisableDesc"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("ngModel", ctx_r1.send.disabled)("disabled", ctx_r1.disableSend);
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.editMode);
} }
class send_add_edit_component_SendAddEditComponent extends send_add_edit_component_AddEditComponent {
    constructor(i18nService, platformUtilsService, userService, messagingService, policyService, environmentService, datePipe, sendService, route, router, location, popupUtilsService, logService) {
        super(i18nService, platformUtilsService, environmentService, datePipe, sendService, userService, messagingService, policyService, logService);
        this.route = route;
        this.router = router;
        this.location = location;
        this.popupUtilsService = popupUtilsService;
        // Options header
        this.showOptions = false;
        // File visibility
        this.isFirefox = false;
        this.inPopout = false;
        this.inSidebar = false;
        this.isLinux = false;
        this.isUnsupportedMac = false;
    }
    get showFileSelector() {
        return !(this.editMode || this.showFilePopoutMessage);
    }
    get showFilePopoutMessage() {
        return !this.editMode && (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning);
    }
    get showFirefoxFileWarning() {
        return this.isFirefox && !(this.inSidebar || this.inPopout);
    }
    get showSafariFileWarning() {
        return this.isSafari && !this.inPopout;
    }
    // Only show this for Chromium based browsers in Linux and Mac > Big Sur
    get showChromiumFileWarning() {
        return (this.isLinux || this.isUnsupportedMac) && !this.isFirefox && !(this.inSidebar || this.inPopout);
    }
    popOutWindow() {
        this.popupUtilsService.popOut(window);
    }
    ngOnInit() {
        var _a, _b;
        return send_send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            // File visilibity
            this.isFirefox = this.platformUtilsService.isFirefox();
            this.inPopout = this.popupUtilsService.inPopout(window);
            this.inSidebar = this.popupUtilsService.inSidebar(window);
            this.isLinux = ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent.indexOf('Linux')) !== -1;
            this.isUnsupportedMac = this.platformUtilsService.isChrome() && ((_b = window === null || window === void 0 ? void 0 : window.navigator) === null || _b === void 0 ? void 0 : _b.appVersion.includes('Mac OS X 11'));
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => send_send_add_edit_component_awaiter(this, void 0, void 0, function* () {
                if (params.sendId) {
                    this.sendId = params.sendId;
                }
                if (params.type) {
                    const type = parseInt(params.type, null);
                    this.type = type;
                }
                yield this.load();
            }));
            window.setTimeout(() => {
                if (!this.editMode) {
                    document.getElementById('name').focus();
                }
            }, 200);
        });
    }
    submit() {
        const _super = Object.create(null, {
            submit: { get: () => super.submit }
        });
        return send_send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (yield _super.submit.call(this)) {
                this.cancel();
                return true;
            }
            return false;
        });
    }
    delete() {
        const _super = Object.create(null, {
            delete: { get: () => super.delete }
        });
        return send_send_add_edit_component_awaiter(this, void 0, void 0, function* () {
            if (yield _super.delete.call(this)) {
                this.cancel();
                return true;
            }
            return false;
        });
    }
    cancel() {
        // If true, the window was pop'd out on the add-send page. location.back will not work
        if (window.previousPopupUrl.startsWith('/add-send')) {
            this.router.navigate(['tabs/send']);
        }
        else {
            this.location.back();
        }
    }
}
send_add_edit_component_SendAddEditComponent.ɵfac = function SendAddEditComponent_Factory(t) { return new (t || send_add_edit_component_SendAddEditComponent)(core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](common["e" /* DatePipe */]), core["dc" /* ɵɵdirectiveInject */](SendService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */]), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
send_add_edit_component_SendAddEditComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: send_add_edit_component_SendAddEditComponent, selectors: [["app-send-add-edit"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 34, vars: 12, consts: [[3, "appApiAction", "ngSubmit"], ["form", ""], [1, "left"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "center"], [1, "title"], [1, "right"], ["type", "submit", "appBlurClick", "", 3, "disabled"], [3, "hidden"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-lg", "fa-spin", 3, "hidden"], [4, "ngIf"], ["type", "warning", 3, "title", 4, "ngIf"], ["type", "info", 4, "ngIf"], ["type", "warning", "icon", "fa fa-external-link fa-rotate-270 fa-fw", 3, "clickable", "title", "click", 4, "ngIf"], [1, "box"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row"], ["for", "name"], ["id", "name", "type", "text", "name", "Name", 3, "ngModel", "readonly", "ngModelChange"], [1, "box-footer"], ["class", "box", 4, "ngIf"], [1, "box-header"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-checkbox"], ["for", "copyOnSave"], ["id", "copyOnSave", "type", "checkbox", "name", "CopyOnSave", 3, "ngModel", "disabled", "ngModelChange"], [1, "box-header-expandable", 3, "click"], ["class", "fa fa-chevron-down fa-sm icon", 4, "ngIf"], ["class", "fa fa-chevron-up fa-sm icon", 4, "ngIf"], [3, "initialDeletionDate", "initialExpirationDate", "editMode", "disabled", "datesChanged", "popOutWindow"], ["for", "maximumAccessCount"], ["id", "maximumAccessCount", "min", "1", "type", "number", "name", "MaximumAccessCount", 3, "ngModel", "readonly", "ngModelChange"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-flex"], [1, "row-main"], ["for", "password", 4, "ngIf"], ["id", "password", "name", "Password", "appInputVerbatim", "", 1, "monospaced", 3, "type", "ngModel", "readonly", "ngModelChange"], ["class", "action-buttons", 4, "ngIf"], ["for", "notes"], ["id", "notes", "name", "Notes", "rows", "6", 3, "ngModel", "readonly", "ngModelChange"], ["for", "hideEmail"], ["id", "hideEmail", "type", "checkbox", "name", "HideEmail", 3, "ngModel", "disabled", "ngModelChange"], ["for", "disableSend"], ["id", "disableSend", "type", "checkbox", "name", "DisableSend", 3, "ngModel", "disabled", "ngModelChange"], ["class", "box list", 4, "ngIf"], ["type", "warning", 3, "title"], ["type", "info"], ["type", "warning", "icon", "fa fa-external-link fa-rotate-270 fa-fw", 3, "clickable", "title", "click"], [1, "box-content", "no-hover"], [1, "box-content-row"], ["for", "sendTypeOptions"], ["class", "radio-group text-default", "appBoxRow", "", "name", "SendTypeOptions", 4, "ngFor", "ngForOf"], ["appBoxRow", "", "name", "SendTypeOptions", 1, "radio-group", "text-default"], ["type", "radio", 3, "ngModel", "name", "id", "value", "checked", "readonly", "ngModelChange", "change"], [3, "for"], ["class", "box-content-row", 4, "ngIf"], ["class", "box-footer", 4, "ngIf"], ["for", "file"], ["type", "file", "id", "file", "name", "file", "required", "", 3, "readonly"], ["for", "text"], ["id", "text", "name", "Text", "rows", "6", 3, "ngModel", "readonly", "ngModelChange"], ["for", "hideText"], ["id", "hideText", "type", "checkbox", "name", "HideText", 3, "ngModel", "disabled", "ngModelChange"], [1, "fa", "fa-chevron-down", "fa-sm", "icon"], [1, "fa", "fa-chevron-up", "fa-sm", "icon"], ["for", "currentAccessCount"], ["id", "currentAccessCount", "readonly", "readonly", "type", "text", "name", "CurrentAccessCount", 3, "ngModel", "ngModelChange"], ["for", "password"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], [1, "box", "list"], [1, "box-content", "single-line"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", 3, "appApiAction", "click"], ["deleteBtn", ""], [1, "row-main", "text-danger"], ["aria-hidden", "true", 1, "icon", "text-danger"], [1, "fa", "fa-trash-o", "fa-lg", "fa-fw", 3, "hidden"], [1, "fa", "fa-spinner", "fa-spin", "fa-lg", "fa-fw", 3, "hidden"]], template: function SendAddEditComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "form", 0, 1);
        core["qc" /* ɵɵlistener */]("ngSubmit", function SendAddEditComponent_Template_form_ngSubmit_0_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](2, " ");
        core["jc" /* ɵɵelementStart */](3, "header");
        core["Qc" /* ɵɵtext */](4, " ");
        core["jc" /* ɵɵelementStart */](5, "div", 2);
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "button", 3);
        core["qc" /* ɵɵlistener */]("click", function SendAddEditComponent_Template_button_click_7_listener() { return ctx.cancel(); });
        core["Qc" /* ɵɵtext */](8);
        core["vc" /* ɵɵpipe */](9, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "span", 5);
        core["Qc" /* ɵɵtext */](15);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](16, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](17, " ");
        core["jc" /* ɵɵelementStart */](18, "div", 6);
        core["Qc" /* ɵɵtext */](19, " ");
        core["jc" /* ɵɵelementStart */](20, "button", 7);
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "span", 8);
        core["Qc" /* ɵɵtext */](23);
        core["vc" /* ɵɵpipe */](24, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](25, " ");
        core["ec" /* ɵɵelement */](26, "i", 9);
        core["Qc" /* ɵɵtext */](27, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](28, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["Oc" /* ɵɵtemplate */](31, SendAddEditComponent_content_31_Template, 165, 69, "content", 10);
        core["Qc" /* ɵɵtext */](32, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](33, " ");
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](1);
        core["Bc" /* ɵɵproperty */]("appApiAction", ctx.formPromise);
        core["Sb" /* ɵɵadvance */](8);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](9, 8, "cancel"));
        core["Sb" /* ɵɵadvance */](7);
        core["Rc" /* ɵɵtextInterpolate */](ctx.title);
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("disabled", _r0.loading || ctx.disableSend);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("hidden", _r0.loading);
        core["Sb" /* ɵɵadvance */](1);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](24, 10, "save"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("hidden", !_r0.loading);
        core["Sb" /* ɵɵadvance */](5);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.send);
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], api_action_directive_ApiActionDirective, BlurClickDirective, common["l" /* NgIf */], BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], fesm2015_forms["a" /* CheckboxControlValueAccessor */], send_efflux_dates_component_EffluxDatesComponent, fesm2015_forms["t" /* NumberValueAccessor */], InputVerbatimDirective, CalloutComponent, common["k" /* NgForOf */], fesm2015_forms["u" /* RadioControlValueAccessor */], StopClickDirective, A11yTitleDirective, common["j" /* NgClass */]], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](send_add_edit_component_SendAddEditComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-send-add-edit',
                templateUrl: 'send-add-edit.component.html',
            }]
    }], function () { return [{ type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: UserService }, { type: messaging_service["a" /* MessagingService */] }, { type: PolicyService }, { type: EnvironmentService }, { type: common["e" /* DatePipe */] }, { type: SendService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: fesm2015_router["e" /* Router */] }, { type: common["h" /* Location */] }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/send/send.component.ts
var send_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




















class send_component_SendComponent {
    constructor(sendService, i18nService, platformUtilsService, environmentService, ngZone, searchService, policyService, userService, logService) {
        this.sendService = sendService;
        this.i18nService = i18nService;
        this.platformUtilsService = platformUtilsService;
        this.environmentService = environmentService;
        this.ngZone = ngZone;
        this.searchService = searchService;
        this.policyService = policyService;
        this.userService = userService;
        this.logService = logService;
        this.disableSend = false;
        this.sendType = sendType["a" /* SendType */];
        this.loaded = false;
        this.loading = true;
        this.refreshing = false;
        this.expired = false;
        this.type = null;
        this.sends = [];
        this.filteredSends = [];
        this.searchPending = false;
        this.hasSearched = false; // search() function called - returns true if text qualifies for search
    }
    ngOnInit() {
        return send_component_awaiter(this, void 0, void 0, function* () {
            this.disableSend = yield this.policyService.policyAppliesToUser(policyType["a" /* PolicyType */].DisableSend);
        });
    }
    load(filter = null) {
        return send_component_awaiter(this, void 0, void 0, function* () {
            this.loading = true;
            const sends = yield this.sendService.getAllDecrypted();
            this.sends = sends;
            if (this.onSuccessfulLoad != null) {
                yield this.onSuccessfulLoad();
            }
            else {
                // Default action
                this.selectAll();
            }
            this.loading = false;
            this.loaded = true;
        });
    }
    reload(filter = null) {
        return send_component_awaiter(this, void 0, void 0, function* () {
            this.loaded = false;
            this.sends = [];
            yield this.load(filter);
        });
    }
    refresh() {
        return send_component_awaiter(this, void 0, void 0, function* () {
            try {
                this.refreshing = true;
                yield this.reload(this.filter);
            }
            finally {
                this.refreshing = false;
            }
        });
    }
    applyFilter(filter = null) {
        return send_component_awaiter(this, void 0, void 0, function* () {
            this.filter = filter;
            yield this.search(null);
        });
    }
    search(timeout = null) {
        return send_component_awaiter(this, void 0, void 0, function* () {
            this.searchPending = false;
            if (this.searchTimeout != null) {
                clearTimeout(this.searchTimeout);
            }
            if (timeout == null) {
                this.hasSearched = this.searchService.isSearchable(this.searchText);
                this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));
                this.applyTextSearch();
                return;
            }
            this.searchPending = true;
            this.searchTimeout = setTimeout(() => send_component_awaiter(this, void 0, void 0, function* () {
                this.hasSearched = this.searchService.isSearchable(this.searchText);
                this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));
                this.applyTextSearch();
                this.searchPending = false;
            }), timeout);
        });
    }
    removePassword(s) {
        return send_component_awaiter(this, void 0, void 0, function* () {
            if (this.actionPromise != null || s.password == null) {
                return;
            }
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('removePasswordConfirmation'), this.i18nService.t('removePassword'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                this.actionPromise = this.sendService.removePasswordWithServer(s.id);
                yield this.actionPromise;
                if (this.onSuccessfulRemovePassword != null) {
                    this.onSuccessfulRemovePassword();
                }
                else {
                    // Default actions
                    this.platformUtilsService.showToast('success', null, this.i18nService.t('removedPassword'));
                    yield this.load();
                }
            }
            catch (e) {
                this.logService.error(e);
            }
            this.actionPromise = null;
        });
    }
    delete(s) {
        return send_component_awaiter(this, void 0, void 0, function* () {
            if (this.actionPromise != null) {
                return false;
            }
            const confirmed = yield this.platformUtilsService.showDialog(this.i18nService.t('deleteSendConfirmation'), this.i18nService.t('deleteSend'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');
            if (!confirmed) {
                return false;
            }
            try {
                this.actionPromise = this.sendService.deleteWithServer(s.id);
                yield this.actionPromise;
                if (this.onSuccessfulDelete != null) {
                    this.onSuccessfulDelete();
                }
                else {
                    // Default actions
                    this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));
                    yield this.refresh();
                }
            }
            catch (e) {
                this.logService.error(e);
            }
            this.actionPromise = null;
            return true;
        });
    }
    copy(s) {
        const sendLinkBaseUrl = this.environmentService.getSendUrl();
        const link = sendLinkBaseUrl + s.accessId + '/' + s.urlB64Key;
        this.platformUtilsService.copyToClipboard(link);
        this.platformUtilsService.showToast('success', null, this.i18nService.t('valueCopied', this.i18nService.t('sendLink')));
    }
    searchTextChanged() {
        this.search(200);
    }
    selectAll() {
        this.clearSelections();
        this.selectedAll = true;
        this.applyFilter(null);
    }
    selectType(type) {
        this.clearSelections();
        this.selectedType = type;
        this.applyFilter(s => s.type === type);
    }
    clearSelections() {
        this.selectedAll = false;
        this.selectedType = null;
    }
    applyTextSearch() {
        if (this.searchText != null) {
            this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);
        }
    }
}
send_component_SendComponent.ɵfac = function SendComponent_Factory(t) { return new (t || send_component_SendComponent)(core["dc" /* ɵɵdirectiveInject */](SendService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](SearchService), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
send_component_SendComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: send_component_SendComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](send_component_SendComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: SendService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: EnvironmentService }, { type: core["M" /* NgZone */] }, { type: SearchService }, { type: PolicyService }, { type: UserService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/components/send-list.component.ts








function SendListComponent_button_0_i_8_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 16);
} }
function SendListComponent_button_0_i_10_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 17);
} }
function SendListComponent_button_0_ng_container_18_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 18);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 19);
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](3, 2, "disabled"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 4, "disabled"));
} }
function SendListComponent_button_0_ng_container_20_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 20);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 19);
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](3, 2, "passwordProtected"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 4, "passwordProtected"));
} }
function SendListComponent_button_0_ng_container_22_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 21);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 19);
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](3, 2, "maxAccessCountReached"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 4, "maxAccessCountReached"));
} }
function SendListComponent_button_0_ng_container_24_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 22);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 19);
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](3, 2, "expired"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 4, "expired"));
} }
function SendListComponent_button_0_ng_container_26_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 23);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["Qc" /* ɵɵtext */](4, " ");
    core["jc" /* ɵɵelementStart */](5, "span", 19);
    core["Qc" /* ɵɵtext */](6);
    core["vc" /* ɵɵpipe */](7, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](3, 2, "pendingDeletion"));
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](7, 4, "pendingDeletion"));
} }
const send_list_component_c0 = function (a0) { return { "disabled": a0 }; };
function SendListComponent_button_0_span_43_Template(rf, ctx) { if (rf & 1) {
    const _r12 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "span", 24);
    core["qc" /* ɵɵlistener */]("click", function SendListComponent_button_0_span_43_Template_span_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r12); const s_r1 = core["uc" /* ɵɵnextContext */]().$implicit; const ctx_r10 = core["uc" /* ɵɵnextContext */](); return ctx_r10.removePassword(s_r1); });
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2, " ");
    core["ec" /* ɵɵelement */](3, "i", 25);
    core["Qc" /* ɵɵtext */](4, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r9 = core["uc" /* ɵɵnextContext */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](1, 2, "removePassword"));
    core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](4, send_list_component_c0, ctx_r9.disabledByPolicy));
} }
function SendListComponent_button_0_Template(rf, ctx) { if (rf & 1) {
    const _r14 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "button", 1);
    core["qc" /* ɵɵlistener */]("click", function SendListComponent_button_0_Template_button_click_0_listener() { core["Jc" /* ɵɵrestoreView */](_r14); const s_r1 = ctx.$implicit; const ctx_r13 = core["uc" /* ɵɵnextContext */](); return ctx_r13.selectSend(s_r1); });
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 2);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 3);
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "div", 4);
    core["Qc" /* ɵɵtext */](7, " ");
    core["Oc" /* ɵɵtemplate */](8, SendListComponent_button_0_i_8_Template, 1, 0, "i", 5);
    core["Qc" /* ɵɵtext */](9, " ");
    core["Oc" /* ɵɵtemplate */](10, SendListComponent_button_0_i_10_Template, 1, 0, "i", 6);
    core["Qc" /* ɵɵtext */](11, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "div", 7);
    core["Qc" /* ɵɵtext */](15, " ");
    core["jc" /* ɵɵelementStart */](16, "span", 8);
    core["Qc" /* ɵɵtext */](17);
    core["Oc" /* ɵɵtemplate */](18, SendListComponent_button_0_ng_container_18_Template, 9, 6, "ng-container", 9);
    core["Qc" /* ɵɵtext */](19, " ");
    core["Oc" /* ɵɵtemplate */](20, SendListComponent_button_0_ng_container_20_Template, 9, 6, "ng-container", 9);
    core["Qc" /* ɵɵtext */](21, " ");
    core["Oc" /* ɵɵtemplate */](22, SendListComponent_button_0_ng_container_22_Template, 9, 6, "ng-container", 9);
    core["Qc" /* ɵɵtext */](23, " ");
    core["Oc" /* ɵɵtemplate */](24, SendListComponent_button_0_ng_container_24_Template, 9, 6, "ng-container", 9);
    core["Qc" /* ɵɵtext */](25, " ");
    core["Oc" /* ɵɵtemplate */](26, SendListComponent_button_0_ng_container_26_Template, 9, 6, "ng-container", 9);
    core["Qc" /* ɵɵtext */](27, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["jc" /* ɵɵelementStart */](29, "span", 10);
    core["Qc" /* ɵɵtext */](30);
    core["vc" /* ɵɵpipe */](31, "date");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](32, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](33, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](34, " ");
    core["jc" /* ɵɵelementStart */](35, "div", 11);
    core["Qc" /* ɵɵtext */](36, " ");
    core["jc" /* ɵɵelementStart */](37, "span", 12);
    core["qc" /* ɵɵlistener */]("click", function SendListComponent_button_0_Template_span_click_37_listener() { core["Jc" /* ɵɵrestoreView */](_r14); const s_r1 = ctx.$implicit; const ctx_r15 = core["uc" /* ɵɵnextContext */](); return ctx_r15.copySendLink(s_r1); });
    core["vc" /* ɵɵpipe */](38, "i18n");
    core["Qc" /* ɵɵtext */](39, " ");
    core["ec" /* ɵɵelement */](40, "i", 13);
    core["Qc" /* ɵɵtext */](41, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](42, " ");
    core["Oc" /* ɵɵtemplate */](43, SendListComponent_button_0_span_43_Template, 5, 6, "span", 14);
    core["Qc" /* ɵɵtext */](44, " ");
    core["jc" /* ɵɵelementStart */](45, "span", 12);
    core["qc" /* ɵɵlistener */]("click", function SendListComponent_button_0_Template_span_click_45_listener() { core["Jc" /* ɵɵrestoreView */](_r14); const s_r1 = ctx.$implicit; const ctx_r16 = core["uc" /* ɵɵnextContext */](); return ctx_r16.delete(s_r1); });
    core["vc" /* ɵɵpipe */](46, "i18n");
    core["Qc" /* ɵɵtext */](47, " ");
    core["ec" /* ɵɵelement */](48, "i", 15);
    core["Qc" /* ɵɵtext */](49, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](50, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](51, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const s_r1 = ctx.$implicit;
    const ctx_r0 = core["uc" /* ɵɵnextContext */]();
    core["Ec" /* ɵɵpropertyInterpolate2 */]("title", "", ctx_r0.title, " - ", s_r1.name, "");
    core["Sb" /* ɵɵadvance */](8);
    core["Bc" /* ɵɵproperty */]("ngIf", s_r1.type === ctx_r0.sendType.Text);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", s_r1.type === ctx_r0.sendType.File);
    core["Sb" /* ɵɵadvance */](7);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", s_r1.name, " ");
    core["Sb" /* ɵɵadvance */](1);
    core["Bc" /* ɵɵproperty */]("ngIf", s_r1.disabled);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", s_r1.password);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", s_r1.maxAccessCountReached);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", s_r1.expired);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", s_r1.pendingDelete);
    core["Sb" /* ɵɵadvance */](4);
    core["Rc" /* ɵɵtextInterpolate */](core["xc" /* ɵɵpipeBind2 */](31, 14, s_r1.deletionDate, "medium"));
    core["Sb" /* ɵɵadvance */](7);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](38, 17, "copySendLink"));
    core["Sb" /* ɵɵadvance */](6);
    core["Bc" /* ɵɵproperty */]("ngIf", s_r1.password);
    core["Sb" /* ɵɵadvance */](2);
    core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](46, 19, "delete"));
} }
class send_list_component_SendListComponent {
    constructor() {
        this.disabledByPolicy = false;
        this.onSelected = new core["t" /* EventEmitter */]();
        this.onCopySendLink = new core["t" /* EventEmitter */]();
        this.onRemovePassword = new core["t" /* EventEmitter */]();
        this.onDeleteSend = new core["t" /* EventEmitter */]();
        this.sendType = sendType["a" /* SendType */];
    }
    selectSend(s) {
        this.onSelected.emit(s);
    }
    copySendLink(s) {
        this.onCopySendLink.emit(s);
    }
    removePassword(s) {
        this.onRemovePassword.emit(s);
    }
    delete(s) {
        this.onDeleteSend.emit(s);
    }
}
send_list_component_SendListComponent.ɵfac = function SendListComponent_Factory(t) { return new (t || send_list_component_SendListComponent)(); };
send_list_component_SendListComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: send_list_component_SendListComponent, selectors: [["app-send-list"]], inputs: { sends: "sends", title: "title", disabledByPolicy: "disabledByPolicy" }, outputs: { onSelected: "onSelected", onCopySendLink: "onCopySendLink", onRemovePassword: "onRemovePassword", onDeleteSend: "onDeleteSend" }, decls: 2, vars: 1, consts: [["type", "button", "appStopClick", "", "class", "box-content-row box-content-row-flex", 3, "title", "click", 4, "ngFor", "ngForOf"], ["type", "button", "appStopClick", "", 1, "box-content-row", "box-content-row-flex", 3, "title", "click"], [1, "row-main"], [1, "app-vault-icon"], ["aria-hidden", "true", 1, "icon"], ["class", "fa fa-fw fa-lg fa-file-text-o", 4, "ngIf"], ["class", "fa fa-fw fa-lg fa-file-o", 4, "ngIf"], [1, "row-main-content"], [1, "text"], [4, "ngIf"], [1, "detail"], [1, "action-buttons"], ["appStopClick", "", "appStopProp", "", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-copy"], ["class", "row-btn", "appStopClick", "", "appStopProp", "", 3, "ngClass", "appA11yTitle", "click", 4, "ngIf"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-trash-o"], [1, "fa", "fa-fw", "fa-lg", "fa-file-text-o"], [1, "fa", "fa-fw", "fa-lg", "fa-file-o"], ["aria-hidden", "true", 1, "fa", "fa-warning", "text-muted", 3, "title"], [1, "sr-only"], ["aria-hidden", "true", 1, "fa", "fa-key", "text-muted", 3, "title"], ["aria-hidden", "true", 1, "fa", "fa-ban", "text-muted", 3, "title"], ["aria-hidden", "true", 1, "fa", "fa-clock-o", "text-muted", 3, "title"], ["aria-hidden", "true", 1, "fa", "fa-trash", "text-muted", 3, "title"], ["appStopClick", "", "appStopProp", "", 1, "row-btn", 3, "ngClass", "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", "fa-undo"]], template: function SendListComponent_Template(rf, ctx) { if (rf & 1) {
        core["Oc" /* ɵɵtemplate */](0, SendListComponent_button_0_Template, 52, 21, "button", 0);
        core["Qc" /* ɵɵtext */](1, " ");
    } if (rf & 2) {
        core["Bc" /* ɵɵproperty */]("ngForOf", ctx.sends);
    } }, directives: [common["k" /* NgForOf */], StopClickDirective, common["l" /* NgIf */], StopPropDirective, A11yTitleDirective, common["j" /* NgClass */]], pipes: [common["e" /* DatePipe */], I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](send_list_component_SendListComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-send-list',
                templateUrl: 'send-list.component.html',
            }]
    }], null, { sends: [{
            type: core["D" /* Input */]
        }], title: [{
            type: core["D" /* Input */]
        }], disabledByPolicy: [{
            type: core["D" /* Input */]
        }], onSelected: [{
            type: core["O" /* Output */]
        }], onCopySendLink: [{
            type: core["O" /* Output */]
        }], onRemovePassword: [{
            type: core["O" /* Output */]
        }], onDeleteSend: [{
            type: core["O" /* Output */]
        }] }); })();

// CONCATENATED MODULE: ./src/popup/send/send-groupings.component.ts
var send_groupings_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







































function SendGroupingsComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 11);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "app-pop-out");
    core["Qc" /* ɵɵtext */](3, " ");
    core["ic" /* ɵɵelementEnd */]();
} }
function SendGroupingsComponent_app_callout_24_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 12);
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "sendDisabled"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](3, 4, "sendDisabledWarning"), " ");
} }
function SendGroupingsComponent_div_26_i_2_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 15);
} }
function SendGroupingsComponent_div_26_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r8 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["ec" /* ɵɵelement */](2, "i", 16);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "p");
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "button", 17);
    core["qc" /* ɵɵlistener */]("click", function SendGroupingsComponent_div_26_ng_container_4_Template_button_click_8_listener() { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r7 = core["uc" /* ɵɵnextContext */](2); return ctx_r7.addSend(); });
    core["Qc" /* ɵɵtext */](9);
    core["vc" /* ɵɵpipe */](10, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](11, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r6 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](6, 3, "noItemsInList"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("disabled", ctx_r6.disableSend);
    core["Sb" /* ɵɵadvance */](1);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](10, 5, "addSend"));
} }
function SendGroupingsComponent_div_26_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 13);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, SendGroupingsComponent_div_26_i_2_Template, 1, 0, "i", 14);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, SendGroupingsComponent_div_26_ng_container_4_Template, 12, 7, "ng-container", 10);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r2.loaded);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r2.loaded);
} }
function SendGroupingsComponent_ng_container_28_Template(rf, ctx) { if (rf & 1) {
    const _r10 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 18);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "div", 19);
    core["Qc" /* ɵɵtext */](5);
    core["vc" /* ɵɵpipe */](6, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 20);
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "button", 21);
    core["qc" /* ɵɵlistener */]("click", function SendGroupingsComponent_ng_container_28_Template_button_click_10_listener() { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r9 = core["uc" /* ɵɵnextContext */](); return ctx_r9.selectType(ctx_r9.sendType.Text); });
    core["Qc" /* ɵɵtext */](11, " ");
    core["jc" /* ɵɵelementStart */](12, "div", 22);
    core["Qc" /* ɵɵtext */](13, " ");
    core["jc" /* ɵɵelementStart */](14, "div", 23);
    core["ec" /* ɵɵelement */](15, "i", 24);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](16, " ");
    core["jc" /* ɵɵelementStart */](17, "span", 25);
    core["Qc" /* ɵɵtext */](18);
    core["vc" /* ɵɵpipe */](19, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](20, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](21, " ");
    core["jc" /* ɵɵelementStart */](22, "span", 26);
    core["Qc" /* ɵɵtext */](23);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](24, " ");
    core["jc" /* ɵɵelementStart */](25, "span");
    core["ec" /* ɵɵelement */](26, "i", 27);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](27, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](28, " ");
    core["jc" /* ɵɵelementStart */](29, "button", 21);
    core["qc" /* ɵɵlistener */]("click", function SendGroupingsComponent_ng_container_28_Template_button_click_29_listener() { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r11 = core["uc" /* ɵɵnextContext */](); return ctx_r11.selectType(ctx_r11.sendType.File); });
    core["Qc" /* ɵɵtext */](30, " ");
    core["jc" /* ɵɵelementStart */](31, "div", 22);
    core["Qc" /* ɵɵtext */](32, " ");
    core["jc" /* ɵɵelementStart */](33, "div", 23);
    core["ec" /* ɵɵelement */](34, "i", 28);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](35, " ");
    core["jc" /* ɵɵelementStart */](36, "span", 25);
    core["Qc" /* ɵɵtext */](37);
    core["vc" /* ɵɵpipe */](38, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](39, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](40, " ");
    core["jc" /* ɵɵelementStart */](41, "span", 26);
    core["Qc" /* ɵɵtext */](42);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](43, " ");
    core["jc" /* ɵɵelementStart */](44, "span");
    core["ec" /* ɵɵelement */](45, "i", 27);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](46, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](47, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](48, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](49, " ");
    core["jc" /* ɵɵelementStart */](50, "div", 18);
    core["Qc" /* ɵɵtext */](51, " ");
    core["jc" /* ɵɵelementStart */](52, "div", 19);
    core["Qc" /* ɵɵtext */](53);
    core["vc" /* ɵɵpipe */](54, "i18n");
    core["jc" /* ɵɵelementStart */](55, "div", 29);
    core["Qc" /* ɵɵtext */](56);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](57, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](58, " ");
    core["jc" /* ɵɵelementStart */](59, "div", 30);
    core["Qc" /* ɵɵtext */](60, " ");
    core["jc" /* ɵɵelementStart */](61, "app-send-list", 31);
    core["qc" /* ɵɵlistener */]("onSelected", function SendGroupingsComponent_ng_container_28_Template_app_send_list_onSelected_61_listener($event) { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r12 = core["uc" /* ɵɵnextContext */](); return ctx_r12.selectSend($event); })("onCopySendLink", function SendGroupingsComponent_ng_container_28_Template_app_send_list_onCopySendLink_61_listener($event) { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r13 = core["uc" /* ɵɵnextContext */](); return ctx_r13.copy($event); })("onRemovePassword", function SendGroupingsComponent_ng_container_28_Template_app_send_list_onRemovePassword_61_listener($event) { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r14 = core["uc" /* ɵɵnextContext */](); return ctx_r14.removePassword($event); })("onDeleteSend", function SendGroupingsComponent_ng_container_28_Template_app_send_list_onDeleteSend_61_listener($event) { core["Jc" /* ɵɵrestoreView */](_r10); const ctx_r15 = core["uc" /* ɵɵnextContext */](); return ctx_r15.delete($event); });
    core["vc" /* ɵɵpipe */](62, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](63, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](64, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](65, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r3 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](5);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](6, 10, "types"), " ");
    core["Sb" /* ɵɵadvance */](13);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](19, 12, "sendTypeText"));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r3.typeCounts.get(ctx_r3.sendType.Text) || 0);
    core["Sb" /* ɵɵadvance */](14);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](38, 14, "sendTypeFile"));
    core["Sb" /* ɵɵadvance */](5);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r3.typeCounts.get(ctx_r3.sendType.File) || 0);
    core["Sb" /* ɵɵadvance */](11);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](54, 16, "allSends"), " ");
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r3.sends.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](62, 18, "editItem"));
    core["Bc" /* ɵɵproperty */]("sends", ctx_r3.sends)("disabledByPolicy", ctx_r3.disableSend);
} }
function SendGroupingsComponent_ng_container_30_div_2_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 13);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 1, "noItemsInList"));
} }
function SendGroupingsComponent_ng_container_30_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r19 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 33);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 30);
    core["Qc" /* ɵɵtext */](3, " ");
    core["jc" /* ɵɵelementStart */](4, "app-send-list", 31);
    core["qc" /* ɵɵlistener */]("onSelected", function SendGroupingsComponent_ng_container_30_div_4_Template_app_send_list_onSelected_4_listener($event) { core["Jc" /* ɵɵrestoreView */](_r19); const ctx_r18 = core["uc" /* ɵɵnextContext */](2); return ctx_r18.selectSend($event); })("onCopySendLink", function SendGroupingsComponent_ng_container_30_div_4_Template_app_send_list_onCopySendLink_4_listener($event) { core["Jc" /* ɵɵrestoreView */](_r19); const ctx_r20 = core["uc" /* ɵɵnextContext */](2); return ctx_r20.copy($event); })("onRemovePassword", function SendGroupingsComponent_ng_container_30_div_4_Template_app_send_list_onRemovePassword_4_listener($event) { core["Jc" /* ɵɵrestoreView */](_r19); const ctx_r21 = core["uc" /* ɵɵnextContext */](2); return ctx_r21.removePassword($event); })("onDeleteSend", function SendGroupingsComponent_ng_container_30_div_4_Template_app_send_list_onDeleteSend_4_listener($event) { core["Jc" /* ɵɵrestoreView */](_r19); const ctx_r22 = core["uc" /* ɵɵnextContext */](2); return ctx_r22.delete($event); });
    core["vc" /* ɵɵpipe */](5, "i18n");
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](8, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r17 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](4);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](5, 3, "editItem"));
    core["Bc" /* ɵɵproperty */]("sends", ctx_r17.filteredSends)("disabledByPolicy", ctx_r17.disableSend);
} }
function SendGroupingsComponent_ng_container_30_Template(rf, ctx) { if (rf & 1) {
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, SendGroupingsComponent_ng_container_30_div_2_Template, 6, 3, "div", 9);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, SendGroupingsComponent_ng_container_30_div_4_Template, 9, 5, "div", 32);
    core["Qc" /* ɵɵtext */](5, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r4.filteredSends || !ctx_r4.filteredSends.length);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r4.filteredSends && ctx_r4.filteredSends.length > 0);
} }
const send_groupings_component_c0 = function (a0, a1) { return { "flex": a0, "tab-page": a1 }; };
const send_groupings_component_ComponentId = 'SendComponent';
const send_groupings_component_ScopeStateId = send_groupings_component_ComponentId + 'Scope';
class send_groupings_component_SendGroupingsComponent extends send_component_SendComponent {
    constructor(sendService, i18nService, platformUtilsService, environmentService, ngZone, policyService, userService, searchService, popupUtils, stateService, router, syncService, changeDetectorRef, broadcasterService, logService) {
        super(sendService, i18nService, platformUtilsService, environmentService, ngZone, searchService, policyService, userService, logService);
        this.popupUtils = popupUtils;
        this.stateService = stateService;
        this.router = router;
        this.syncService = syncService;
        this.changeDetectorRef = changeDetectorRef;
        this.broadcasterService = broadcasterService;
        // Header
        this.showLeftHeader = true;
        // Send Type Calculations
        this.typeCounts = new Map();
        super.onSuccessfulLoad = () => send_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.calculateTypeCounts();
            this.selectAll();
        });
    }
    ngOnInit() {
        const _super = Object.create(null, {
            ngOnInit: { get: () => super.ngOnInit }
        });
        return send_groupings_component_awaiter(this, void 0, void 0, function* () {
            // Determine Header details
            this.showLeftHeader = !(this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox());
            // Clear state of Send Type Component
            this.stateService.remove('SendTypeComponent');
            // Let super class finish
            yield _super.ngOnInit.call(this);
            // Handle State Restore if necessary
            const restoredScopeState = yield this.restoreState();
            this.state = (yield this.stateService.get(send_groupings_component_ComponentId)) || {};
            if (this.state.searchText != null) {
                this.searchText = this.state.searchText;
            }
            if (!this.syncService.syncInProgress) {
                this.load();
            }
            else {
                this.loadedTimeout = window.setTimeout(() => {
                    if (!this.loaded) {
                        this.load();
                    }
                }, 5000);
            }
            if (!this.syncService.syncInProgress || restoredScopeState) {
                window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state.scrollY), 0);
            }
            // Load all sends if sync completed in background
            this.broadcasterService.subscribe(send_groupings_component_ComponentId, (message) => {
                this.ngZone.run(() => send_groupings_component_awaiter(this, void 0, void 0, function* () {
                    switch (message.command) {
                        case 'syncCompleted':
                            window.setTimeout(() => {
                                this.load();
                            }, 500);
                            break;
                        default:
                            break;
                    }
                    this.changeDetectorRef.detectChanges();
                }));
            });
        });
    }
    ngOnDestroy() {
        // Remove timeout
        if (this.loadedTimeout != null) {
            window.clearTimeout(this.loadedTimeout);
        }
        // Save state
        this.saveState();
        // Unsubscribe
        this.broadcasterService.unsubscribe(send_groupings_component_ComponentId);
    }
    selectType(type) {
        return send_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.router.navigate(['/send-type'], { queryParams: { type: type } });
        });
    }
    selectSend(s) {
        return send_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.router.navigate(['/edit-send'], { queryParams: { sendId: s.id } });
        });
    }
    addSend() {
        return send_groupings_component_awaiter(this, void 0, void 0, function* () {
            if (this.disableSend) {
                return;
            }
            this.router.navigate(['/add-send']);
        });
    }
    removePassword(s) {
        const _super = Object.create(null, {
            removePassword: { get: () => super.removePassword }
        });
        return send_groupings_component_awaiter(this, void 0, void 0, function* () {
            if (this.disableSend) {
                return;
            }
            _super.removePassword.call(this, s);
        });
    }
    showSearching() {
        return this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText));
    }
    calculateTypeCounts() {
        // Create type counts
        const typeCounts = new Map();
        this.sends.forEach(s => {
            if (typeCounts.has(s.type)) {
                typeCounts.set(s.type, typeCounts.get(s.type) + 1);
            }
            else {
                typeCounts.set(s.type, 1);
            }
        });
        this.typeCounts = typeCounts;
    }
    saveState() {
        return send_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.state = {
                scrollY: this.popupUtils.getContentScrollY(window),
                searchText: this.searchText,
            };
            yield this.stateService.save(send_groupings_component_ComponentId, this.state);
            this.scopeState = {
                sends: this.sends,
                typeCounts: this.typeCounts,
            };
            yield this.stateService.save(send_groupings_component_ScopeStateId, this.scopeState);
        });
    }
    restoreState() {
        return send_groupings_component_awaiter(this, void 0, void 0, function* () {
            this.scopeState = yield this.stateService.get(send_groupings_component_ScopeStateId);
            if (this.scopeState == null) {
                return false;
            }
            if (this.scopeState.sends != null) {
                this.sends = this.scopeState.sends;
            }
            if (this.scopeState.typeCounts != null) {
                this.typeCounts = this.scopeState.typeCounts;
            }
            return true;
        });
    }
}
send_groupings_component_SendGroupingsComponent.ɵfac = function SendGroupingsComponent_Factory(t) { return new (t || send_groupings_component_SendGroupingsComponent)(core["dc" /* ɵɵdirectiveInject */](SendService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](SearchService), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](SyncService), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](LogService)); };
send_groupings_component_SendGroupingsComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: send_groupings_component_SendGroupingsComponent, selectors: [["app-send-groupings"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 33, vars: 17, consts: [["class", "left", 4, "ngIf"], [1, "search"], ["type", "search", "id", "search", "autocomplete", "off", "appAutofocus", "", 3, "placeholder", "ngModel", "ngModelChange", "input"], [1, "fa", "fa-search"], [1, "right"], ["type", "button", "appBlurClick", "", 3, "appA11yTitle", "disabled", "click"], ["aria-hidden", "true", 1, "fa", "fa-plus", "fa-lg", "fa-fw"], [3, "ngClass"], ["type", "warning", 3, "title", 4, "ngIf"], ["class", "no-items", 4, "ngIf"], [4, "ngIf"], [1, "left"], ["type", "warning", 3, "title"], [1, "no-items"], ["class", "fa fa-spinner fa-spin fa-3x", 4, "ngIf"], [1, "fa", "fa-spinner", "fa-spin", "fa-3x"], [1, "fa", "fa-frown-o", "fa-4x"], ["type", "button", 1, "btn", "block", "primary", "link", 3, "disabled", "click"], [1, "box", "list"], [1, "box-header"], [1, "box-content", "single-line"], ["type", "button", "appStopClick", "", "appBlurClick", "", 1, "box-content-row", 3, "click"], [1, "row-main"], [1, "icon"], [1, "fa", "fa-fw", "fa-lg", "fa-file-text-o"], [1, "text"], [1, "row-sub-label"], [1, "fa", "fa-chevron-right", "fa-lg", "row-sub-icon"], [1, "fa", "fa-fw", "fa-lg", "fa-file-o"], [1, "flex-right"], [1, "box-content"], [3, "sends", "title", "disabledByPolicy", "onSelected", "onCopySendLink", "onRemovePassword", "onDeleteSend"], ["class", "box list full-list", 4, "ngIf"], [1, "box", "list", "full-list"]], template: function SendGroupingsComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["Oc" /* ɵɵtemplate */](2, SendGroupingsComponent_div_2_Template, 4, 0, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "div", 1);
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "input", 2);
        core["qc" /* ɵɵlistener */]("ngModelChange", function SendGroupingsComponent_Template_input_ngModelChange_6_listener($event) { return ctx.searchText = $event; })("input", function SendGroupingsComponent_Template_input_input_6_listener() { return ctx.search(200); });
        core["vc" /* ɵɵpipe */](7, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["ec" /* ɵɵelement */](9, "i", 3);
        core["Qc" /* ɵɵtext */](10, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](11, " ");
        core["jc" /* ɵɵelementStart */](12, "div", 4);
        core["Qc" /* ɵɵtext */](13, " ");
        core["jc" /* ɵɵelementStart */](14, "button", 5);
        core["qc" /* ɵɵlistener */]("click", function SendGroupingsComponent_Template_button_click_14_listener() { return ctx.addSend(); });
        core["vc" /* ɵɵpipe */](15, "i18n");
        core["Qc" /* ɵɵtext */](16, " ");
        core["ec" /* ɵɵelement */](17, "i", 6);
        core["Qc" /* ɵɵtext */](18, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](19, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](20, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](21, " ");
        core["jc" /* ɵɵelementStart */](22, "content", 7);
        core["Qc" /* ɵɵtext */](23, " ");
        core["Oc" /* ɵɵtemplate */](24, SendGroupingsComponent_app_callout_24_Template, 4, 6, "app-callout", 8);
        core["Qc" /* ɵɵtext */](25, " ");
        core["Oc" /* ɵɵtemplate */](26, SendGroupingsComponent_div_26_Template, 6, 2, "div", 9);
        core["Qc" /* ɵɵtext */](27, " ");
        core["Oc" /* ɵɵtemplate */](28, SendGroupingsComponent_ng_container_28_Template, 66, 20, "ng-container", 10);
        core["Qc" /* ɵɵtext */](29, " ");
        core["Oc" /* ɵɵtemplate */](30, SendGroupingsComponent_ng_container_30_Template, 6, 2, "ng-container", 10);
        core["Qc" /* ɵɵtext */](31, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](32, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showLeftHeader);
        core["Sb" /* ɵɵadvance */](4);
        core["Cc" /* ɵɵpropertyInterpolate */]("placeholder", core["wc" /* ɵɵpipeBind1 */](7, 10, "searchSends"));
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.searchText);
        core["Sb" /* ɵɵadvance */](8);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](15, 12, "addSend"));
        core["Bc" /* ɵɵproperty */]("disabled", ctx.disableSend);
        core["Sb" /* ɵɵadvance */](8);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](14, send_groupings_component_c0, ctx.disableSend, ctx.disableSend));
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.disableSend);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", (!ctx.sends || !ctx.sends.length) && !ctx.showSearching());
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.sends && ctx.sends.length && !ctx.showSearching());
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.showSearching());
    } }, directives: [common["l" /* NgIf */], fesm2015_forms["c" /* DefaultValueAccessor */], autofocus_directive_AutofocusDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], BlurClickDirective, A11yTitleDirective, common["j" /* NgClass */], PopOutComponent, CalloutComponent, StopClickDirective, send_list_component_SendListComponent], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](send_groupings_component_SendGroupingsComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-send-groupings',
                templateUrl: 'send-groupings.component.html',
            }]
    }], function () { return [{ type: SendService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: EnvironmentService }, { type: core["M" /* NgZone */] }, { type: PolicyService }, { type: UserService }, { type: SearchService }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: StateService }, { type: fesm2015_router["e" /* Router */] }, { type: SyncService }, { type: core["j" /* ChangeDetectorRef */] }, { type: services_broadcaster_service_BroadcasterService }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/send/send-type.component.ts
var send_type_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






































function SendTypeComponent_app_callout_35_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "app-callout", 14);
    core["vc" /* ɵɵpipe */](1, "i18n");
    core["Qc" /* ɵɵtext */](2);
    core["vc" /* ɵɵpipe */](3, "i18n");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](1, 2, "sendDisabled"));
    core["Sb" /* ɵɵadvance */](2);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](3, 4, "sendDisabledWarning"), " ");
} }
function SendTypeComponent_div_37_i_2_Template(rf, ctx) { if (rf & 1) {
    core["ec" /* ɵɵelement */](0, "i", 18);
} }
function SendTypeComponent_div_37_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r6 = core["kc" /* ɵɵgetCurrentView */]();
    core["hc" /* ɵɵelementContainerStart */](0);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "p");
    core["Qc" /* ɵɵtext */](3);
    core["vc" /* ɵɵpipe */](4, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](5, " ");
    core["jc" /* ɵɵelementStart */](6, "button", 19);
    core["qc" /* ɵɵlistener */]("click", function SendTypeComponent_div_37_ng_container_4_Template_button_click_6_listener() { core["Jc" /* ɵɵrestoreView */](_r6); const ctx_r5 = core["uc" /* ɵɵnextContext */](2); return ctx_r5.addSend(); });
    core["Qc" /* ɵɵtext */](7);
    core["vc" /* ɵɵpipe */](8, "i18n");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](9, " ");
    core["gc" /* ɵɵelementContainerEnd */]();
} if (rf & 2) {
    const ctx_r4 = core["uc" /* ɵɵnextContext */](2);
    core["Sb" /* ɵɵadvance */](3);
    core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](4, 3, "noItemsInList"));
    core["Sb" /* ɵɵadvance */](3);
    core["Bc" /* ɵɵproperty */]("disabled", ctx_r4.disableSend);
    core["Sb" /* ɵɵadvance */](1);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](8, 5, "addSend"), " ");
} }
function SendTypeComponent_div_37_Template(rf, ctx) { if (rf & 1) {
    core["jc" /* ɵɵelementStart */](0, "div", 15);
    core["Qc" /* ɵɵtext */](1, " ");
    core["Oc" /* ɵɵtemplate */](2, SendTypeComponent_div_37_i_2_Template, 1, 0, "i", 16);
    core["Qc" /* ɵɵtext */](3, " ");
    core["Oc" /* ɵɵtemplate */](4, SendTypeComponent_div_37_ng_container_4_Template, 10, 7, "ng-container", 17);
    core["Qc" /* ɵɵtext */](5, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r1 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", !ctx_r1.loaded);
    core["Sb" /* ɵɵadvance */](2);
    core["Bc" /* ɵɵproperty */]("ngIf", ctx_r1.loaded);
} }
function SendTypeComponent_div_39_Template(rf, ctx) { if (rf & 1) {
    const _r8 = core["kc" /* ɵɵgetCurrentView */]();
    core["jc" /* ɵɵelementStart */](0, "div", 20);
    core["Qc" /* ɵɵtext */](1, " ");
    core["jc" /* ɵɵelementStart */](2, "div", 21);
    core["Qc" /* ɵɵtext */](3);
    core["jc" /* ɵɵelementStart */](4, "span", 22);
    core["Qc" /* ɵɵtext */](5);
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](6, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](7, " ");
    core["jc" /* ɵɵelementStart */](8, "div", 23);
    core["Qc" /* ɵɵtext */](9, " ");
    core["jc" /* ɵɵelementStart */](10, "app-send-list", 24);
    core["qc" /* ɵɵlistener */]("onSelected", function SendTypeComponent_div_39_Template_app_send_list_onSelected_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r7 = core["uc" /* ɵɵnextContext */](); return ctx_r7.selectSend($event); })("onCopySendLink", function SendTypeComponent_div_39_Template_app_send_list_onCopySendLink_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r9 = core["uc" /* ɵɵnextContext */](); return ctx_r9.copy($event); })("onRemovePassword", function SendTypeComponent_div_39_Template_app_send_list_onRemovePassword_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r10 = core["uc" /* ɵɵnextContext */](); return ctx_r10.removePassword($event); })("onDeleteSend", function SendTypeComponent_div_39_Template_app_send_list_onDeleteSend_10_listener($event) { core["Jc" /* ɵɵrestoreView */](_r8); const ctx_r11 = core["uc" /* ɵɵnextContext */](); return ctx_r11.delete($event); });
    core["vc" /* ɵɵpipe */](11, "i18n");
    core["Qc" /* ɵɵtext */](12, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](13, " ");
    core["ic" /* ɵɵelementEnd */]();
    core["Qc" /* ɵɵtext */](14, " ");
    core["ic" /* ɵɵelementEnd */]();
} if (rf & 2) {
    const ctx_r2 = core["uc" /* ɵɵnextContext */]();
    core["Sb" /* ɵɵadvance */](3);
    core["Sc" /* ɵɵtextInterpolate1 */](" ", ctx_r2.groupingTitle, " ");
    core["Sb" /* ɵɵadvance */](2);
    core["Rc" /* ɵɵtextInterpolate */](ctx_r2.filteredSends.length);
    core["Sb" /* ɵɵadvance */](5);
    core["Cc" /* ɵɵpropertyInterpolate */]("title", core["wc" /* ɵɵpipeBind1 */](11, 5, "editItem"));
    core["Bc" /* ɵɵproperty */]("sends", ctx_r2.filteredSends)("disabledByPolicy", ctx_r2.disableSend);
} }
const send_type_component_c0 = function (a0) { return { "flex": a0 }; };
const send_type_component_ComponentId = 'SendTypeComponent';
class send_type_component_SendTypeComponent extends send_component_SendComponent {
    constructor(sendService, i18nService, platformUtilsService, environmentService, ngZone, policyService, userService, searchService, popupUtils, stateService, route, location, changeDetectorRef, broadcasterService, router, logService) {
        super(sendService, i18nService, platformUtilsService, environmentService, ngZone, searchService, policyService, userService, logService);
        this.popupUtils = popupUtils;
        this.stateService = stateService;
        this.route = route;
        this.location = location;
        this.changeDetectorRef = changeDetectorRef;
        this.broadcasterService = broadcasterService;
        this.router = router;
        this.applySavedState = true;
        super.onSuccessfulLoad = () => send_type_component_awaiter(this, void 0, void 0, function* () {
            this.selectType(this.type);
        });
        this.applySavedState = window.previousPopupUrl != null &&
            !window.previousPopupUrl.startsWith('/send-type');
    }
    ngOnInit() {
        const _super = Object.create(null, {
            ngOnInit: { get: () => super.ngOnInit }
        });
        return send_type_component_awaiter(this, void 0, void 0, function* () {
            // Let super class finish
            yield _super.ngOnInit.call(this);
            this.route.queryParams.pipe(Object(first["a" /* first */])()).subscribe((params) => send_type_component_awaiter(this, void 0, void 0, function* () {
                if (this.applySavedState) {
                    this.state = (yield this.stateService.get(send_type_component_ComponentId)) || {};
                    if (this.state.searchText != null) {
                        this.searchText = this.state.searchText;
                    }
                }
                if (params.type != null) {
                    this.type = parseInt(params.type, null);
                    switch (this.type) {
                        case sendType["a" /* SendType */].Text:
                            this.groupingTitle = this.i18nService.t('sendTypeText');
                            break;
                        case sendType["a" /* SendType */].File:
                            this.groupingTitle = this.i18nService.t('sendTypeFile');
                            break;
                        default:
                            break;
                    }
                    yield this.load(s => s.type === this.type);
                }
                // Restore state and remove reference
                if (this.applySavedState && this.state != null) {
                    window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state.scrollY), 0);
                }
                this.stateService.remove(send_type_component_ComponentId);
            }));
            // Refresh Send list if sync completed in background
            this.broadcasterService.subscribe(send_type_component_ComponentId, (message) => {
                this.ngZone.run(() => send_type_component_awaiter(this, void 0, void 0, function* () {
                    switch (message.command) {
                        case 'syncCompleted':
                            if (message.successfully) {
                                this.refreshTimeout = window.setTimeout(() => {
                                    this.refresh();
                                }, 500);
                            }
                            break;
                        default:
                            break;
                    }
                    this.changeDetectorRef.detectChanges();
                }));
            });
        });
    }
    ngOnDestroy() {
        // Remove timeout
        if (this.refreshTimeout != null) {
            window.clearTimeout(this.refreshTimeout);
        }
        // Save state
        this.saveState();
        // Unsubscribe
        this.broadcasterService.unsubscribe(send_type_component_ComponentId);
    }
    selectSend(s) {
        return send_type_component_awaiter(this, void 0, void 0, function* () {
            this.router.navigate(['/edit-send'], { queryParams: { sendId: s.id } });
        });
    }
    addSend() {
        return send_type_component_awaiter(this, void 0, void 0, function* () {
            if (this.disableSend) {
                return;
            }
            this.router.navigate(['/add-send'], { queryParams: { type: this.type } });
        });
    }
    removePassword(s) {
        const _super = Object.create(null, {
            removePassword: { get: () => super.removePassword }
        });
        return send_type_component_awaiter(this, void 0, void 0, function* () {
            if (this.disableSend) {
                return;
            }
            _super.removePassword.call(this, s);
        });
    }
    back() {
        window.routeDirection = 'b';
        this.location.back();
    }
    saveState() {
        return send_type_component_awaiter(this, void 0, void 0, function* () {
            this.state = {
                scrollY: this.popupUtils.getContentScrollY(window),
                searchText: this.searchText,
            };
            yield this.stateService.save(send_type_component_ComponentId, this.state);
        });
    }
}
send_type_component_SendTypeComponent.ɵfac = function SendTypeComponent_Factory(t) { return new (t || send_type_component_SendTypeComponent)(core["dc" /* ɵɵdirectiveInject */](SendService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](EnvironmentService), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](PolicyService), core["dc" /* ɵɵdirectiveInject */](UserService), core["dc" /* ɵɵdirectiveInject */](SearchService), core["dc" /* ɵɵdirectiveInject */](popup_utils_service["a" /* PopupUtilsService */]), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["a" /* ActivatedRoute */]), core["dc" /* ɵɵdirectiveInject */](common["h" /* Location */]), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](LogService)); };
send_type_component_SendTypeComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: send_type_component_SendTypeComponent, selectors: [["app-send-type"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 42, vars: 17, consts: [[1, "left"], ["type", "button", "appBlurClick", "", 3, "click"], [1, "header-icon"], ["aria-hidden", "true", 1, "fa", "fa-chevron-left"], [1, "search"], ["type", "search", "id", "search", "autocomplete", "off", "appAutofocus", "", 3, "placeholder", "ngModel", "ngModelChange", "input"], [1, "fa", "fa-search"], [1, "right"], ["type", "button", "appBlurClick", "", 3, "appA11yTitle", "disabled", "click"], ["aria-hidden", "true", 1, "fa", "fa-plus", "fa-lg", "fa-fw"], [3, "ngClass"], ["type", "warning", 3, "title", 4, "ngIf"], ["class", "no-items", 4, "ngIf"], ["class", "box list only-list", 4, "ngIf"], ["type", "warning", 3, "title"], [1, "no-items"], ["class", "fa fa-spinner fa-spin fa-3x", "aria-hidden", "true", 4, "ngIf"], [4, "ngIf"], ["aria-hidden", "true", 1, "fa", "fa-spinner", "fa-spin", "fa-3x"], ["type", "button", 1, "btn", "block", "primary", "link", 3, "disabled", "click"], [1, "box", "list", "only-list"], [1, "box-header"], [1, "flex-right"], [1, "box-content"], [3, "sends", "title", "disabledByPolicy", "onSelected", "onCopySendLink", "onRemovePassword", "onDeleteSend"]], template: function SendTypeComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "header");
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 0);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "button", 1);
        core["qc" /* ɵɵlistener */]("click", function SendTypeComponent_Template_button_click_4_listener() { return ctx.back(); });
        core["Qc" /* ɵɵtext */](5, " ");
        core["jc" /* ɵɵelementStart */](6, "span", 2);
        core["ec" /* ɵɵelement */](7, "i", 3);
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "span");
        core["Qc" /* ɵɵtext */](10);
        core["vc" /* ɵɵpipe */](11, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](12, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](13, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 4);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "input", 5);
        core["qc" /* ɵɵlistener */]("ngModelChange", function SendTypeComponent_Template_input_ngModelChange_17_listener($event) { return ctx.searchText = $event; })("input", function SendTypeComponent_Template_input_input_17_listener() { return ctx.search(200); });
        core["vc" /* ɵɵpipe */](18, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](19, " ");
        core["ec" /* ɵɵelement */](20, "i", 6);
        core["Qc" /* ɵɵtext */](21, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](22, " ");
        core["jc" /* ɵɵelementStart */](23, "div", 7);
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "button", 8);
        core["qc" /* ɵɵlistener */]("click", function SendTypeComponent_Template_button_click_25_listener() { return ctx.addSend(); });
        core["vc" /* ɵɵpipe */](26, "i18n");
        core["Qc" /* ɵɵtext */](27, " ");
        core["ec" /* ɵɵelement */](28, "i", 9);
        core["Qc" /* ɵɵtext */](29, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](30, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](31, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](32, " ");
        core["jc" /* ɵɵelementStart */](33, "content", 10);
        core["Qc" /* ɵɵtext */](34, " ");
        core["Oc" /* ɵɵtemplate */](35, SendTypeComponent_app_callout_35_Template, 4, 6, "app-callout", 11);
        core["Qc" /* ɵɵtext */](36, " ");
        core["Oc" /* ɵɵtemplate */](37, SendTypeComponent_div_37_Template, 6, 2, "div", 12);
        core["Qc" /* ɵɵtext */](38, " ");
        core["Oc" /* ɵɵtemplate */](39, SendTypeComponent_div_39_Template, 15, 7, "div", 13);
        core["Qc" /* ɵɵtext */](40, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](41, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](11, 9, "back"));
        core["Sb" /* ɵɵadvance */](7);
        core["Cc" /* ɵɵpropertyInterpolate */]("placeholder", core["wc" /* ɵɵpipeBind1 */](18, 11, "searchType"));
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.searchText);
        core["Sb" /* ɵɵadvance */](8);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](26, 13, "addSend"));
        core["Bc" /* ɵɵproperty */]("disabled", ctx.disableSend);
        core["Sb" /* ɵɵadvance */](8);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Fc" /* ɵɵpureFunction1 */](15, send_type_component_c0, ctx.disableSend));
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.disableSend);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", !ctx.filteredSends.length);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("ngIf", ctx.filteredSends.length);
    } }, directives: [BlurClickDirective, fesm2015_forms["c" /* DefaultValueAccessor */], autofocus_directive_AutofocusDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], A11yTitleDirective, common["j" /* NgClass */], common["l" /* NgIf */], CalloutComponent, send_list_component_SendListComponent], pipes: [I18nPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](send_type_component_SendTypeComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-send-type',
                templateUrl: 'send-type.component.html',
            }]
    }], function () { return [{ type: SendService }, { type: I18nService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: EnvironmentService }, { type: core["M" /* NgZone */] }, { type: PolicyService }, { type: UserService }, { type: SearchService }, { type: popup_utils_service["a" /* PopupUtilsService */] }, { type: StateService }, { type: fesm2015_router["a" /* ActivatedRoute */] }, { type: common["h" /* Location */] }, { type: core["j" /* ChangeDetectorRef */] }, { type: services_broadcaster_service_BroadcasterService }, { type: fesm2015_router["e" /* Router */] }, { type: LogService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/app-routing.module.ts












































const routes = [
    {
        path: '',
        redirectTo: 'home',
        pathMatch: 'full',
    },
    {
        path: 'vault',
        redirectTo: '/tabs/vault',
        pathMatch: 'full',
    },
    {
        path: 'home',
        component: home_component_HomeComponent,
        canActivate: [launch_guard_service_LaunchGuardService],
        data: { state: 'home' },
    },
    {
        path: 'login',
        component: accounts_login_component_LoginComponent,
        canActivate: [launch_guard_service_LaunchGuardService],
        data: { state: 'login' },
    },
    {
        path: 'lock',
        component: accounts_lock_component_LockComponent,
        canActivate: [services_lock_guard_service_LockGuardService],
        data: { state: 'lock' },
    },
    {
        path: '2fa',
        component: accounts_two_factor_component_TwoFactorComponent,
        canActivate: [launch_guard_service_LaunchGuardService],
        data: { state: '2fa' },
    },
    {
        path: '2fa-options',
        component: accounts_two_factor_options_component_TwoFactorOptionsComponent,
        canActivate: [launch_guard_service_LaunchGuardService],
        data: { state: '2fa-options' },
    },
    {
        path: 'sso',
        component: accounts_sso_component_SsoComponent,
        canActivate: [launch_guard_service_LaunchGuardService],
        data: { state: 'sso' },
    },
    {
        path: 'set-password',
        component: accounts_set_password_component_SetPasswordComponent,
        data: { state: 'set-password' },
    },
    {
        path: 'remove-password',
        component: accounts_remove_password_component_RemovePasswordComponent,
        canActivate: [AuthGuardService],
        data: { state: 'remove-password' },
    },
    {
        path: 'register',
        component: accounts_register_component_RegisterComponent,
        canActivate: [launch_guard_service_LaunchGuardService],
        data: { state: 'register' },
    },
    {
        path: 'hint',
        component: accounts_hint_component_HintComponent,
        canActivate: [launch_guard_service_LaunchGuardService],
        data: { state: 'hint' },
    },
    {
        path: 'environment',
        component: accounts_environment_component_EnvironmentComponent,
        canActivate: [launch_guard_service_LaunchGuardService],
        data: { state: 'environment' },
    },
    {
        path: 'ciphers',
        component: vault_ciphers_component_CiphersComponent,
        canActivate: [AuthGuardService],
        data: { state: 'ciphers' },
    },
    {
        path: 'view-cipher',
        component: vault_view_component_ViewComponent,
        canActivate: [AuthGuardService],
        data: { state: 'view-cipher' },
    },
    {
        path: 'cipher-password-history',
        component: vault_password_history_component_PasswordHistoryComponent,
        canActivate: [AuthGuardService],
        data: { state: 'cipher-password-history' },
    },
    {
        path: 'add-cipher',
        component: vault_add_edit_component_AddEditComponent,
        canActivate: [AuthGuardService, debounceNavigationService_DebounceNavigationService],
        data: { state: 'add-cipher' },
        runGuardsAndResolvers: 'always',
    },
    {
        path: 'edit-cipher',
        component: vault_add_edit_component_AddEditComponent,
        canActivate: [AuthGuardService, debounceNavigationService_DebounceNavigationService],
        data: { state: 'edit-cipher' },
        runGuardsAndResolvers: 'always',
    },
    {
        path: 'share-cipher',
        component: vault_share_component_ShareComponent,
        canActivate: [AuthGuardService],
        data: { state: 'share-cipher' },
    },
    {
        path: 'collections',
        component: vault_collections_component_CollectionsComponent,
        canActivate: [AuthGuardService],
        data: { state: 'collections' },
    },
    {
        path: 'attachments',
        component: vault_attachments_component_AttachmentsComponent,
        canActivate: [AuthGuardService],
        data: { state: 'attachments' },
    },
    {
        path: 'generator',
        component: generator_password_generator_component_PasswordGeneratorComponent,
        canActivate: [AuthGuardService],
        data: { state: 'generator' },
    },
    {
        path: 'generator-history',
        component: generator_password_generator_history_component_PasswordGeneratorHistoryComponent,
        canActivate: [AuthGuardService],
        data: { state: 'generator-history' },
    },
    {
        path: 'export',
        component: settings_export_component_ExportComponent,
        canActivate: [AuthGuardService],
        data: { state: 'export' },
    },
    {
        path: 'folders',
        component: FoldersComponent,
        canActivate: [AuthGuardService],
        data: { state: 'folders' },
    },
    {
        path: 'add-folder',
        component: settings_folder_add_edit_component_FolderAddEditComponent,
        canActivate: [AuthGuardService],
        data: { state: 'add-folder' },
    },
    {
        path: 'edit-folder',
        component: settings_folder_add_edit_component_FolderAddEditComponent,
        canActivate: [AuthGuardService],
        data: { state: 'edit-folder' },
    },
    {
        path: 'sync',
        component: SyncComponent,
        canActivate: [AuthGuardService],
        data: { state: 'sync' },
    },
    {
        path: 'excluded-domains',
        component: excluded_domains_component_ExcludedDomainsComponent,
        canActivate: [AuthGuardService],
        data: { state: 'excluded-domains' },
    },
    {
        path: 'premium',
        component: settings_premium_component_PremiumComponent,
        canActivate: [AuthGuardService],
        data: { state: 'premium' },
    },
    {
        path: 'options',
        component: options_component_OptionsComponent,
        canActivate: [AuthGuardService],
        data: { state: 'options' },
    },
    {
        path: 'private-mode',
        component: private_mode_component_PrivateModeComponent,
        data: { state: 'private-mode' },
    },
    {
        path: 'clone-cipher',
        component: vault_add_edit_component_AddEditComponent,
        canActivate: [AuthGuardService],
        data: { state: 'clone-cipher' },
    },
    {
        path: 'send-type',
        component: send_type_component_SendTypeComponent,
        canActivate: [AuthGuardService],
        data: { state: 'send-type' },
    },
    {
        path: 'add-send',
        component: send_add_edit_component_SendAddEditComponent,
        canActivate: [AuthGuardService],
        data: { state: 'add-send' },
    },
    {
        path: 'edit-send',
        component: send_add_edit_component_SendAddEditComponent,
        canActivate: [AuthGuardService],
        data: { state: 'edit-send' },
    },
    {
        path: 'update-temp-password',
        component: accounts_update_temp_password_component_UpdateTempPasswordComponent,
        canActivate: [AuthGuardService],
        data: { state: 'update-temp-password' },
    },
    {
        path: 'tabs',
        component: TabsComponent,
        data: { state: 'tabs' },
        children: [
            {
                path: '',
                redirectTo: '/tabs/vault',
                pathMatch: 'full',
            },
            {
                path: 'current',
                component: current_tab_component_CurrentTabComponent,
                canActivate: [AuthGuardService],
                data: { state: 'tabs_current' },
                runGuardsAndResolvers: 'always',
            },
            {
                path: 'vault',
                component: vault_groupings_component_GroupingsComponent,
                canActivate: [AuthGuardService],
                data: { state: 'tabs_vault' },
            },
            {
                path: 'generator',
                component: generator_password_generator_component_PasswordGeneratorComponent,
                canActivate: [AuthGuardService],
                data: { state: 'tabs_generator' },
            },
            {
                path: 'settings',
                component: settings_component_SettingsComponent,
                canActivate: [AuthGuardService],
                data: { state: 'tabs_settings' },
            },
            {
                path: 'send',
                component: send_groupings_component_SendGroupingsComponent,
                canActivate: [AuthGuardService],
                data: { state: 'tabs_send' },
            },
        ],
    },
];
class NoRouteReuseStrategy {
    shouldDetach(route) {
        return false;
    }
    store(route, handle) { }
    shouldAttach(route) {
        return false;
    }
    retrieve(route) {
        return null;
    }
    shouldReuseRoute(future, curr) {
        return false;
    }
}
NoRouteReuseStrategy.ɵfac = function NoRouteReuseStrategy_Factory(t) { return new (t || NoRouteReuseStrategy)(); };
NoRouteReuseStrategy.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: NoRouteReuseStrategy, factory: NoRouteReuseStrategy.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](NoRouteReuseStrategy, [{
        type: core["A" /* Injectable */]
    }], null, null); })();
class AppRoutingModule {
}
AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) { return new (t || AppRoutingModule)(); };
AppRoutingModule.ɵmod = core["bc" /* ɵɵdefineNgModule */]({ type: AppRoutingModule });
AppRoutingModule.ɵinj = core["ac" /* ɵɵdefineInjector */]({ providers: [
        { provide: fesm2015_router["d" /* RouteReuseStrategy */], useClass: NoRouteReuseStrategy },
    ], imports: [[fesm2015_router["h" /* RouterModule */].forRoot(routes, {
                useHash: true,
                onSameUrlNavigation: 'reload',
            })], fesm2015_router["h" /* RouterModule */]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && core["Mc" /* ɵɵsetNgModuleScope */](AppRoutingModule, { imports: [fesm2015_router["h" /* RouterModule */]], exports: [fesm2015_router["h" /* RouterModule */]] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](AppRoutingModule, [{
        type: core["H" /* NgModule */],
        args: [{
                imports: [fesm2015_router["h" /* RouterModule */].forRoot(routes, {
                        useHash: true,
                        onSameUrlNavigation: 'reload',
                    })],
                exports: [fesm2015_router["h" /* RouterModule */]],
                providers: [
                    { provide: fesm2015_router["d" /* RouteReuseStrategy */], useClass: NoRouteReuseStrategy },
                ],
            }]
    }], null, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/components/password-reprompt.component.ts
var password_reprompt_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










class password_reprompt_component_PasswordRepromptComponent {
    constructor(modalRef, cryptoService, platformUtilsService, i18nService) {
        this.modalRef = modalRef;
        this.cryptoService = cryptoService;
        this.platformUtilsService = platformUtilsService;
        this.i18nService = i18nService;
        this.showPassword = false;
        this.masterPassword = '';
    }
    togglePassword() {
        this.showPassword = !this.showPassword;
    }
    submit() {
        return password_reprompt_component_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {
                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('invalidMasterPassword'));
                return;
            }
            this.modalRef.close(true);
        });
    }
}
password_reprompt_component_PasswordRepromptComponent.ɵfac = function PasswordRepromptComponent_Factory(t) { return new (t || password_reprompt_component_PasswordRepromptComponent)(core["dc" /* ɵɵdirectiveInject */](modal_ref_ModalRef), core["dc" /* ɵɵdirectiveInject */](CryptoService), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](I18nService)); };
password_reprompt_component_PasswordRepromptComponent.ɵdir = core["Yb" /* ɵɵdefineDirective */]({ type: password_reprompt_component_PasswordRepromptComponent });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](password_reprompt_component_PasswordRepromptComponent, [{
        type: core["q" /* Directive */]
    }], function () { return [{ type: modal_ref_ModalRef }, { type: CryptoService }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: I18nService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/services/passwordReprompt.service.ts
var passwordReprompt_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







class services_passwordReprompt_service_PasswordRepromptService {
    constructor(modalService, keyConnectorService) {
        this.modalService = modalService;
        this.keyConnectorService = keyConnectorService;
        this.component = password_reprompt_component_PasswordRepromptComponent;
    }
    protectedFields() {
        return ['TOTP', 'Password', 'H_Field', 'Card Number', 'Security Code'];
    }
    showPasswordPrompt() {
        return passwordReprompt_service_awaiter(this, void 0, void 0, function* () {
            if (!(yield this.enabled())) {
                return true;
            }
            const ref = this.modalService.open(this.component, { allowMultipleModals: true });
            if (ref == null) {
                return false;
            }
            const result = yield ref.onClosedPromise();
            return result === true;
        });
    }
    enabled() {
        return passwordReprompt_service_awaiter(this, void 0, void 0, function* () {
            return !(yield this.keyConnectorService.getUsesKeyConnector());
        });
    }
}
services_passwordReprompt_service_PasswordRepromptService.ɵfac = function PasswordRepromptService_Factory(t) { return new (t || services_passwordReprompt_service_PasswordRepromptService)(core["nc" /* ɵɵinject */](modal_service_ModalService), core["nc" /* ɵɵinject */](KeyConnectorService)); };
services_passwordReprompt_service_PasswordRepromptService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: services_passwordReprompt_service_PasswordRepromptService, factory: services_passwordReprompt_service_PasswordRepromptService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](services_passwordReprompt_service_PasswordRepromptService, [{
        type: core["A" /* Injectable */]
    }], function () { return [{ type: modal_service_ModalService }, { type: KeyConnectorService }]; }, null); })();

// CONCATENATED MODULE: ./src/popup/components/password-reprompt.component.ts











const password_reprompt_component_c0 = function (a0, a1) { return { "fa-eye": a0, "fa-eye-slash": a1 }; };
class components_password_reprompt_component_PasswordRepromptComponent extends password_reprompt_component_PasswordRepromptComponent {
}
components_password_reprompt_component_PasswordRepromptComponent.ɵfac = function PasswordRepromptComponent_Factory(t) { return ɵPasswordRepromptComponent_BaseFactory(t || components_password_reprompt_component_PasswordRepromptComponent); };
components_password_reprompt_component_PasswordRepromptComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: components_password_reprompt_component_PasswordRepromptComponent, selectors: [["ng-component"]], features: [core["Pb" /* ɵɵInheritDefinitionFeature */]], decls: 62, vars: 24, consts: [["role", "dialog", "aria-modal", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog", "modal-dialog-scrollable"], [1, "modal-content", 3, "ngSubmit"], ["form", ""], [1, "modal-body"], [1, "box"], [1, "box-header"], [1, "box-content"], ["appBoxRow", "", 1, "box-content-row", "box-content-row-flex"], [1, "row-main"], ["for", "masterPassword"], ["id", "masterPassword", "name", "MasterPassword", "required", "", "appAutofocus", "", 1, "monospaced", 3, "type", "ngModel", "ngModelChange"], [1, "action-buttons"], ["type", "button", "appStopClick", "", "appBlurClick", "", "role", "button", 1, "row-btn", 3, "appA11yTitle", "click"], ["aria-hidden", "true", 1, "fa", "fa-lg", 3, "ngClass"], [1, "box-footer"], [1, "modal-footer"], ["type", "submit", "appBlurClick", "", 1, "btn", "btn-primary", "btn-submit"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-outline-secondary"]], template: function PasswordRepromptComponent_Template(rf, ctx) { if (rf & 1) {
        core["jc" /* ɵɵelementStart */](0, "div", 0);
        core["Qc" /* ɵɵtext */](1, " ");
        core["jc" /* ɵɵelementStart */](2, "div", 1);
        core["Qc" /* ɵɵtext */](3, " ");
        core["jc" /* ɵɵelementStart */](4, "form", 2, 3);
        core["qc" /* ɵɵlistener */]("ngSubmit", function PasswordRepromptComponent_Template_form_ngSubmit_4_listener() { return ctx.submit(); });
        core["Qc" /* ɵɵtext */](6, " ");
        core["jc" /* ɵɵelementStart */](7, "div", 4);
        core["Qc" /* ɵɵtext */](8, " ");
        core["jc" /* ɵɵelementStart */](9, "div", 5);
        core["Qc" /* ɵɵtext */](10, " ");
        core["jc" /* ɵɵelementStart */](11, "div", 6);
        core["Qc" /* ɵɵtext */](12);
        core["vc" /* ɵɵpipe */](13, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](14, " ");
        core["jc" /* ɵɵelementStart */](15, "div", 7);
        core["Qc" /* ɵɵtext */](16, " ");
        core["jc" /* ɵɵelementStart */](17, "div", 8);
        core["Qc" /* ɵɵtext */](18, " ");
        core["jc" /* ɵɵelementStart */](19, "div", 9);
        core["Qc" /* ɵɵtext */](20, " ");
        core["jc" /* ɵɵelementStart */](21, "label", 10);
        core["Qc" /* ɵɵtext */](22);
        core["vc" /* ɵɵpipe */](23, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](24, " ");
        core["jc" /* ɵɵelementStart */](25, "input", 11);
        core["qc" /* ɵɵlistener */]("ngModelChange", function PasswordRepromptComponent_Template_input_ngModelChange_25_listener($event) { return ctx.masterPassword = $event; });
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](26, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](27, " ");
        core["jc" /* ɵɵelementStart */](28, "div", 12);
        core["Qc" /* ɵɵtext */](29, " ");
        core["jc" /* ɵɵelementStart */](30, "button", 13);
        core["qc" /* ɵɵlistener */]("click", function PasswordRepromptComponent_Template_button_click_30_listener() { return ctx.togglePassword(); });
        core["vc" /* ɵɵpipe */](31, "i18n");
        core["Qc" /* ɵɵtext */](32, " ");
        core["ec" /* ɵɵelement */](33, "i", 14);
        core["Qc" /* ɵɵtext */](34, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](35, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](36, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](37, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](38, " ");
        core["jc" /* ɵɵelementStart */](39, "div", 15);
        core["Qc" /* ɵɵtext */](40);
        core["vc" /* ɵɵpipe */](41, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](42, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](43, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](44, " ");
        core["jc" /* ɵɵelementStart */](45, "div", 16);
        core["Qc" /* ɵɵtext */](46, " ");
        core["jc" /* ɵɵelementStart */](47, "button", 17);
        core["Qc" /* ɵɵtext */](48, " ");
        core["jc" /* ɵɵelementStart */](49, "span");
        core["Qc" /* ɵɵtext */](50);
        core["vc" /* ɵɵpipe */](51, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](52, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](53, " ");
        core["jc" /* ɵɵelementStart */](54, "button", 18);
        core["Qc" /* ɵɵtext */](55);
        core["vc" /* ɵɵpipe */](56, "i18n");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](57, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](58, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](59, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](60, " ");
        core["ic" /* ɵɵelementEnd */]();
        core["Qc" /* ɵɵtext */](61, " ");
    } if (rf & 2) {
        core["Sb" /* ɵɵadvance */](12);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](13, 9, "passwordConfirmation"));
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](23, 11, "masterPass"));
        core["Sb" /* ɵɵadvance */](3);
        core["Cc" /* ɵɵpropertyInterpolate */]("type", ctx.showPassword ? "text" : "password");
        core["Bc" /* ɵɵproperty */]("ngModel", ctx.masterPassword);
        core["Sb" /* ɵɵadvance */](5);
        core["Cc" /* ɵɵpropertyInterpolate */]("appA11yTitle", core["wc" /* ɵɵpipeBind1 */](31, 13, "toggleVisibility"));
        core["Sb" /* ɵɵadvance */](3);
        core["Bc" /* ɵɵproperty */]("ngClass", core["Gc" /* ɵɵpureFunction2 */](21, password_reprompt_component_c0, !ctx.showPassword, ctx.showPassword));
        core["Sb" /* ɵɵadvance */](7);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](41, 15, "passwordConfirmationDesc"), " ");
        core["Sb" /* ɵɵadvance */](10);
        core["Rc" /* ɵɵtextInterpolate */](core["wc" /* ɵɵpipeBind1 */](51, 17, "ok"));
        core["Sb" /* ɵɵadvance */](5);
        core["Sc" /* ɵɵtextInterpolate1 */](" ", core["wc" /* ɵɵpipeBind1 */](56, 19, "cancel"), " ");
    } }, directives: [fesm2015_forms["z" /* ɵangular_packages_forms_forms_ba */], fesm2015_forms["p" /* NgControlStatusGroup */], fesm2015_forms["q" /* NgForm */], BoxRowDirective, fesm2015_forms["c" /* DefaultValueAccessor */], fesm2015_forms["x" /* RequiredValidator */], autofocus_directive_AutofocusDirective, fesm2015_forms["o" /* NgControlStatus */], fesm2015_forms["r" /* NgModel */], StopClickDirective, BlurClickDirective, A11yTitleDirective, common["j" /* NgClass */]], pipes: [I18nPipe], encapsulation: 2 });
const ɵPasswordRepromptComponent_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](components_password_reprompt_component_PasswordRepromptComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](components_password_reprompt_component_PasswordRepromptComponent, [{
        type: core["l" /* Component */],
        args: [{
                templateUrl: 'password-reprompt.component.html',
            }]
    }], null, null); })();

// CONCATENATED MODULE: ./src/popup/services/password-reprompt.service.ts




class password_reprompt_service_PasswordRepromptService extends services_passwordReprompt_service_PasswordRepromptService {
    constructor() {
        super(...arguments);
        this.component = components_password_reprompt_component_PasswordRepromptComponent;
    }
}
password_reprompt_service_PasswordRepromptService.ɵfac = function PasswordRepromptService_Factory(t) { return ɵPasswordRepromptService_BaseFactory(t || password_reprompt_service_PasswordRepromptService); };
password_reprompt_service_PasswordRepromptService.ɵprov = core["Zb" /* ɵɵdefineInjectable */]({ token: password_reprompt_service_PasswordRepromptService, factory: password_reprompt_service_PasswordRepromptService.ɵfac });
const ɵPasswordRepromptService_BaseFactory = /*@__PURE__*/ core["lc" /* ɵɵgetInheritedFactory */](password_reprompt_service_PasswordRepromptService);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](password_reprompt_service_PasswordRepromptService, [{
        type: core["A" /* Injectable */]
    }], null, null); })();

// CONCATENATED MODULE: ./jslib/common/src/abstractions/appId.service.ts
class AppIdService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/fileUpload.service.ts
class FileUploadService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/notifications.service.ts
class NotificationsService {
}

// CONCATENATED MODULE: ./jslib/common/src/abstractions/settings.service.ts
class SettingsService {
}

// EXTERNAL MODULE: ./src/services/browserMessaging.service.ts
var browserMessaging_service = __webpack_require__(224);

// EXTERNAL MODULE: ./jslib/common/src/services/state.service.ts
var state_service = __webpack_require__(225);

// EXTERNAL MODULE: ./jslib/common/src/services/search.service.ts
var search_service = __webpack_require__(226);

// CONCATENATED MODULE: ./src/popup/services/popup-search.service.ts

class popup_search_service_PopupSearchService extends search_service["a" /* SearchService */] {
    constructor(mainSearchService, cipherService, consoleLogService, i18nService) {
        super(cipherService, consoleLogService, i18nService);
        this.mainSearchService = mainSearchService;
    }
    clearIndex() {
        throw new Error('Not available.');
    }
    indexCiphers() {
        throw new Error('Not available.');
    }
    getIndexForSearch() {
        return this.mainSearchService.getIndexForSearch();
    }
}

// CONCATENATED MODULE: ./src/popup/services/services.module.ts
var services_module_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





















































function getBgService(service) {
    return () => {
        const page = browserApi["a" /* BrowserApi */].getBackgroundPage();
        return page ? page.bitwardenMain[service] : null;
    };
}
const isPrivateMode = browserApi["a" /* BrowserApi */].getBackgroundPage() == null;
const services_module_stateService = new state_service["a" /* StateService */]();
const services_module_messagingService = new browserMessaging_service["a" /* default */]();
const services_module_logService = getBgService('logService')();
const services_module_searchService = isPrivateMode ? null : new popup_search_service_PopupSearchService(getBgService('searchService')(), getBgService('cipherService')(), services_module_logService, getBgService('i18nService')());
function initFactory(platformUtilsService, i18nService, storageService, popupUtilsService) {
    return () => services_module_awaiter(this, void 0, void 0, function* () {
        if (!popupUtilsService.inPopup(window)) {
            window.document.body.classList.add('body-full');
        }
        else if (window.screen.availHeight < 600) {
            window.document.body.classList.add('body-xs');
        }
        else if (window.screen.availHeight <= 800) {
            window.document.body.classList.add('body-sm');
        }
        if (!isPrivateMode) {
            yield services_module_stateService.save(constants_service["a" /* ConstantsService */].disableFaviconKey, yield storageService.get(constants_service["a" /* ConstantsService */].disableFaviconKey));
            yield services_module_stateService.save(constants_service["a" /* ConstantsService */].disableBadgeCounterKey, yield storageService.get(constants_service["a" /* ConstantsService */].disableBadgeCounterKey));
            const htmlEl = window.document.documentElement;
            const theme = yield platformUtilsService.getEffectiveTheme();
            htmlEl.classList.add('theme_' + theme);
            platformUtilsService.onDefaultSystemThemeChange((sysTheme) => services_module_awaiter(this, void 0, void 0, function* () {
                const bwTheme = yield storageService.get(constants_service["a" /* ConstantsService */].themeKey);
                if (bwTheme == null || bwTheme === themeType["a" /* ThemeType */].System) {
                    htmlEl.classList.remove('theme_' + themeType["a" /* ThemeType */].Light, 'theme_' + themeType["a" /* ThemeType */].Dark);
                    htmlEl.classList.add('theme_' + sysTheme);
                }
            }));
            htmlEl.classList.add('locale_' + i18nService.translationLocale);
            // Workaround for slow performance on external monitors on Chrome + MacOS
            // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64
            if (platformUtilsService.isChrome() &&
                navigator.platform.indexOf('Mac') > -1 &&
                popupUtilsService.inPopup(window) &&
                (window.screenLeft < 0 ||
                    window.screenTop < 0 ||
                    window.screenLeft > window.screen.width ||
                    window.screenTop > window.screen.height)) {
                htmlEl.classList.add('force_redraw');
                services_module_logService.info('Force redraw is on');
            }
        }
    });
}
class ServicesModule {
}
ServicesModule.ɵfac = function ServicesModule_Factory(t) { return new (t || ServicesModule)(); };
ServicesModule.ɵmod = core["bc" /* ɵɵdefineNgModule */]({ type: ServicesModule });
ServicesModule.ɵinj = core["ac" /* ɵɵdefineInjector */]({ providers: [
        ValidationService,
        AuthGuardService,
        services_lock_guard_service_LockGuardService,
        launch_guard_service_LaunchGuardService,
        services_unauth_guard_service_UnauthGuardService,
        debounceNavigationService_DebounceNavigationService,
        popup_utils_service["a" /* PopupUtilsService */],
        services_broadcaster_service_BroadcasterService,
        modal_service_ModalService,
        { provide: messaging_service["a" /* MessagingService */], useValue: services_module_messagingService },
        { provide: AuthService, useFactory: getBgService('authService'), deps: [] },
        { provide: StateService, useValue: services_module_stateService },
        { provide: SearchService, useValue: services_module_searchService },
        { provide: AuditService, useFactory: getBgService('auditService'), deps: [] },
        { provide: FileUploadService, useFactory: getBgService('fileUploadService'), deps: [] },
        { provide: CipherService, useFactory: getBgService('cipherService'), deps: [] },
        {
            provide: CryptoFunctionService,
            useFactory: getBgService('cryptoFunctionService'),
            deps: [],
        },
        { provide: FolderService, useFactory: getBgService('folderService'), deps: [] },
        { provide: CollectionService, useFactory: getBgService('collectionService'), deps: [] },
        { provide: LogService, useFactory: getBgService('logService'), deps: [] },
        { provide: EnvironmentService, useFactory: getBgService('environmentService'), deps: [] },
        { provide: TotpService, useFactory: getBgService('totpService'), deps: [] },
        { provide: TokenService, useFactory: getBgService('tokenService'), deps: [] },
        { provide: I18nService, useFactory: getBgService('i18nService'), deps: [] },
        { provide: CryptoService, useFactory: getBgService('cryptoService'), deps: [] },
        { provide: EventService, useFactory: getBgService('eventService'), deps: [] },
        { provide: PolicyService, useFactory: getBgService('policyService'), deps: [] },
        {
            provide: platformUtils_service["a" /* PlatformUtilsService */],
            useFactory: getBgService('platformUtilsService'),
            deps: [],
        },
        {
            provide: PasswordGenerationService,
            useFactory: getBgService('passwordGenerationService'),
            deps: [],
        },
        { provide: ApiService, useFactory: getBgService('apiService'), deps: [] },
        { provide: SyncService, useFactory: getBgService('syncService'), deps: [] },
        { provide: UserService, useFactory: getBgService('userService'), deps: [] },
        { provide: SettingsService, useFactory: getBgService('settingsService'), deps: [] },
        { provide: StorageService, useFactory: getBgService('storageService'), deps: [] },
        { provide: AppIdService, useFactory: getBgService('appIdService'), deps: [] },
        { provide: AutofillService, useFactory: getBgService('autofillService'), deps: [] },
        { provide: ExportService, useFactory: getBgService('exportService'), deps: [] },
        { provide: SendService, useFactory: getBgService('sendService'), deps: [] },
        { provide: KeyConnectorService, useFactory: getBgService('keyConnectorService'), deps: [] },
        {
            provide: UserVerificationService,
            useFactory: getBgService('userVerificationService'),
            deps: [],
        },
        {
            provide: VaultTimeoutService,
            useFactory: getBgService('vaultTimeoutService'),
            deps: [],
        },
        {
            provide: NotificationsService,
            useFactory: getBgService('notificationsService'),
            deps: [],
        },
        {
            provide: core["d" /* APP_INITIALIZER */],
            useFactory: initFactory,
            deps: [platformUtils_service["a" /* PlatformUtilsService */], I18nService, StorageService, popup_utils_service["a" /* PopupUtilsService */]],
            multi: true,
        },
        {
            provide: core["G" /* LOCALE_ID */],
            useFactory: () => isPrivateMode ? null : getBgService('i18nService')().translationLocale,
            deps: [],
        },
        { provide: passwordReprompt_service_PasswordRepromptService, useClass: password_reprompt_service_PasswordRepromptService },
    ], imports: [[
            angular2_toaster["d" /* ToasterModule */],
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && core["Mc" /* ɵɵsetNgModuleScope */](ServicesModule, { imports: [angular2_toaster["d" /* ToasterModule */]] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](ServicesModule, [{
        type: core["H" /* NgModule */],
        args: [{
                imports: [
                    angular2_toaster["d" /* ToasterModule */],
                ],
                declarations: [],
                providers: [
                    ValidationService,
                    AuthGuardService,
                    services_lock_guard_service_LockGuardService,
                    launch_guard_service_LaunchGuardService,
                    services_unauth_guard_service_UnauthGuardService,
                    debounceNavigationService_DebounceNavigationService,
                    popup_utils_service["a" /* PopupUtilsService */],
                    services_broadcaster_service_BroadcasterService,
                    modal_service_ModalService,
                    { provide: messaging_service["a" /* MessagingService */], useValue: services_module_messagingService },
                    { provide: AuthService, useFactory: getBgService('authService'), deps: [] },
                    { provide: StateService, useValue: services_module_stateService },
                    { provide: SearchService, useValue: services_module_searchService },
                    { provide: AuditService, useFactory: getBgService('auditService'), deps: [] },
                    { provide: FileUploadService, useFactory: getBgService('fileUploadService'), deps: [] },
                    { provide: CipherService, useFactory: getBgService('cipherService'), deps: [] },
                    {
                        provide: CryptoFunctionService,
                        useFactory: getBgService('cryptoFunctionService'),
                        deps: [],
                    },
                    { provide: FolderService, useFactory: getBgService('folderService'), deps: [] },
                    { provide: CollectionService, useFactory: getBgService('collectionService'), deps: [] },
                    { provide: LogService, useFactory: getBgService('logService'), deps: [] },
                    { provide: EnvironmentService, useFactory: getBgService('environmentService'), deps: [] },
                    { provide: TotpService, useFactory: getBgService('totpService'), deps: [] },
                    { provide: TokenService, useFactory: getBgService('tokenService'), deps: [] },
                    { provide: I18nService, useFactory: getBgService('i18nService'), deps: [] },
                    { provide: CryptoService, useFactory: getBgService('cryptoService'), deps: [] },
                    { provide: EventService, useFactory: getBgService('eventService'), deps: [] },
                    { provide: PolicyService, useFactory: getBgService('policyService'), deps: [] },
                    {
                        provide: platformUtils_service["a" /* PlatformUtilsService */],
                        useFactory: getBgService('platformUtilsService'),
                        deps: [],
                    },
                    {
                        provide: PasswordGenerationService,
                        useFactory: getBgService('passwordGenerationService'),
                        deps: [],
                    },
                    { provide: ApiService, useFactory: getBgService('apiService'), deps: [] },
                    { provide: SyncService, useFactory: getBgService('syncService'), deps: [] },
                    { provide: UserService, useFactory: getBgService('userService'), deps: [] },
                    { provide: SettingsService, useFactory: getBgService('settingsService'), deps: [] },
                    { provide: StorageService, useFactory: getBgService('storageService'), deps: [] },
                    { provide: AppIdService, useFactory: getBgService('appIdService'), deps: [] },
                    { provide: AutofillService, useFactory: getBgService('autofillService'), deps: [] },
                    { provide: ExportService, useFactory: getBgService('exportService'), deps: [] },
                    { provide: SendService, useFactory: getBgService('sendService'), deps: [] },
                    { provide: KeyConnectorService, useFactory: getBgService('keyConnectorService'), deps: [] },
                    {
                        provide: UserVerificationService,
                        useFactory: getBgService('userVerificationService'),
                        deps: [],
                    },
                    {
                        provide: VaultTimeoutService,
                        useFactory: getBgService('vaultTimeoutService'),
                        deps: [],
                    },
                    {
                        provide: NotificationsService,
                        useFactory: getBgService('notificationsService'),
                        deps: [],
                    },
                    {
                        provide: core["d" /* APP_INITIALIZER */],
                        useFactory: initFactory,
                        deps: [platformUtils_service["a" /* PlatformUtilsService */], I18nService, StorageService, popup_utils_service["a" /* PopupUtilsService */]],
                        multi: true,
                    },
                    {
                        provide: core["G" /* LOCALE_ID */],
                        useFactory: () => isPrivateMode ? null : getBgService('i18nService')().translationLocale,
                        deps: [],
                    },
                    { provide: passwordReprompt_service_PasswordRepromptService, useClass: password_reprompt_service_PasswordRepromptService },
                ],
            }]
    }], null, null); })();

// EXTERNAL MODULE: ./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js
var platform_browser = __webpack_require__(59);

// EXTERNAL MODULE: ./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/animations.js
var fesm2015_animations = __webpack_require__(283);

// CONCATENATED MODULE: ./src/popup/app-routing.animations.ts

const queryShown = Object(animations["g" /* query */])(':enter, :leave', [
    Object(animations["j" /* style */])({ position: 'fixed', width: '100%', height: '100%' }),
], { optional: true });
// ref: https://github.com/angular/angular/issues/15477
const queryChildRoute = Object(animations["g" /* query */])('router-outlet ~ *', [
    Object(animations["j" /* style */])({}),
    Object(animations["e" /* animate */])(1, Object(animations["j" /* style */])({})),
], { optional: true });
const speed = '0.4s';
function queryTranslate(direction, axis, from, to, zIndex = 1000) {
    return Object(animations["g" /* query */])(':' + direction, [
        Object(animations["j" /* style */])({ transform: 'translate' + axis + '(' + from + '%)', zIndex: zIndex, boxShadow: '0 3px 2px -2px gray' }),
        Object(animations["e" /* animate */])(speed + ' ease-in-out', Object(animations["j" /* style */])({ transform: 'translate' + axis + '(' + to + '%)' })),
    ], { optional: true });
}
function queryTranslateX(direction, from, to, zIndex = 1000) {
    return queryTranslate(direction, 'X', from, to, zIndex);
}
function queryTranslateY(direction, from, to, zIndex = 1000) {
    return queryTranslate(direction, 'Y', from, to, zIndex);
}
const inSlideLeft = [
    queryShown,
    Object(animations["f" /* group */])([
        queryTranslateX('enter', 100, 0),
        queryTranslateX('leave', 0, -100),
        queryChildRoute,
    ]),
];
const outSlideRight = [
    queryShown,
    Object(animations["f" /* group */])([
        queryTranslateX('enter', -100, 0),
        queryTranslateX('leave', 0, 100),
    ]),
];
const inSlideUp = [
    queryShown,
    Object(animations["f" /* group */])([
        queryTranslateY('enter', 100, 0, 1010),
        queryTranslateY('leave', 0, 0),
        queryChildRoute,
    ]),
];
const outSlideDown = [
    queryShown,
    Object(animations["f" /* group */])([
        queryTranslateY('enter', 0, 0),
        queryTranslateY('leave', 0, 100, 1010),
    ]),
];
const inSlideDown = [
    queryShown,
    Object(animations["f" /* group */])([
        queryTranslateY('enter', -100, 0, 1010),
        queryTranslateY('leave', 0, 0),
        queryChildRoute,
    ]),
];
const outSlideUp = [
    queryShown,
    Object(animations["f" /* group */])([
        queryTranslateY('enter', 0, 0),
        queryTranslateY('leave', 0, -100, 1010),
    ]),
];
function tabsToCiphers(fromState, toState) {
    if (fromState == null || toState === null || toState.indexOf('ciphers_') === -1) {
        return false;
    }
    return (fromState.indexOf('ciphers_') === 0 && fromState.indexOf('ciphers_direction=b') === -1) ||
        fromState === 'tabs';
}
function ciphersToTabs(fromState, toState) {
    if (fromState == null || toState === null || fromState.indexOf('ciphers_') === -1) {
        return false;
    }
    return toState.indexOf('ciphers_direction=b') === 0 || toState === 'tabs';
}
function ciphersToView(fromState, toState) {
    if (fromState == null || toState === null) {
        return false;
    }
    return fromState.indexOf('ciphers_') === 0 &&
        (toState === 'view-cipher' || toState === 'add-cipher' || toState === 'clone-cipher');
}
function viewToCiphers(fromState, toState) {
    if (fromState == null || toState === null) {
        return false;
    }
    return (fromState === 'view-cipher' || fromState === 'add-cipher' || fromState === 'clone-cipher') &&
        toState.indexOf('ciphers_') === 0;
}
const routerTransition = Object(animations["l" /* trigger */])('routerTransition', [
    Object(animations["k" /* transition */])('void => home', inSlideLeft),
    Object(animations["k" /* transition */])('void => tabs', inSlideLeft),
    Object(animations["k" /* transition */])('home => environment, home => login, home => register', inSlideUp),
    Object(animations["k" /* transition */])('login => home', outSlideDown),
    Object(animations["k" /* transition */])('login => hint', inSlideUp),
    Object(animations["k" /* transition */])('login => tabs, login => 2fa', inSlideLeft),
    Object(animations["k" /* transition */])('hint => login, register => home, environment => home', outSlideDown),
    Object(animations["k" /* transition */])('2fa => login', outSlideRight),
    Object(animations["k" /* transition */])('2fa => 2fa-options', inSlideUp),
    Object(animations["k" /* transition */])('2fa-options => 2fa', outSlideDown),
    Object(animations["k" /* transition */])('2fa => tabs', inSlideLeft),
    Object(animations["k" /* transition */])(tabsToCiphers, inSlideLeft),
    Object(animations["k" /* transition */])(ciphersToTabs, outSlideRight),
    Object(animations["k" /* transition */])(ciphersToView, inSlideUp),
    Object(animations["k" /* transition */])(viewToCiphers, outSlideDown),
    Object(animations["k" /* transition */])('tabs => view-cipher', inSlideUp),
    Object(animations["k" /* transition */])('view-cipher => tabs', outSlideDown),
    Object(animations["k" /* transition */])('view-cipher => edit-cipher, view-cipher => cipher-password-history', inSlideUp),
    Object(animations["k" /* transition */])('edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs', outSlideDown),
    Object(animations["k" /* transition */])('view-cipher => clone-cipher', inSlideUp),
    Object(animations["k" /* transition */])('clone-cipher => view-cipher, clone-cipher => tabs', outSlideDown),
    Object(animations["k" /* transition */])('view-cipher => share-cipher', inSlideUp),
    Object(animations["k" /* transition */])('share-cipher => view-cipher', outSlideDown),
    Object(animations["k" /* transition */])('tabs => add-cipher', inSlideUp),
    Object(animations["k" /* transition */])('add-cipher => tabs', outSlideDown),
    Object(animations["k" /* transition */])('generator => generator-history, tabs => generator-history', inSlideLeft),
    Object(animations["k" /* transition */])('generator-history => generator, generator-history => tabs', outSlideRight),
    Object(animations["k" /* transition */])('add-cipher => generator, edit-cipher => generator, clone-cipher => generator', inSlideUp),
    Object(animations["k" /* transition */])('generator => add-cipher, generator => edit-cipher, generator => clone-cipher', outSlideDown),
    Object(animations["k" /* transition */])('edit-cipher => attachments, edit-cipher => collections', inSlideLeft),
    Object(animations["k" /* transition */])('attachments => edit-cipher, collections => edit-cipher', outSlideRight),
    Object(animations["k" /* transition */])('clone-cipher => attachments, clone-cipher => collections', inSlideLeft),
    Object(animations["k" /* transition */])('attachments => clone-cipher, collections => clone-cipher', outSlideRight),
    Object(animations["k" /* transition */])('tabs => export', inSlideLeft),
    Object(animations["k" /* transition */])('export => tabs', outSlideRight),
    Object(animations["k" /* transition */])('tabs => folders', inSlideLeft),
    Object(animations["k" /* transition */])('folders => tabs', outSlideRight),
    Object(animations["k" /* transition */])('folders => edit-folder, folders => add-folder', inSlideUp),
    Object(animations["k" /* transition */])('edit-folder => folders, add-folder => folders', outSlideDown),
    Object(animations["k" /* transition */])('tabs => sync', inSlideLeft),
    Object(animations["k" /* transition */])('sync => tabs', outSlideRight),
    Object(animations["k" /* transition */])('tabs => options', inSlideLeft),
    Object(animations["k" /* transition */])('options => tabs', outSlideRight),
    Object(animations["k" /* transition */])('tabs => premium', inSlideLeft),
    Object(animations["k" /* transition */])('premium => tabs', outSlideRight),
    Object(animations["k" /* transition */])('tabs => lock', inSlideDown),
    Object(animations["k" /* transition */])('tabs => send-type', inSlideLeft),
    Object(animations["k" /* transition */])('send-type => tabs', outSlideRight),
    Object(animations["k" /* transition */])('tabs => add-send, send-type => add-send', inSlideUp),
    Object(animations["k" /* transition */])('add-send => tabs, add-send => send-type', outSlideDown),
    Object(animations["k" /* transition */])('tabs => edit-send, send-type => edit-send', inSlideUp),
    Object(animations["k" /* transition */])('edit-send => tabs, edit-send => send-type', outSlideDown),
]);

// CONCATENATED MODULE: ./src/popup/app.component.ts
var app_component_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




























class app_component_AppComponent {
    constructor(toasterService, storageService, broadcasterService, authService, i18nService, router, stateService, messagingService, changeDetectorRef, ngZone, sanitizer, platformUtilsService, keyConnectoService) {
        this.toasterService = toasterService;
        this.storageService = storageService;
        this.broadcasterService = broadcasterService;
        this.authService = authService;
        this.i18nService = i18nService;
        this.router = router;
        this.stateService = stateService;
        this.messagingService = messagingService;
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
        this.sanitizer = sanitizer;
        this.platformUtilsService = platformUtilsService;
        this.keyConnectoService = keyConnectoService;
        this.toasterConfig = new angular2_toaster["b" /* ToasterConfig */]({
            showCloseButton: false,
            mouseoverTimerStop: true,
            animation: 'slideUp',
            limit: 2,
            positionClass: 'toast-bottom-full-width',
            newestOnTop: false,
        });
        this.lastActivity = null;
    }
    ngOnInit() {
        if (browserApi["a" /* BrowserApi */].getBackgroundPage() == null) {
            return;
        }
        this.ngZone.runOutsideAngular(() => {
            window.onmousemove = () => this.recordActivity();
            window.onmousedown = () => this.recordActivity();
            window.ontouchstart = () => this.recordActivity();
            window.onclick = () => this.recordActivity();
            window.onscroll = () => this.recordActivity();
            window.onkeypress = () => this.recordActivity();
        });
        window.bitwardenPopupMainMessageListener = (msg, sender, sendResponse) => app_component_awaiter(this, void 0, void 0, function* () {
            if (msg.command === 'doneLoggingOut') {
                this.ngZone.run(() => app_component_awaiter(this, void 0, void 0, function* () {
                    this.authService.logOut(() => {
                        if (msg.expired) {
                            this.showToast({
                                type: 'warning',
                                title: this.i18nService.t('loggedOut'),
                                text: this.i18nService.t('loginExpired'),
                            });
                        }
                        this.router.navigate(['home']);
                        this.stateService.purge();
                    });
                    this.changeDetectorRef.detectChanges();
                }));
            }
            else if (msg.command === 'authBlocked') {
                this.ngZone.run(() => {
                    this.router.navigate(['home']);
                });
            }
            else if (msg.command === 'locked') {
                this.stateService.purge();
                this.ngZone.run(() => {
                    this.router.navigate(['lock']);
                });
            }
            else if (msg.command === 'showDialog') {
                yield this.showDialog(msg);
            }
            else if (msg.command === 'showToast') {
                this.ngZone.run(() => {
                    this.showToast(msg);
                });
            }
            else if (msg.command === 'reloadProcess') {
                const windowReload = this.platformUtilsService.isSafari() ||
                    this.platformUtilsService.isFirefox() || this.platformUtilsService.isOpera();
                if (windowReload) {
                    // Wait to make sure background has reloaded first.
                    window.setTimeout(() => browserApi["a" /* BrowserApi */].reloadExtension(window), 2000);
                }
            }
            else if (msg.command === 'reloadPopup') {
                this.ngZone.run(() => {
                    this.router.navigate(['/']);
                });
            }
            else if (msg.command === 'convertAccountToKeyConnector') {
                this.ngZone.run(() => app_component_awaiter(this, void 0, void 0, function* () {
                    yield this.keyConnectoService.setConvertAccountRequired(true);
                    this.router.navigate(['/remove-password']);
                }));
            }
            else {
                msg.webExtSender = sender;
                this.broadcasterService.send(msg);
            }
        });
        browserApi["a" /* BrowserApi */].messageListener('app.component', window.bitwardenPopupMainMessageListener);
        this.router.events.subscribe(event => {
            if (event instanceof fesm2015_router["b" /* NavigationEnd */]) {
                const url = event.urlAfterRedirects || event.url || '';
                if (url.startsWith('/tabs/') && window.previousPopupUrl != null &&
                    window.previousPopupUrl.startsWith('/tabs/')) {
                    this.stateService.remove('GroupingsComponent');
                    this.stateService.remove('GroupingsComponentScope');
                    this.stateService.remove('CiphersComponent');
                    this.stateService.remove('SendGroupingsComponent');
                    this.stateService.remove('SendGroupingsComponentScope');
                    this.stateService.remove('SendTypeComponent');
                }
                if (url.startsWith('/tabs/')) {
                    this.stateService.remove('addEditCipherInfo');
                }
                window.previousPopupUrl = url;
                // Clear route direction after animation (400ms)
                if (window.routeDirection != null) {
                    window.setTimeout(() => {
                        window.routeDirection = null;
                    }, 400);
                }
            }
        });
    }
    getState(outlet) {
        if (outlet.activatedRouteData.state === 'ciphers') {
            const routeDirection = window.routeDirection != null ? window.routeDirection : '';
            return 'ciphers_direction=' + routeDirection + '_' +
                outlet.activatedRoute.queryParams.value.folderId + '_' +
                outlet.activatedRoute.queryParams.value.collectionId;
        }
        else {
            return outlet.activatedRouteData.state;
        }
    }
    recordActivity() {
        return app_component_awaiter(this, void 0, void 0, function* () {
            const now = (new Date()).getTime();
            if (this.lastActivity != null && now - this.lastActivity < 250) {
                return;
            }
            this.lastActivity = now;
            this.storageService.save(constants_service["a" /* ConstantsService */].lastActiveKey, now);
        });
    }
    showToast(msg) {
        const toast = {
            type: msg.type,
            title: msg.title,
        };
        if (typeof (msg.text) === 'string') {
            toast.body = msg.text;
        }
        else if (msg.text.length === 1) {
            toast.body = msg.text[0];
        }
        else {
            let message = '';
            msg.text.forEach((t) => message += ('<p>' + this.sanitizer.sanitize(core["X" /* SecurityContext */].HTML, t) + '</p>'));
            toast.body = message;
            toast.bodyOutputType = angular2_toaster["a" /* BodyOutputType */].TrustedHtml;
        }
        if (msg.options != null) {
            if (msg.options.trustedHtml === true) {
                toast.bodyOutputType = angular2_toaster["a" /* BodyOutputType */].TrustedHtml;
            }
            if (msg.options.timeout != null && msg.options.timeout > 0) {
                toast.timeout = msg.options.timeout;
            }
        }
        this.toasterService.popAsync(toast);
    }
    showDialog(msg) {
        return app_component_awaiter(this, void 0, void 0, function* () {
            let iconClasses = null;
            const type = msg.type;
            if (type != null) {
                // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.
                switch (type) {
                    case 'success':
                        iconClasses = 'fa-check text-success';
                        break;
                    case 'warning':
                        iconClasses = 'fa-warning text-warning';
                        break;
                    case 'error':
                        iconClasses = 'fa-bolt text-danger';
                        break;
                    case 'info':
                        iconClasses = 'fa-info-circle text-info';
                        break;
                    default:
                        break;
                }
            }
            const cancelText = msg.cancelText;
            const confirmText = msg.confirmText;
            const confirmed = yield sweetalert2["a" /* default */].fire({
                heightAuto: false,
                buttonsStyling: false,
                icon: type,
                iconHtml: iconClasses != null ? `<i class="swal-custom-icon fa ${iconClasses}"></i>` : undefined,
                text: msg.text,
                html: msg.html,
                titleText: msg.title,
                showCancelButton: (cancelText != null),
                cancelButtonText: cancelText,
                showConfirmButton: true,
                confirmButtonText: confirmText == null ? this.i18nService.t('ok') : confirmText,
                timer: 300000,
            });
            this.messagingService.send('showDialogResolve', {
                dialogId: msg.dialogId,
                confirmed: confirmed.value,
            });
        });
    }
}
app_component_AppComponent.ɵfac = function AppComponent_Factory(t) { return new (t || app_component_AppComponent)(core["dc" /* ɵɵdirectiveInject */](angular2_toaster["e" /* ToasterService */]), core["dc" /* ɵɵdirectiveInject */](StorageService), core["dc" /* ɵɵdirectiveInject */](services_broadcaster_service_BroadcasterService), core["dc" /* ɵɵdirectiveInject */](AuthService), core["dc" /* ɵɵdirectiveInject */](I18nService), core["dc" /* ɵɵdirectiveInject */](fesm2015_router["e" /* Router */]), core["dc" /* ɵɵdirectiveInject */](StateService), core["dc" /* ɵɵdirectiveInject */](messaging_service["a" /* MessagingService */]), core["dc" /* ɵɵdirectiveInject */](core["j" /* ChangeDetectorRef */]), core["dc" /* ɵɵdirectiveInject */](core["M" /* NgZone */]), core["dc" /* ɵɵdirectiveInject */](platform_browser["b" /* DomSanitizer */]), core["dc" /* ɵɵdirectiveInject */](platformUtils_service["a" /* PlatformUtilsService */]), core["dc" /* ɵɵdirectiveInject */](KeyConnectorService)); };
app_component_AppComponent.ɵcmp = core["Xb" /* ɵɵdefineComponent */]({ type: app_component_AppComponent, selectors: [["app-root"]], decls: 8, vars: 2, consts: [["aria-live", "polite", 3, "toasterconfig"], ["o", "outlet"]], template: function AppComponent_Template(rf, ctx) { if (rf & 1) {
        core["Qc" /* ɵɵtext */](0, "\n        ");
        core["ec" /* ɵɵelement */](1, "toaster-container", 0);
        core["Qc" /* ɵɵtext */](2, "\n        ");
        core["jc" /* ɵɵelementStart */](3, "main");
        core["Qc" /* ɵɵtext */](4, "\n            ");
        core["ec" /* ɵɵelement */](5, "router-outlet", null, 1);
        core["Qc" /* ɵɵtext */](7, "\n        ");
        core["ic" /* ɵɵelementEnd */]();
    } if (rf & 2) {
        const _r0 = core["Ic" /* ɵɵreference */](6);
        core["Sb" /* ɵɵadvance */](1);
        core["Bc" /* ɵɵproperty */]("toasterconfig", ctx.toasterConfig);
        core["Sb" /* ɵɵadvance */](2);
        core["Bc" /* ɵɵproperty */]("@routerTransition", ctx.getState(_r0));
    } }, directives: [angular2_toaster["c" /* ToasterContainerComponent */], fesm2015_router["i" /* RouterOutlet */]], encapsulation: 2, data: { animation: [routerTransition] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](app_component_AppComponent, [{
        type: core["l" /* Component */],
        args: [{
                selector: 'app-root',
                styles: [],
                animations: [routerTransition],
                template: `
        <toaster-container [toasterconfig]="toasterConfig" aria-live="polite"></toaster-container>
        <main [@routerTransition]="getState(o)">
            <router-outlet #o="outlet"></router-outlet>
        </main>`,
            }]
    }], function () { return [{ type: angular2_toaster["e" /* ToasterService */] }, { type: StorageService }, { type: services_broadcaster_service_BroadcasterService }, { type: AuthService }, { type: I18nService }, { type: fesm2015_router["e" /* Router */] }, { type: StateService }, { type: messaging_service["a" /* MessagingService */] }, { type: core["j" /* ChangeDetectorRef */] }, { type: core["M" /* NgZone */] }, { type: platform_browser["b" /* DomSanitizer */] }, { type: platformUtils_service["a" /* PlatformUtilsService */] }, { type: KeyConnectorService }]; }, null); })();

// CONCATENATED MODULE: ./jslib/angular/src/pipes/search-ciphers.pipe.ts


class SearchCiphersPipe {
    transform(ciphers, searchText, deleted = false) {
        if (ciphers == null || ciphers.length === 0) {
            return [];
        }
        if (searchText == null || searchText.length < 2) {
            return ciphers.filter(c => {
                return deleted !== c.isDeleted;
            });
        }
        searchText = searchText.trim().toLowerCase();
        return ciphers.filter(c => {
            if (deleted !== c.isDeleted) {
                return false;
            }
            if (c.name != null && c.name.toLowerCase().indexOf(searchText) > -1) {
                return true;
            }
            if (searchText.length >= 8 && c.id.startsWith(searchText)) {
                return true;
            }
            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(searchText) > -1) {
                return true;
            }
            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(searchText) > -1) {
                return true;
            }
            return false;
        });
    }
}
SearchCiphersPipe.ɵfac = function SearchCiphersPipe_Factory(t) { return new (t || SearchCiphersPipe)(); };
SearchCiphersPipe.ɵpipe = core["cc" /* ɵɵdefinePipe */]({ name: "searchCiphers", type: SearchCiphersPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](SearchCiphersPipe, [{
        type: core["R" /* Pipe */],
        args: [{
                name: 'searchCiphers',
            }]
    }], null, null); })();

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/az.js
var az = __webpack_require__(418);
var az_default = /*#__PURE__*/__webpack_require__.n(az);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/be.js
var be = __webpack_require__(419);
var be_default = /*#__PURE__*/__webpack_require__.n(be);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/bg.js
var bg = __webpack_require__(420);
var bg_default = /*#__PURE__*/__webpack_require__.n(bg);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/bn.js
var bn = __webpack_require__(421);
var bn_default = /*#__PURE__*/__webpack_require__.n(bn);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/ca.js
var ca = __webpack_require__(422);
var ca_default = /*#__PURE__*/__webpack_require__.n(ca);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/cs.js
var cs = __webpack_require__(423);
var cs_default = /*#__PURE__*/__webpack_require__.n(cs);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/da.js
var da = __webpack_require__(424);
var da_default = /*#__PURE__*/__webpack_require__.n(da);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/de.js
var de = __webpack_require__(425);
var de_default = /*#__PURE__*/__webpack_require__.n(de);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/el.js
var el = __webpack_require__(426);
var el_default = /*#__PURE__*/__webpack_require__.n(el);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/en-GB.js
var en_GB = __webpack_require__(427);
var en_GB_default = /*#__PURE__*/__webpack_require__.n(en_GB);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/en-IN.js
var en_IN = __webpack_require__(428);
var en_IN_default = /*#__PURE__*/__webpack_require__.n(en_IN);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/es.js
var es = __webpack_require__(429);
var es_default = /*#__PURE__*/__webpack_require__.n(es);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/et.js
var et = __webpack_require__(430);
var et_default = /*#__PURE__*/__webpack_require__.n(et);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/fa.js
var fa = __webpack_require__(431);
var fa_default = /*#__PURE__*/__webpack_require__.n(fa);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/fi.js
var fi = __webpack_require__(432);
var fi_default = /*#__PURE__*/__webpack_require__.n(fi);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/fr.js
var fr = __webpack_require__(433);
var fr_default = /*#__PURE__*/__webpack_require__.n(fr);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/he.js
var he = __webpack_require__(434);
var he_default = /*#__PURE__*/__webpack_require__.n(he);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/hr.js
var hr = __webpack_require__(435);
var hr_default = /*#__PURE__*/__webpack_require__.n(hr);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/hu.js
var hu = __webpack_require__(436);
var hu_default = /*#__PURE__*/__webpack_require__.n(hu);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/id.js
var id = __webpack_require__(437);
var id_default = /*#__PURE__*/__webpack_require__.n(id);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/it.js
var it = __webpack_require__(438);
var it_default = /*#__PURE__*/__webpack_require__.n(it);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/ja.js
var ja = __webpack_require__(439);
var ja_default = /*#__PURE__*/__webpack_require__.n(ja);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/kn.js
var kn = __webpack_require__(440);
var kn_default = /*#__PURE__*/__webpack_require__.n(kn);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/ko.js
var ko = __webpack_require__(441);
var ko_default = /*#__PURE__*/__webpack_require__.n(ko);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/lv.js
var lv = __webpack_require__(442);
var lv_default = /*#__PURE__*/__webpack_require__.n(lv);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/ml.js
var ml = __webpack_require__(443);
var ml_default = /*#__PURE__*/__webpack_require__.n(ml);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/nb.js
var nb = __webpack_require__(444);
var nb_default = /*#__PURE__*/__webpack_require__.n(nb);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/nl.js
var nl = __webpack_require__(445);
var nl_default = /*#__PURE__*/__webpack_require__.n(nl);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/pl.js
var pl = __webpack_require__(446);
var pl_default = /*#__PURE__*/__webpack_require__.n(pl);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/pt.js
var pt = __webpack_require__(447);
var pt_default = /*#__PURE__*/__webpack_require__.n(pt);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/pt-PT.js
var pt_PT = __webpack_require__(448);
var pt_PT_default = /*#__PURE__*/__webpack_require__.n(pt_PT);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/ro.js
var ro = __webpack_require__(449);
var ro_default = /*#__PURE__*/__webpack_require__.n(ro);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/ru.js
var ru = __webpack_require__(450);
var ru_default = /*#__PURE__*/__webpack_require__.n(ru);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/sk.js
var sk = __webpack_require__(451);
var sk_default = /*#__PURE__*/__webpack_require__.n(sk);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/sr.js
var sr = __webpack_require__(452);
var sr_default = /*#__PURE__*/__webpack_require__.n(sr);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/sv.js
var sv = __webpack_require__(453);
var sv_default = /*#__PURE__*/__webpack_require__.n(sv);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/th.js
var th = __webpack_require__(454);
var th_default = /*#__PURE__*/__webpack_require__.n(th);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/tr.js
var tr = __webpack_require__(455);
var tr_default = /*#__PURE__*/__webpack_require__.n(tr);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/uk.js
var uk = __webpack_require__(456);
var uk_default = /*#__PURE__*/__webpack_require__.n(uk);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/vi.js
var vi = __webpack_require__(457);
var vi_default = /*#__PURE__*/__webpack_require__.n(vi);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/zh-Hans.js
var zh_Hans = __webpack_require__(458);
var zh_Hans_default = /*#__PURE__*/__webpack_require__.n(zh_Hans);

// EXTERNAL MODULE: ./node_modules/@angular/common/locales/zh-Hant.js
var zh_Hant = __webpack_require__(459);
var zh_Hant_default = /*#__PURE__*/__webpack_require__.n(zh_Hant);

// CONCATENATED MODULE: ./src/popup/app.module.ts
























































































































Object(common["v" /* registerLocaleData */])(az_default.a, 'az');
Object(common["v" /* registerLocaleData */])(be_default.a, 'be');
Object(common["v" /* registerLocaleData */])(bg_default.a, 'bg');
Object(common["v" /* registerLocaleData */])(bn_default.a, 'bn');
Object(common["v" /* registerLocaleData */])(ca_default.a, 'ca');
Object(common["v" /* registerLocaleData */])(cs_default.a, 'cs');
Object(common["v" /* registerLocaleData */])(da_default.a, 'da');
Object(common["v" /* registerLocaleData */])(de_default.a, 'de');
Object(common["v" /* registerLocaleData */])(el_default.a, 'el');
Object(common["v" /* registerLocaleData */])(en_GB_default.a, 'en-GB');
Object(common["v" /* registerLocaleData */])(en_IN_default.a, 'en-IN');
Object(common["v" /* registerLocaleData */])(es_default.a, 'es');
Object(common["v" /* registerLocaleData */])(et_default.a, 'et');
Object(common["v" /* registerLocaleData */])(fa_default.a, 'fa');
Object(common["v" /* registerLocaleData */])(fi_default.a, 'fi');
Object(common["v" /* registerLocaleData */])(fr_default.a, 'fr');
Object(common["v" /* registerLocaleData */])(he_default.a, 'he');
Object(common["v" /* registerLocaleData */])(hr_default.a, 'hr');
Object(common["v" /* registerLocaleData */])(hu_default.a, 'hu');
Object(common["v" /* registerLocaleData */])(id_default.a, 'id');
Object(common["v" /* registerLocaleData */])(it_default.a, 'it');
Object(common["v" /* registerLocaleData */])(ja_default.a, 'ja');
Object(common["v" /* registerLocaleData */])(ko_default.a, 'ko');
Object(common["v" /* registerLocaleData */])(kn_default.a, 'kn');
Object(common["v" /* registerLocaleData */])(lv_default.a, 'lv');
Object(common["v" /* registerLocaleData */])(ml_default.a, 'ml');
Object(common["v" /* registerLocaleData */])(nb_default.a, 'nb');
Object(common["v" /* registerLocaleData */])(nl_default.a, 'nl');
Object(common["v" /* registerLocaleData */])(pl_default.a, 'pl');
Object(common["v" /* registerLocaleData */])(pt_default.a, 'pt-BR');
Object(common["v" /* registerLocaleData */])(pt_PT_default.a, 'pt-PT');
Object(common["v" /* registerLocaleData */])(ro_default.a, 'ro');
Object(common["v" /* registerLocaleData */])(ru_default.a, 'ru');
Object(common["v" /* registerLocaleData */])(sk_default.a, 'sk');
Object(common["v" /* registerLocaleData */])(sr_default.a, 'sr');
Object(common["v" /* registerLocaleData */])(sv_default.a, 'sv');
Object(common["v" /* registerLocaleData */])(th_default.a, 'th');
Object(common["v" /* registerLocaleData */])(tr_default.a, 'tr');
Object(common["v" /* registerLocaleData */])(uk_default.a, 'uk');
Object(common["v" /* registerLocaleData */])(vi_default.a, 'vi');
Object(common["v" /* registerLocaleData */])(zh_Hans_default.a, 'zh-CN');
Object(common["v" /* registerLocaleData */])(zh_Hant_default.a, 'zh-TW');
class AppModule {
}
AppModule.ɵfac = function AppModule_Factory(t) { return new (t || AppModule)(); };
AppModule.ɵmod = core["bc" /* ɵɵdefineNgModule */]({ type: AppModule, bootstrap: [app_component_AppComponent] });
AppModule.ɵinj = core["ac" /* ɵɵdefineInjector */]({ providers: [
        common["c" /* CurrencyPipe */],
        common["e" /* DatePipe */],
    ], imports: [[
            a11y["a" /* A11yModule */],
            AppRoutingModule,
            fesm2015_animations["a" /* BrowserAnimationsModule */],
            platform_browser["a" /* BrowserModule */],
            drag_drop["d" /* DragDropModule */],
            fesm2015_forms["k" /* FormsModule */],
            fesm2015_forms["w" /* ReactiveFormsModule */],
            scrolling["g" /* ScrollingModule */],
            ServicesModule,
            angular2_toaster["d" /* ToasterModule */].forRoot(),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && core["Mc" /* ɵɵsetNgModuleScope */](AppModule, { declarations: [A11yTitleDirective,
        action_buttons_component_ActionButtonsComponent,
        vault_add_edit_component_AddEditComponent,
        vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent,
        api_action_directive_ApiActionDirective,
        app_component_AppComponent,
        vault_attachments_component_AttachmentsComponent,
        autofocus_directive_AutofocusDirective,
        BlurClickDirective,
        BoxRowDirective,
        CalloutComponent,
        cipherListVirtualScroll_directive_CipherListVirtualScroll,
        cipher_row_component_CipherRowComponent,
        vault_ciphers_component_CiphersComponent,
        vault_collections_component_CollectionsComponent,
        color_password_pipe_ColorPasswordPipe,
        current_tab_component_CurrentTabComponent,
        accounts_environment_component_EnvironmentComponent,
        excluded_domains_component_ExcludedDomainsComponent,
        settings_export_component_ExportComponent,
        FallbackSrcDirective,
        settings_folder_add_edit_component_FolderAddEditComponent,
        FoldersComponent,
        vault_groupings_component_GroupingsComponent,
        accounts_hint_component_HintComponent,
        home_component_HomeComponent,
        I18nPipe,
        icon_component_IconComponent,
        InputVerbatimDirective,
        accounts_lock_component_LockComponent,
        accounts_login_component_LoginComponent,
        options_component_OptionsComponent,
        generator_password_generator_component_PasswordGeneratorComponent,
        generator_password_generator_history_component_PasswordGeneratorHistoryComponent,
        vault_password_history_component_PasswordHistoryComponent,
        components_password_reprompt_component_PasswordRepromptComponent,
        PopOutComponent,
        settings_premium_component_PremiumComponent,
        private_mode_component_PrivateModeComponent,
        accounts_register_component_RegisterComponent,
        SearchCiphersPipe,
        SelectCopyDirective,
        send_add_edit_component_SendAddEditComponent,
        send_efflux_dates_component_EffluxDatesComponent,
        send_groupings_component_SendGroupingsComponent,
        send_list_component_SendListComponent,
        send_type_component_SendTypeComponent,
        accounts_set_password_component_SetPasswordComponent,
        components_set_pin_component_SetPinComponent,
        settings_component_SettingsComponent,
        vault_share_component_ShareComponent,
        accounts_sso_component_SsoComponent,
        StopClickDirective,
        StopPropDirective,
        SyncComponent,
        TabsComponent,
        TrueFalseValueDirective,
        accounts_two_factor_component_TwoFactorComponent,
        accounts_two_factor_options_component_TwoFactorOptionsComponent,
        accounts_update_temp_password_component_UpdateTempPasswordComponent,
        settings_vault_timeout_input_component_VaultTimeoutInputComponent,
        components_verify_master_password_component_VerifyMasterPasswordComponent,
        vault_view_component_ViewComponent,
        vault_view_custom_fields_component_ViewCustomFieldsComponent,
        accounts_remove_password_component_RemovePasswordComponent], imports: [a11y["a" /* A11yModule */],
        AppRoutingModule,
        fesm2015_animations["a" /* BrowserAnimationsModule */],
        platform_browser["a" /* BrowserModule */],
        drag_drop["d" /* DragDropModule */],
        fesm2015_forms["k" /* FormsModule */],
        fesm2015_forms["w" /* ReactiveFormsModule */],
        scrolling["g" /* ScrollingModule */],
        ServicesModule, angular2_toaster["d" /* ToasterModule */]] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && core["Lb" /* ɵsetClassMetadata */](AppModule, [{
        type: core["H" /* NgModule */],
        args: [{
                imports: [
                    a11y["a" /* A11yModule */],
                    AppRoutingModule,
                    fesm2015_animations["a" /* BrowserAnimationsModule */],
                    platform_browser["a" /* BrowserModule */],
                    drag_drop["d" /* DragDropModule */],
                    fesm2015_forms["k" /* FormsModule */],
                    fesm2015_forms["w" /* ReactiveFormsModule */],
                    scrolling["g" /* ScrollingModule */],
                    ServicesModule,
                    angular2_toaster["d" /* ToasterModule */].forRoot(),
                ],
                declarations: [
                    A11yTitleDirective,
                    action_buttons_component_ActionButtonsComponent,
                    vault_add_edit_component_AddEditComponent,
                    vault_add_edit_custom_fields_component_AddEditCustomFieldsComponent,
                    api_action_directive_ApiActionDirective,
                    app_component_AppComponent,
                    vault_attachments_component_AttachmentsComponent,
                    autofocus_directive_AutofocusDirective,
                    BlurClickDirective,
                    BoxRowDirective,
                    CalloutComponent,
                    cipherListVirtualScroll_directive_CipherListVirtualScroll,
                    cipher_row_component_CipherRowComponent,
                    vault_ciphers_component_CiphersComponent,
                    vault_collections_component_CollectionsComponent,
                    color_password_pipe_ColorPasswordPipe,
                    current_tab_component_CurrentTabComponent,
                    accounts_environment_component_EnvironmentComponent,
                    excluded_domains_component_ExcludedDomainsComponent,
                    settings_export_component_ExportComponent,
                    FallbackSrcDirective,
                    settings_folder_add_edit_component_FolderAddEditComponent,
                    FoldersComponent,
                    vault_groupings_component_GroupingsComponent,
                    accounts_hint_component_HintComponent,
                    home_component_HomeComponent,
                    I18nPipe,
                    icon_component_IconComponent,
                    InputVerbatimDirective,
                    accounts_lock_component_LockComponent,
                    accounts_login_component_LoginComponent,
                    options_component_OptionsComponent,
                    generator_password_generator_component_PasswordGeneratorComponent,
                    generator_password_generator_history_component_PasswordGeneratorHistoryComponent,
                    vault_password_history_component_PasswordHistoryComponent,
                    components_password_reprompt_component_PasswordRepromptComponent,
                    PopOutComponent,
                    settings_premium_component_PremiumComponent,
                    private_mode_component_PrivateModeComponent,
                    accounts_register_component_RegisterComponent,
                    SearchCiphersPipe,
                    SelectCopyDirective,
                    send_add_edit_component_SendAddEditComponent,
                    send_efflux_dates_component_EffluxDatesComponent,
                    send_groupings_component_SendGroupingsComponent,
                    send_list_component_SendListComponent,
                    send_type_component_SendTypeComponent,
                    accounts_set_password_component_SetPasswordComponent,
                    components_set_pin_component_SetPinComponent,
                    settings_component_SettingsComponent,
                    vault_share_component_ShareComponent,
                    accounts_sso_component_SsoComponent,
                    StopClickDirective,
                    StopPropDirective,
                    SyncComponent,
                    TabsComponent,
                    TrueFalseValueDirective,
                    accounts_two_factor_component_TwoFactorComponent,
                    accounts_two_factor_options_component_TwoFactorOptionsComponent,
                    accounts_update_temp_password_component_UpdateTempPasswordComponent,
                    settings_vault_timeout_input_component_VaultTimeoutInputComponent,
                    components_verify_master_password_component_VerifyMasterPasswordComponent,
                    vault_view_component_ViewComponent,
                    vault_view_custom_fields_component_ViewCustomFieldsComponent,
                    accounts_remove_password_component_RemovePasswordComponent,
                ],
                entryComponents: [],
                providers: [
                    common["c" /* CurrencyPipe */],
                    common["e" /* DatePipe */],
                ],
                bootstrap: [app_component_AppComponent],
            }]
    }], null, null); })();

// CONCATENATED MODULE: ./src/popup/main.ts

// tslint:disable-next-line
__webpack_require__(725);


if (true) {
    Object(core["jb" /* enableProdMode */])();
}
function init() {
    platform_browser["c" /* platformBrowser */]().bootstrapModule(AppModule, { preserveWhitespaces: true });
}
init();


/***/ }),

/***/ 8:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaseResponse; });
class BaseResponse {
    constructor(response) {
        this.response = response;
    }
    getResponseProperty(propertyName, response = null, exactName = false) {
        if (propertyName == null || propertyName === '') {
            throw new Error('propertyName must not be null/empty.');
        }
        if (response == null && this.response != null) {
            response = this.response;
        }
        if (response == null) {
            return null;
        }
        if (!exactName && response[propertyName] === undefined) {
            let otherCasePropertyName = null;
            if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {
                otherCasePropertyName = propertyName.charAt(0).toLowerCase();
            }
            else {
                otherCasePropertyName = propertyName.charAt(0).toUpperCase();
            }
            if (propertyName.length > 1) {
                otherCasePropertyName += propertyName.slice(1);
            }
            propertyName = otherCasePropertyName;
            if (response[propertyName] === undefined) {
                propertyName = propertyName.toLowerCase();
            }
            if (response[propertyName] === undefined) {
                propertyName = propertyName.toUpperCase();
            }
        }
        return response[propertyName];
    }
}


/***/ }),

/***/ 80:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CipherView; });
/* harmony import */ var _enums_cipherRepromptType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48);
/* harmony import */ var _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);
/* harmony import */ var _cardView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(107);
/* harmony import */ var _identityView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(108);
/* harmony import */ var _loginView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88);
/* harmony import */ var _secureNoteView__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(114);






class CipherView {
    constructor(c) {
        var _a;
        this.id = null;
        this.organizationId = null;
        this.folderId = null;
        this.name = null;
        this.notes = null;
        this.type = null;
        this.favorite = false;
        this.organizationUseTotp = false;
        this.edit = false;
        this.viewPassword = true;
        this.login = new _loginView__WEBPACK_IMPORTED_MODULE_4__[/* LoginView */ "a"]();
        this.identity = new _identityView__WEBPACK_IMPORTED_MODULE_3__[/* IdentityView */ "a"]();
        this.card = new _cardView__WEBPACK_IMPORTED_MODULE_2__[/* CardView */ "a"]();
        this.secureNote = new _secureNoteView__WEBPACK_IMPORTED_MODULE_5__[/* SecureNoteView */ "a"]();
        this.attachments = null;
        this.fields = null;
        this.passwordHistory = null;
        this.collectionIds = null;
        this.revisionDate = null;
        this.deletedDate = null;
        this.reprompt = _enums_cipherRepromptType__WEBPACK_IMPORTED_MODULE_0__[/* CipherRepromptType */ "a"].None;
        if (!c) {
            return;
        }
        this.id = c.id;
        this.organizationId = c.organizationId;
        this.folderId = c.folderId;
        this.favorite = c.favorite;
        this.organizationUseTotp = c.organizationUseTotp;
        this.edit = c.edit;
        this.viewPassword = c.viewPassword;
        this.type = c.type;
        this.localData = c.localData;
        this.collectionIds = c.collectionIds;
        this.revisionDate = c.revisionDate;
        this.deletedDate = c.deletedDate;
        // Old locally stored ciphers might have reprompt == null. If so set it to None.
        this.reprompt = (_a = c.reprompt) !== null && _a !== void 0 ? _a : _enums_cipherRepromptType__WEBPACK_IMPORTED_MODULE_0__[/* CipherRepromptType */ "a"].None;
    }
    get item() {
        switch (this.type) {
            case _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__[/* CipherType */ "a"].Login:
                return this.login;
            case _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__[/* CipherType */ "a"].SecureNote:
                return this.secureNote;
            case _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__[/* CipherType */ "a"].Card:
                return this.card;
            case _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__[/* CipherType */ "a"].Identity:
                return this.identity;
            default:
                break;
        }
        return null;
    }
    get subTitle() {
        return this.item.subTitle;
    }
    get hasPasswordHistory() {
        return this.passwordHistory && this.passwordHistory.length > 0;
    }
    get hasAttachments() {
        return this.attachments && this.attachments.length > 0;
    }
    get hasOldAttachments() {
        if (this.hasAttachments) {
            for (let i = 0; i < this.attachments.length; i++) {
                if (this.attachments[i].key == null) {
                    return true;
                }
            }
        }
        return false;
    }
    get hasFields() {
        return this.fields && this.fields.length > 0;
    }
    get passwordRevisionDisplayDate() {
        if (this.type !== _enums_cipherType__WEBPACK_IMPORTED_MODULE_1__[/* CipherType */ "a"].Login || this.login == null) {
            return null;
        }
        else if (this.login.password == null || this.login.password === '') {
            return null;
        }
        return this.login.passwordRevisionDate;
    }
    get isDeleted() {
        return this.deletedDate != null;
    }
    get linkedFieldOptions() {
        return this.item.linkedFieldOptions;
    }
    linkedFieldValue(id) {
        var _a;
        const linkedFieldOption = (_a = this.linkedFieldOptions) === null || _a === void 0 ? void 0 : _a.get(id);
        if (linkedFieldOption == null) {
            return null;
        }
        const item = this.item;
        return this.item[linkedFieldOption.propertyKey];
    }
    linkedFieldI18nKey(id) {
        var _a;
        return (_a = this.linkedFieldOptions.get(id)) === null || _a === void 0 ? void 0 : _a.i18nKey;
    }
}


/***/ }),

/***/ 81:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HashPurpose; });
var HashPurpose;
(function (HashPurpose) {
    HashPurpose[HashPurpose["ServerAuthorization"] = 1] = "ServerAuthorization";
    HashPurpose[HashPurpose["LocalAuthorization"] = 2] = "LocalAuthorization";
})(HashPurpose || (HashPurpose = {}));


/***/ }),

/***/ 82:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ThemeType; });
var ThemeType;
(function (ThemeType) {
    ThemeType["System"] = "system";
    ThemeType["Light"] = "light";
    ThemeType["Dark"] = "dark";
    ThemeType["Nord"] = "nord";
    ThemeType["SolarizedDark"] = "solarizedDark";
})(ThemeType || (ThemeType = {}));


/***/ }),

/***/ 88:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginView; });
/* harmony import */ var _itemView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76);
/* harmony import */ var _misc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19);
/* harmony import */ var _misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




class LoginView extends _itemView__WEBPACK_IMPORTED_MODULE_0__[/* ItemView */ "a"] {
    constructor(l) {
        super();
        this.username = null;
        this.password = null;
        this.passwordRevisionDate = null;
        this.totp = null;
        this.uris = null;
        this.autofillOnPageLoad = null;
        if (!l) {
            return;
        }
        this.passwordRevisionDate = l.passwordRevisionDate;
        this.autofillOnPageLoad = l.autofillOnPageLoad;
    }
    get uri() {
        return this.hasUris ? this.uris[0].uri : null;
    }
    get maskedPassword() {
        return this.password != null ? '••••••••' : null;
    }
    get subTitle() {
        return this.username;
    }
    get canLaunch() {
        return this.hasUris && this.uris.some(u => u.canLaunch);
    }
    get hasTotp() {
        return !_misc_utils__WEBPACK_IMPORTED_MODULE_1__[/* Utils */ "a"].isNullOrWhitespace(this.totp);
    }
    get launchUri() {
        if (this.hasUris) {
            const uri = this.uris.find(u => u.canLaunch);
            if (uri != null) {
                return uri.launchUri;
            }
        }
        return null;
    }
    get hasUris() {
        return this.uris != null && this.uris.length > 0;
    }
}
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* LoginLinkedId */ "c"].Username),
    __metadata("design:type", String)
], LoginView.prototype, "username", void 0);
__decorate([
    Object(_misc_linkedFieldOption_decorator__WEBPACK_IMPORTED_MODULE_3__[/* linkedFieldOption */ "a"])(_enums_linkedIdType__WEBPACK_IMPORTED_MODULE_2__[/* LoginLinkedId */ "c"].Password),
    __metadata("design:type", String)
], LoginView.prototype, "password", void 0);


/***/ }),

/***/ 9:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConstantsService; });
class ConstantsService {
    constructor() {
        this.environmentUrlsKey = ConstantsService.environmentUrlsKey;
        this.disableGaKey = ConstantsService.disableGaKey;
        this.disableAddLoginNotificationKey = ConstantsService.disableAddLoginNotificationKey;
        this.disableContextMenuItemKey = ConstantsService.disableContextMenuItemKey;
        this.disableFaviconKey = ConstantsService.disableFaviconKey;
        this.disableBadgeCounterKey = ConstantsService.disableBadgeCounterKey;
        this.disableAutoTotpCopyKey = ConstantsService.disableAutoTotpCopyKey;
        this.disableAutoBiometricsPromptKey = ConstantsService.disableAutoBiometricsPromptKey;
        this.enableAutoFillOnPageLoadKey = ConstantsService.enableAutoFillOnPageLoadKey;
        this.autoFillOnPageLoadDefaultKey = ConstantsService.autoFillOnPageLoadDefaultKey;
        this.vaultTimeoutKey = ConstantsService.vaultTimeoutKey;
        this.vaultTimeoutActionKey = ConstantsService.vaultTimeoutActionKey;
        this.lastActiveKey = ConstantsService.lastActiveKey;
        this.neverDomainsKey = ConstantsService.neverDomainsKey;
        this.installedVersionKey = ConstantsService.installedVersionKey;
        this.localeKey = ConstantsService.localeKey;
        this.themeKey = ConstantsService.themeKey;
        this.collapsedGroupingsKey = ConstantsService.collapsedGroupingsKey;
        this.autoConfirmFingerprints = ConstantsService.autoConfirmFingerprints;
        this.dontShowCardsCurrentTab = ConstantsService.dontShowCardsCurrentTab;
        this.dontShowIdentitiesCurrentTab = ConstantsService.dontShowIdentitiesCurrentTab;
        this.defaultUriMatch = ConstantsService.defaultUriMatch;
        this.pinProtectedKey = ConstantsService.pinProtectedKey;
        this.protectedPin = ConstantsService.protectedPin;
        this.clearClipboardKey = ConstantsService.clearClipboardKey;
        this.eventCollectionKey = ConstantsService.eventCollectionKey;
        this.ssoCodeVerifierKey = ConstantsService.ssoCodeVerifierKey;
        this.ssoStateKey = ConstantsService.ssoStateKey;
        this.biometricUnlockKey = ConstantsService.biometricUnlockKey;
        this.biometricText = ConstantsService.biometricText;
        this.biometricAwaitingAcceptance = ConstantsService.biometricAwaitingAcceptance;
        this.biometricFingerprintValidated = ConstantsService.biometricFingerprintValidated;
    }
}
ConstantsService.environmentUrlsKey = 'environmentUrls';
ConstantsService.disableGaKey = 'disableGa';
ConstantsService.disableAddLoginNotificationKey = 'disableAddLoginNotification';
ConstantsService.disableChangedPasswordNotificationKey = 'disableChangedPasswordNotification';
ConstantsService.disableContextMenuItemKey = 'disableContextMenuItem';
ConstantsService.disableFaviconKey = 'disableFavicon';
ConstantsService.disableBadgeCounterKey = 'disableBadgeCounter';
ConstantsService.disableAutoTotpCopyKey = 'disableAutoTotpCopy';
ConstantsService.disableAutoBiometricsPromptKey = 'noAutoPromptBiometrics';
ConstantsService.enableAutoFillOnPageLoadKey = 'enableAutoFillOnPageLoad';
ConstantsService.autoFillOnPageLoadDefaultKey = 'autoFillOnPageLoadDefault';
ConstantsService.vaultTimeoutKey = 'lockOption';
ConstantsService.vaultTimeoutActionKey = 'vaultTimeoutAction';
ConstantsService.lastActiveKey = 'lastActive';
ConstantsService.neverDomainsKey = 'neverDomains';
ConstantsService.installedVersionKey = 'installedVersion';
ConstantsService.localeKey = 'locale';
ConstantsService.themeKey = 'theme';
ConstantsService.collapsedGroupingsKey = 'collapsedGroupings';
ConstantsService.autoConfirmFingerprints = 'autoConfirmFingerprints';
ConstantsService.dontShowCardsCurrentTab = 'dontShowCardsCurrentTab';
ConstantsService.dontShowIdentitiesCurrentTab = 'dontShowIdentitiesCurrentTab';
ConstantsService.defaultUriMatch = 'defaultUriMatch';
ConstantsService.pinProtectedKey = 'pinProtectedKey';
ConstantsService.protectedPin = 'protectedPin';
ConstantsService.clearClipboardKey = 'clearClipboardKey';
ConstantsService.eventCollectionKey = 'eventCollection';
ConstantsService.ssoCodeVerifierKey = 'ssoCodeVerifier';
ConstantsService.ssoStateKey = 'ssoState';
ConstantsService.biometricUnlockKey = 'biometric';
ConstantsService.biometricText = 'biometricText';
ConstantsService.biometricAwaitingAcceptance = 'biometricAwaitingAcceptance';
ConstantsService.biometricFingerprintValidated = 'biometricFingerprintValidated';


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,